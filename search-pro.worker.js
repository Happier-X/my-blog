const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":318,\"nextId\":318,\"documentIds\":{\"0\":\"1\",\"1\":\"1@0\",\"2\":\"1@1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"3#如何更好地使用联想词记忆\",\"6\":\"3#我的联想词\",\"7\":\"3@0\",\"8\":\"3@1\",\"9\":\"4\",\"10\":\"4#坐标系\",\"11\":\"4#编码\",\"12\":\"4#缓冲\",\"13\":\"4#色相\",\"14\":\"4@0\",\"15\":\"4@1\",\"16\":\"5\",\"17\":\"5#正常情况\",\"18\":\"5#存在小循环\",\"19\":\"5#存在翻色\",\"20\":\"5@0\",\"21\":\"5@1\",\"22\":\"6\",\"23\":\"6#正常情况\",\"24\":\"6@0\",\"25\":\"6@1\",\"26\":\"7\",\"27\":\"8\",\"28\":\"8#爱好\",\"29\":\"8#最近在读\",\"30\":\"8#最近在看\",\"31\":\"8#联系方式\",\"32\":\"9\",\"33\":\"10\",\"34\":\"10@0\",\"35\":\"10@1\",\"36\":\"11\",\"37\":\"11#查看当前镜像源\",\"38\":\"11#更换淘宝镜像源\",\"39\":\"11#切换回官方镜像源\",\"40\":\"11@0\",\"41\":\"11@1\",\"42\":\"12\",\"43\":\"12#使用-try-catch-捕获异常\",\"44\":\"12#使用-promise-catch-捕获异常\",\"45\":\"12#优化异常捕获\",\"46\":\"12@0\",\"47\":\"12@1\",\"48\":\"13\",\"49\":\"13#vue-实现文字跑马灯效果\",\"50\":\"13#组件源码\",\"51\":\"13#组件的使用\",\"52\":\"13#效果展示\",\"53\":\"13@0\",\"54\":\"13@1\",\"55\":\"14\",\"56\":\"14#效果描述\",\"57\":\"14#实现方法\",\"58\":\"14#效果展示\",\"59\":\"14@0\",\"60\":\"14@1\",\"61\":\"15\",\"62\":\"15#效果描述\",\"63\":\"15#实现方法\",\"64\":\"15#效果展示\",\"65\":\"15@0\",\"66\":\"15@1\",\"67\":\"16\",\"68\":\"16@0\",\"69\":\"16@1\",\"70\":\"17\",\"71\":\"17#单行文本溢出显示省略号\",\"72\":\"17#多行文本溢出显示省略号\",\"73\":\"17@0\",\"74\":\"17@1\",\"75\":\"18\",\"76\":\"18@0\",\"77\":\"18@1\",\"78\":\"19\",\"79\":\"20\",\"80\":\"21\",\"81\":\"21#下载并安装go语言环境\",\"82\":\"21#验证安装\",\"83\":\"21#安装代码编辑器\",\"84\":\"21@0\",\"85\":\"21@1\",\"86\":\"22\",\"87\":\"23\",\"88\":\"23#安装-nest-cli\",\"89\":\"23#创建-nest-项目\",\"90\":\"23#运行项目\",\"91\":\"23@0\",\"92\":\"23@1\",\"93\":\"24\",\"94\":\"24#控制反转-ioc\",\"95\":\"24#依赖注入-di\",\"96\":\"24#两者关系\",\"97\":\"24#依赖注入的实现\",\"98\":\"24#nest-中依赖注入的实现\",\"99\":\"24@0\",\"100\":\"24@1\",\"101\":\"25\",\"102\":\"25#什么是控制器\",\"103\":\"25#路由\",\"104\":\"25#基本使用\",\"105\":\"25#设置路由前缀-prefix\",\"106\":\"25#处理请求参数\",\"107\":\"25#查询字符串-query-string\",\"108\":\"25#url-参数-url-params\",\"109\":\"25#请求体-request-body\",\"110\":\"25#请求头-request-header\",\"111\":\"25#请求对象-request-object\",\"112\":\"25#状态码\",\"113\":\"25#响应头\",\"114\":\"25@0\",\"115\":\"25@1\",\"116\":\"26\",\"117\":\"26#什么是提供者\",\"118\":\"26#定义、注册和使用提供者\",\"119\":\"26#标准提供者\",\"120\":\"26#自定义提供者\",\"121\":\"26#值提供者-usevalue\",\"122\":\"26#非类提供者\",\"123\":\"26#类提供者-useclass\",\"124\":\"26#工厂提供者-usefactory\",\"125\":\"26#别名提供者-useexisting\",\"126\":\"26@0\",\"127\":\"26@1\",\"128\":\"27\",\"129\":\"27#什么是模块\",\"130\":\"27#全局模块\",\"131\":\"27#动态模块\",\"132\":\"27@0\",\"133\":\"27@1\",\"134\":\"28\",\"135\":\"28#什么是中间件\",\"136\":\"28#普通中间件\",\"137\":\"28#局部中间件\",\"138\":\"28#全局中间件\",\"139\":\"28@0\",\"140\":\"28@1\",\"141\":\"29\",\"142\":\"29#什么是异常过滤器\",\"143\":\"29#创建异常过滤器\",\"144\":\"29#使用异常过滤器\",\"145\":\"29#局部使用\",\"146\":\"29#全局使用\",\"147\":\"29@0\",\"148\":\"29@1\",\"149\":\"30\",\"150\":\"30#什么是管道\",\"151\":\"30#内置管道\",\"152\":\"30#自定义管道\",\"153\":\"30#管道的绑定方式\",\"154\":\"30#控制器绑定\",\"155\":\"30#路由绑定\",\"156\":\"30#方法参数绑定\",\"157\":\"30#全局绑定\",\"158\":\"30#类验证器\",\"159\":\"30@0\",\"160\":\"30@1\",\"161\":\"31\",\"162\":\"31#什么是守卫\",\"163\":\"31#创建守卫\",\"164\":\"31#应用守卫\",\"165\":\"31#应用于控制器或单个路由\",\"166\":\"31#应用于全局\",\"167\":\"31#反射器实现角色控制守卫\",\"168\":\"31@0\",\"169\":\"31@1\",\"170\":\"32\",\"171\":\"32#什么是拦截器\",\"172\":\"32#创建拦截器\",\"173\":\"32#使用拦截器\",\"174\":\"32#控制器中使用\",\"175\":\"32#模块中定义\",\"176\":\"32#全局使用\",\"177\":\"32@0\",\"178\":\"32@1\",\"179\":\"33\",\"180\":\"33#创建自定义装饰器\",\"181\":\"33#装饰器聚合\",\"182\":\"33@0\",\"183\":\"33@1\",\"184\":\"34\",\"185\":\"34#安装需要的库\",\"186\":\"34#在模块中引入-multer\",\"187\":\"34#在控制器中使用-multer\",\"188\":\"34#单文件上传\",\"189\":\"34#多文件上传\",\"190\":\"34#文件直接下载\",\"191\":\"34#使用文件流下载\",\"192\":\"34@0\",\"193\":\"34@1\",\"194\":\"35\",\"195\":\"35#配置\",\"196\":\"35#访问\",\"197\":\"35@0\",\"198\":\"35@1\",\"199\":\"36\",\"200\":\"37\",\"201\":\"37#相机的成像原理\",\"202\":\"37#曝光三要素\",\"203\":\"37#光圈\",\"204\":\"37#快门\",\"205\":\"37#感光度\",\"206\":\"37#安全快门\",\"207\":\"37@0\",\"208\":\"37@1\",\"209\":\"38\",\"210\":\"38#相机分类\",\"211\":\"38#画幅分类\",\"212\":\"38#焦距和焦段\",\"213\":\"38@0\",\"214\":\"38@1\",\"215\":\"39\",\"216\":\"39#风光摄影\",\"217\":\"39#扫街-活动-摄影\",\"218\":\"39#人像摄影\",\"219\":\"39#参数设定整体思路\",\"220\":\"39#关于光比\",\"221\":\"39@0\",\"222\":\"39@1\",\"223\":\"40\",\"224\":\"40#构图的底层逻辑\",\"225\":\"40#如何学习\",\"226\":\"40@0\",\"227\":\"40@1\",\"228\":\"41\",\"229\":\"41#搜集好照片\",\"230\":\"41#学会分析\",\"231\":\"41@0\",\"232\":\"41@1\",\"233\":\"42\",\"234\":\"43\",\"235\":\"43#如何使用-gpio\",\"236\":\"43#点亮一颗小灯\",\"237\":\"43@0\",\"238\":\"43@1\",\"239\":\"44\",\"240\":\"45\",\"241\":\"45#windows-平台\",\"242\":\"45#下载安装包并安装\",\"243\":\"45#添加存储\",\"244\":\"45#设置开机自启\",\"245\":\"45#软件更新\",\"246\":\"45#android-平台\",\"247\":\"45#安装-termux\",\"248\":\"45#安装-alist\",\"249\":\"45#添加存储-1\",\"250\":\"45#设置一键启动脚本\",\"251\":\"45#更新-alist\",\"252\":\"45@0\",\"253\":\"45@1\",\"254\":\"46\",\"255\":\"46#查看配置信息\",\"256\":\"46#配置用户信息\",\"257\":\"46#配置代理\",\"258\":\"46#设置全局代理\",\"259\":\"46#取消设置全局代理\",\"260\":\"46#设置对-github-代理\",\"261\":\"46#取消设置对-github-代理\",\"262\":\"46@0\",\"263\":\"46@1\",\"264\":\"47\",\"265\":\"47#acg助手-专为bilibili定制的综合辅助扩展\",\"266\":\"47#bookmark-cleaner-一键清理失效书签\",\"267\":\"47#proxy-switchyomega\",\"268\":\"47#ublock-origin\",\"269\":\"47#扩展管理器-extension-manager\",\"270\":\"47#篡改猴\",\"271\":\"47#青柠起始页\",\"272\":\"47@0\",\"273\":\"47@1\",\"274\":\"48\",\"275\":\"48#自动保存\",\"276\":\"48#设置字体大小\",\"277\":\"48#设置字体系列\",\"278\":\"48#设置自动格式化\",\"279\":\"48#设置对话框样式\",\"280\":\"48#设置光标动画样式\",\"281\":\"48#设置-html-标签关联编辑\",\"282\":\"48#设置-javascript-语义检查\",\"283\":\"48#设置-javascript、typescript-格式化时添加分号\",\"284\":\"48@0\",\"285\":\"48@1\",\"286\":\"49\",\"287\":\"49#微信\",\"288\":\"49#qq\",\"289\":\"49#geek\",\"290\":\"49#bandizip\",\"291\":\"49#clash-verge\",\"292\":\"49#pixpin\",\"293\":\"49#git\",\"294\":\"49#vscode\",\"295\":\"49#alist\",\"296\":\"49#raylink\",\"297\":\"49#potplayer\",\"298\":\"49#apifox\",\"299\":\"49@0\",\"300\":\"49@1\",\"301\":\"50\",\"302\":\"50#登录抖音网页版\",\"303\":\"50#打开私信页面\",\"304\":\"50#通过浏览器开发者工具审查元素\",\"305\":\"50#下载并保存\",\"306\":\"50#发送到微信并保存\",\"307\":\"50@0\",\"308\":\"50@1\",\"309\":\"51\",\"310\":\"52\",\"311\":\"52#登山路线\",\"312\":\"52#旅行建议\",\"313\":\"52#美食推荐\",\"314\":\"52@0\",\"315\":\"52@1\",\"316\":\"53\",\"317\":\"54\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,19],\"1\":[null,null,1],\"2\":[null,null,4],\"3\":[1,1],\"4\":[1],\"5\":[1,4],\"6\":[1,2],\"7\":[null,null,1],\"8\":[null,null,2],\"9\":[3],\"10\":[1,1],\"11\":[1,2],\"12\":[1,4],\"13\":[1,11],\"14\":[null,null,1],\"15\":[null,null,2],\"16\":[1,1],\"17\":[1,67],\"18\":[1,101],\"19\":[1,96],\"20\":[null,null,1],\"21\":[null,null,2],\"22\":[1,1],\"23\":[1,60],\"24\":[null,null,1],\"25\":[null,null,2],\"26\":[1,1],\"27\":[1,6],\"28\":[1,4],\"29\":[1,3],\"30\":[1,5],\"31\":[1,14],\"32\":[1],\"33\":[2,19],\"34\":[null,null,1],\"35\":[null,null,1],\"36\":[2],\"37\":[1,3],\"38\":[1,8],\"39\":[1,8],\"40\":[null,null,1],\"41\":[null,null,1],\"42\":[2],\"43\":[4,11],\"44\":[4,11],\"45\":[1,33],\"46\":[null,null,1],\"47\":[null,null,1],\"48\":[1],\"49\":[2,3],\"50\":[1,106],\"51\":[1,44],\"52\":[1],\"53\":[null,null,1],\"54\":[null,null,1],\"55\":[2],\"56\":[1,3],\"57\":[1,6],\"58\":[1],\"59\":[null,null,1],\"60\":[null,null,1],\"61\":[1],\"62\":[1,3],\"63\":[1,4],\"64\":[1],\"65\":[null,null,1],\"66\":[null,null,1],\"67\":[2,9],\"68\":[null,null,1],\"69\":[null,null,1],\"70\":[1],\"71\":[1,23],\"72\":[1,26],\"73\":[null,null,1],\"74\":[null,null,1],\"75\":[2,16],\"76\":[null,null,1],\"77\":[null,null,1],\"78\":[1,2],\"79\":[1],\"80\":[2],\"81\":[1,4],\"82\":[1,6],\"83\":[1,5],\"84\":[null,null,1],\"85\":[null,null,1],\"86\":[2,4],\"87\":[3],\"88\":[3,15],\"89\":[3,3],\"90\":[1,12],\"91\":[null,null,1],\"92\":[null,null,1],\"93\":[1],\"94\":[3,19],\"95\":[3,20],\"96\":[1,4],\"97\":[1,63],\"98\":[2,95],\"99\":[null,null,1],\"100\":[null,null,1],\"101\":[1],\"102\":[1,10],\"103\":[1],\"104\":[1,62],\"105\":[3,30],\"106\":[1],\"107\":[4,27],\"108\":[4,29],\"109\":[4,29],\"110\":[4,26],\"111\":[4,24],\"112\":[1,28],\"113\":[1,32],\"114\":[null,null,1],\"115\":[null,null,1],\"116\":[1],\"117\":[1,10],\"118\":[2,10],\"119\":[1,41],\"120\":[1],\"121\":[3,45],\"122\":[1,49],\"123\":[3,31],\"124\":[3,45],\"125\":[3,30],\"126\":[null,null,1],\"127\":[null,null,1],\"128\":[1],\"129\":[1,31],\"130\":[1,6],\"131\":[1,66],\"132\":[null,null,1],\"133\":[null,null,1],\"134\":[1],\"135\":[1,19],\"136\":[1,54],\"137\":[1,47],\"138\":[1,28],\"139\":[null,null,1],\"140\":[null,null,1],\"141\":[1],\"142\":[1,10],\"143\":[1,48],\"144\":[1,4],\"145\":[1,38],\"146\":[1,30],\"147\":[null,null,1],\"148\":[null,null,1],\"149\":[1],\"150\":[1,9],\"151\":[1,15],\"152\":[1,49],\"153\":[1,2],\"154\":[1,33],\"155\":[1,33],\"156\":[1,28],\"157\":[1,30],\"158\":[1,95],\"159\":[null,null,1],\"160\":[null,null,1],\"161\":[1],\"162\":[1,11],\"163\":[1,39],\"164\":[1],\"165\":[1,34],\"166\":[1,28],\"167\":[1,74],\"168\":[null,null,1],\"169\":[null,null,1],\"170\":[1],\"171\":[1,7],\"172\":[1,34],\"173\":[1,2],\"174\":[1,35],\"175\":[1,30],\"176\":[1,29],\"177\":[null,null,1],\"178\":[null,null,1],\"179\":[1],\"180\":[1,24],\"181\":[1,25],\"182\":[null,null,1],\"183\":[null,null,1],\"184\":[1],\"185\":[1,15],\"186\":[2,65],\"187\":[2,4],\"188\":[1,30],\"189\":[1,33],\"190\":[1,31],\"191\":[1,53],\"192\":[null,null,1],\"193\":[null,null,1],\"194\":[1],\"195\":[1,32],\"196\":[1,6],\"197\":[null,null,1],\"198\":[null,null,1],\"199\":[2,4],\"200\":[1],\"201\":[1,14],\"202\":[1,4],\"203\":[1,27],\"204\":[1,21],\"205\":[1,13],\"206\":[1,5],\"207\":[null,null,1],\"208\":[null,null,4],\"209\":[1],\"210\":[1,14],\"211\":[1,10],\"212\":[1,14],\"213\":[null,null,1],\"214\":[null,null,4],\"215\":[1],\"216\":[1,27],\"217\":[3,21],\"218\":[1,3],\"219\":[1,26],\"220\":[1,22],\"221\":[null,null,1],\"222\":[null,null,1],\"223\":[1],\"224\":[1,12],\"225\":[1,5],\"226\":[null,null,1],\"227\":[null,null,1],\"228\":[1],\"229\":[1,5],\"230\":[1,4],\"231\":[null,null,1],\"232\":[null,null,1],\"233\":[1,4],\"234\":[1],\"235\":[2,12],\"236\":[1,55],\"237\":[null,null,1],\"238\":[null,null,1],\"239\":[2,4],\"240\":[3],\"241\":[2],\"242\":[1,41],\"243\":[1,3],\"244\":[1,21],\"245\":[1,5],\"246\":[2],\"247\":[2,12],\"248\":[2,32],\"249\":[1,3],\"250\":[1,28],\"251\":[2,6],\"252\":[null,null,1],\"253\":[null,null,3],\"254\":[2],\"255\":[1,3],\"256\":[1,11],\"257\":[1],\"258\":[1,10],\"259\":[1,7],\"260\":[3,12],\"261\":[3,9],\"262\":[null,null,1],\"263\":[null,null,1],\"264\":[1],\"265\":[2,7],\"266\":[3,7],\"267\":[2,5],\"268\":[2,8],\"269\":[4,4],\"270\":[1,4],\"271\":[1,6],\"272\":[null,null,1],\"273\":[null,null,1],\"274\":[2,3],\"275\":[1,8],\"276\":[1,8],\"277\":[1,13],\"278\":[1,10],\"279\":[1,7],\"280\":[1,7],\"281\":[3,8],\"282\":[3,10],\"283\":[4,7],\"284\":[null,null,1],\"285\":[null,null,1],\"286\":[1],\"287\":[1,5],\"288\":[1,5],\"289\":[1,8],\"290\":[1,5],\"291\":[2,5],\"292\":[1,6],\"293\":[1,4],\"294\":[1,7],\"295\":[1,9],\"296\":[1,4],\"297\":[1,5],\"298\":[1,7],\"299\":[null,null,1],\"300\":[null,null,1],\"301\":[1,4],\"302\":[1,2],\"303\":[1,2],\"304\":[1,7],\"305\":[1,3],\"306\":[1,2],\"307\":[null,null,1],\"308\":[null,null,3],\"309\":[1,2],\"310\":[1,4],\"311\":[1,4],\"312\":[1,11],\"313\":[1,14],\"314\":[null,null,1],\"315\":[null,null,1],\"316\":[1,1],\"317\":[1,3]},\"averageFieldLength\":[1.3929299353344138,19.383724961101045,1.3529163273868192],\"storedFields\":{\"0\":{\"h\":\"CMLL 公式\",\"t\":[\"CMLL 是桥式方法的第三步，在完成左右桥之后。这一步的目标是在不考虑 M 层的情况下完成顶层的角块（包括位置和色相）\",\"CMLL 共有 42 条公式，建议学习顺序：O2 H4 Pi6 U6 T6 L6 S6 As6\"]},\"1\":{\"c\":[\"魔方\"]},\"2\":{\"c\":[\"桥式\",\"公式集\",\"三阶魔方速拧\",\"CMLL\"]},\"3\":{\"h\":\"三阶魔方速拧\",\"t\":[\"三阶魔方速拧相关公式及技巧\"]},\"4\":{\"h\":\"联想词\"},\"5\":{\"h\":\"如何更好地使用联想词记忆\",\"t\":[\"一个联想词通常是两个字\",\"两个联想词之间用某个动词连接\",\"这个动词的第一个字体现前一个联想词的特征，第二个字反映后一个联想词的效果\"]},\"6\":{\"h\":\"我的联想词\",\"t\":[\"编码\",\"联想词\"]},\"7\":{\"c\":[\"魔方\"]},\"8\":{\"c\":[\"盲拧记忆\",\"三阶魔方盲拧\"]},\"9\":{\"h\":\"彳亍法的坐标系、编码、缓冲与色相\"},\"10\":{\"h\":\"坐标系\",\"t\":[\"黄顶红前\"]},\"11\":{\"h\":\"编码\",\"t\":[\"彳亍法编码图01\",\"彳亍法编码图02\"]},\"12\":{\"h\":\"缓冲\",\"t\":[\"棱块：UR\",\"角块：UFR\"]},\"13\":{\"h\":\"色相\",\"t\":[\"棱块：我们将棱块两个面上颜色中相对高级的面称为0位置，另一个面称为1位置（高级排名：白黄>红橙>蓝绿）。\",\"角块：我们将角块上三个面中按编码顺序，第一个面称为0位置，第二个面称为1位置，第三个面称为2位置。\"]},\"14\":{\"c\":[\"魔方\"]},\"15\":{\"c\":[\"彳亍法\",\"三阶魔方盲拧\"]},\"16\":{\"h\":\"彳亍法棱块读码\",\"t\":[\"以下打乱均采用黄顶红前的坐标打乱\"]},\"17\":{\"h\":\"正常情况\",\"t\":[\"打乱如下：\",\"F2 L2 U2 L2 F2 U2 F R2 F D2 L2 U' L2 B F' U2 R' B D2 B R2\",\"彳亍法棱块读码01\",\"打乱完成后，先按坐标（黄顶红前）将魔方调整好\",\"从缓冲块位置（UR）开始读码，也就是从编码的 GH 块的 G 开始读（缓冲块的编码不需要读出来）\",\"G 位置是黄红块的黄，它的编码是 A，那么第一个编码就是 A\",\"然后看 A 位置，是白红块的白，它的编码是 I，那么第二个编码就是 I\",\"然后看 I 位置，是白绿块的白，它的编码是 O，那么第三个编码就是 O\",\"然后看 O 位置，是橙绿块的橙，它的编码是 Y，那么第四个编码就是 Y\",\"然后看 Y 位置，是白蓝块的白，它的编码是 K，那么第五个编码就是 K\",\"然后看 K 位置，是白橙块的橙，它的编码是 N，那么第六个编码就是 N\",\"然后看 N 位置，是红蓝块的红，它的编码是 S，那么第七个编码就是 S\",\"然后看 S 位置，是黄蓝块的蓝，它的编码是 D，那么第八个编码就是 D\",\"然后看 D 位置，是黄橙块的橙，它的编码是 F，那么第九个编码就是 F\",\"然后看 F 位置，是橙蓝块的橙，它的编码是 W，那么第十个编码就是 W\",\"然后看 W 位置，是黄绿块的黄，它的编码是 G，这里说明已经回到了缓冲块，我们不需要读出来\",\"所有棱块都读到了，编码完成\",\"最终的编码如下：AI OY KN SD FW\"]},\"18\":{\"h\":\"存在小循环\",\"t\":[\"打乱如下：\",\"F R2 D B2 F2 L2 D' R2 U R2 B U' F U2 R F2 D2 U' R\",\"彳亍法棱块读码02\",\"打乱完成后，先按坐标（黄顶红前）将魔方调整好\",\"从缓冲块块（UR）开始读码，也就是从编码的 GH 块的 G 开始读（缓冲块的编码不需要读出来）\",\"G 位置是红绿块的红，它的编码是 Q，那么第一个编码就是 Q\",\"然后看 Q 位置，是红蓝块的蓝，它的编码是 T，那么第二个编码就是 T\",\"然后看 T 位置，是黄绿块的绿，它是我们的缓冲块（缓冲块的编码是不需要读出来的），此时读码明显没有结束，还有很多棱块没有读到，此时我们需要借位\",\"借位的原则是按色相借位，黄绿块的绿色是“1”位置，那么我们需要借一个“1”位置的，我们首选的借位是借 AB 位置（如果 AB 位置已还原或已读码，则需要借其他位置），那么第三个编码就是 B\",\"然后看 B 位置，是黄橙块的橙，它的编码是 F，那么第四个编码就是 F\",\"然后看 F 位置，是白蓝块的白，它的编码是 K，那么第五个编码就是 K\",\"然后看 K 位置，是黄蓝块的蓝，它的编码是 D，那么第六个编码就是 D\",\"然后看 D 位置，是黄红块的红，它的编码是 B，那么第七个编码就是 B\",\"此时我们发现回到了刚才借的位置，但还有未读的棱块，所以我们需要继续按色相借位，我们借 IJ 位置的 J，那么我们的第八个编码就是 J\",\"然后看 J 位置，是橙绿块的橙，它的编码是 Y，那么第九个编码就是 Y\",\"然后看 Y 位置，是白红块的白，它的编码是 I，那么第十个编码就是 I\",\"此时我们发现回到了刚才借的位置（虽然不是 J，但是 IJ 在同一块上），但还有未读的棱块，所以我们需要继续按色相借位，我们借 MN 位置的 M，那么第十一个编码就是 M\",\"然后看 M 位置，是白绿块的白，它的编码是 O，那么第十二个编码就是 O\",\"然后看 O 位置，是橙蓝块的蓝，它的编码是 X，那么第十三个编码就是 X\",\"然后看 X 位置，是白橙块的白，它的编码是 M，那么第十四个编码就是 M\",\"此时我们发现回到了刚才借的位置，并且最后一个是以“0”位置结束，所有棱块都读到了，编码完成\",\"最终的编码如下：QT BF KD BJ YI MO XM\"]},\"19\":{\"h\":\"存在翻色\",\"t\":[\"打乱如下：\",\"F2 L2 D' F2 D R2 B2 R2 D' R2 U2 B' R' F L B2 D' U2 B R\",\"彳亍法棱块读码03\",\"打乱完成后，先按坐标（黄顶红前）将魔方调整好\",\"从缓冲块块（UR）开始读码，也就是从编码的 GH 块的 G 开始读（缓冲块的编码不需要读出来）\",\"G 位置是白橙块的橙，它的编码是 N，那么第一个编码就是 N\",\"然后看 N 位置，是黄绿块的黄，它是我们的缓冲块（缓冲块的编码是不需要读出来的），此时读码明显没有结束，还有很多棱块没有读到，此时我们需要借位\",\"借位的原则是按色相借位，黄绿块的黄色是“0”位置，那么我们需要借一个“0”位置的，我们首选的借位是借 AB 位置（如果 AB 位置已还原或已读码，则需要借其他位置），那么第二个编码就是 A\",\"然后看 A 位置，是红绿块的绿，它的编码是 R，那么第三个编码就是 R\",\"然后看 R 位置，是橙蓝块的橙，它的编码是 W，那么第四个编码就是 W\",\"然后看 W 位置，是红蓝块的红，它的编码是 S，那么第五个编码就是 S\",\"然后看 S 位置，是黄橙块的黄，它的编码是 E，那么第六个编码就是 E\",\"然后看 E 位置，是黄红块的红，它的编码是 B，那么第七个编码就是 B\",\"此时我们发现回到了刚才借的位置（虽然不是 A，但是 AB 在同一块上），但还有未读的棱块，所以我们需要继续按色相借位，我们借 CD 位置的 D，那么第八个编码就是 D\",\"然后看 D 位置，是白绿块的白，它的编码是 O，那么第九个编码就是 O\",\"然后看 O 位置，是白红块的白，它的编码是 I，那么第十个编码就是 I\",\"然后看 I 位置，是橙绿块的橙，它的编码是 Y，那么第十一个编码就是 Y\",\"然后看 Y 位置，是黄蓝块的蓝，它的编码是 D，那么第十二个编码就是 D\",\"此时我们发现回到了刚才借的位置，但是最后一个编码是以“1”位置结束，所以出现了翻色的情况，我们发现白蓝块需要翻色，所有棱块都读到了，编码完成\",\"最终的编码如下：NA RW SE BD OI YD\"]},\"20\":{\"c\":[\"魔方\"]},\"21\":{\"c\":[\"彳亍法\",\"三阶魔方盲拧\"]},\"22\":{\"h\":\"彳亍法角块读码\",\"t\":[\"以下打乱均采用黄顶红前的坐标打乱\"]},\"23\":{\"h\":\"正常情况\",\"t\":[\"打乱如下：\",\"``\",\"彳亍法角块读码01\",\"打乱完成后，先按坐标（黄顶红前）将魔方调整好\",\"从缓冲块位置（UR）开始读码，也就是从编码的 GH 块的 G 开始读（缓冲块的编码不需要读出来）\",\"G 位置是黄红块的黄，它的编码是 A，那么第一个编码就是 A\",\"然后看 A 位置，是白红块的白，它的编码是 I，那么第二个编码就是 I\",\"然后看 I 位置，是白绿块的白，它的编码是 O，那么第三个编码就是 O\",\"然后看 O 位置，是橙绿块的橙，它的编码是 Y，那么第四个编码就是 Y\",\"然后看 Y 位置，是白蓝块的白，它的编码是 K，那么第五个编码就是 K\",\"然后看 K 位置，是白橙块的橙，它的编码是 N，那么第六个编码就是 N\",\"然后看 N 位置，是红蓝块的红，它的编码是 S，那么第七个编码就是 S\",\"然后看 S 位置，是黄蓝块的蓝，它的编码是 D，那么第八个编码就是 D\",\"然后看 D 位置，是黄橙块的橙，它的编码是 F，那么第九个编码就是 F\",\"然后看 F 位置，是橙蓝块的橙，它的编码是 W，那么第十个编码就是 W\",\"然后看 W 位置，是黄绿块的黄，它的编码是 G，这里说明已经回到了缓冲块，我们不需要读出来\",\"所有棱块都读到了，编码完成\",\"最终的编码如下：AI OY KN SD FW\"]},\"24\":{\"c\":[\"魔方\"]},\"25\":{\"c\":[\"彳亍法\",\"三阶魔方盲拧\"]},\"26\":{\"h\":\"三阶魔方盲拧\",\"t\":[\"三阶魔方盲拧相关公式及技巧\"]},\"27\":{\"h\":\"关于我\",\"t\":[\"你好，我来自山东济南，毕业于曲阜师范大学，喜欢编程，热爱技术，热爱生活\"]},\"28\":{\"h\":\"爱好\",\"t\":[\"魔方、摄影、键盘客制化、数码产品\"]},\"29\":{\"h\":\"最近在读\",\"t\":[\"《鳄鱼》-莫言\"]},\"30\":{\"h\":\"最近在看\",\"t\":[\"《无耻之徒》-2024.07.09\"]},\"31\":{\"h\":\"联系方式\",\"t\":[\"QQ：3407085928\",\"微信：Pisces12013\",\"邮箱：zhf5256@qq.com\",\"博客：茕茕の博客\",\"GitHub：https://github.com/zhf521\"]},\"32\":{\"h\":\"合集\"},\"33\":{\"h\":\"CSS 实现文字渐变\",\"t\":[\"如果给文字直接设置渐变色会不生效：\",\"color: linear-gradient(to right, yellow, green);\",\"我们可以使用以下方式实现：\",\"background: linear-gradient(to right, yellow, green); /*设置渐变*/ background-clip: text; /*将设置的背景颜色限制在文字中*/ -webkit-background-clip: text; /*将设置的背景颜色限制在文字中*/ -webkit-text-fill-color: transparent; /*将文字设置为透明*/\"]},\"34\":{\"c\":[\"软件开发\"]},\"35\":{\"c\":[\"CSS\"]},\"36\":{\"h\":\"npm 换源\"},\"37\":{\"h\":\"查看当前镜像源\",\"t\":[\"npm get registry\"]},\"38\":{\"h\":\"更换淘宝镜像源\",\"t\":[\"npm config set registry https://registry.npmmirror.com/\"]},\"39\":{\"h\":\"切换回官方镜像源\",\"t\":[\"npm config set registry https://registry.npmjs.org/\"]},\"40\":{\"c\":[\"软件开发\"]},\"41\":{\"c\":[\"npm\"]},\"42\":{\"h\":\"async 异常捕获\"},\"43\":{\"h\":\"使用 try-catch 捕获异常\",\"t\":[\"async function async1() { try { await async2(); } catch (error) { console.log(error); }\"]},\"44\":{\"h\":\"使用 Promise.catch 捕获异常\",\"t\":[\"async function async1() { await async2().catch(error => { console.log(error); }); }\"]},\"45\":{\"h\":\"优化异常捕获\",\"t\":[\"当有多个异步操作时，要为每个异步操作后面都加上 try-catch 代码块，这显然是不合理的，如果只写一次 try-catch 代码块，就会导致不知道哪一个异步操作出现了问题，所以我们可以自己写一个工具函数来优化异常捕获。\",\"原来的代码：\",\"async function async1() { try { await asyncFn1(); await asyncFn2(); } catch (error) { console.log(error); } }\",\"我们封装一个工具函数：\",\"async tryCatch(asyncFn) { try { let res = await asyncFn; return [null,res]; } catch (error) { return [error,null]; } }\",\"现在我们使用封装好的工具函数：\",\"async function async1() { let [error1,res1] = await tryCatch(asyncFn1); let [error2,res2] = await tryCatch(asyncFn2); }\"]},\"46\":{\"c\":[\"软件开发\"]},\"47\":{\"c\":[\"JavaScript\"]},\"48\":{\"h\":\"文字跑马灯效果的实现\"},\"49\":{\"h\":\"Vue 实现文字跑马灯效果\",\"t\":[\"封装了一个组件，用于实现文字跑马灯效果。\"]},\"50\":{\"h\":\"组件源码\",\"t\":[\"<!-- Carousel.vue --> <template> <!-- 跑马灯容器 --> <div class=\\\"container\\\" ref=\\\"containerRef\\\"> <!-- 跑马灯 --> <div :class=\\\"textOverflow && 'content'\\\" :style=\\\"{ animationDuration: `${duration}s`, animationDelay: `${props.scrollDelay}s` }\\\"> <!-- 文本内容 --> <div :style=\\\"[{ paddingRight: `${props.textGap}px`, whiteSpace: 'nowrap' }, props.textStyle]\\\" ref=\\\"textContentRef\\\">{{ props.textContent }}</div> <!-- 文本溢出时追加的文本内容 --> <div :style=\\\"[{ paddingRight: `${props.textGap}px`, whiteSpace: 'nowrap' }, props.textStyle]\\\" v-show=\\\"textOverflow\\\">{{ props.textContent }}</div> </div> </div> </template> <script setup> import { ref, watch, nextTick, onMounted } from 'vue'; // 获取跑马灯容器元素 const containerRef = ref(null); // 获取文本内容元素 const textContentRef = ref(null); // 判断文本内容是否溢出 const textOverflow = ref(true); // 动画持续时间 const duration = ref(0); // 接收参数 const props = defineProps({ // 文本内容 textContent: { type: String, default: '', }, // 文本间隔 textGap: { type: Number, default: 50, }, // 文本滚动速度 scrollSpeed: { type: Number, default: 10, }, // 文本开始滚动的延迟时间 scrollDelay: { type: Number, default: 0.5, }, // 文本内容样式 textStyle: { type: Object, default: null, } }); // 监听文本内容变化 watch(() => props.textContent, () => { nextTick(() => { renderText(); }); }); // 挂载时执行 onMounted(() => { nextTick(() => { renderText(); }); }); // 渲染文本内容 const renderText = () => { // 获取容器宽度和文本内容宽度 const containerWidth = containerRef.value.offsetWidth; const textWidth = textContentRef.value.offsetWidth; // 计算动画持续时间 duration.value = textWidth / props.scrollSpeed; // 判断文本内容是否溢出 if ((textWidth - props.textGap) > containerWidth) { textOverflow.value = true; } else { textOverflow.value = false; } }; </script> <style scoped> .container { width: 100%; display: flex; flex-grow: 1; overflow: hidden; } .content { flex: none; display: flex; align-items: center; animation: move linear infinite; } @keyframes move { 0% { transform: translateX(0); } to { transform: translateX(-50%); } } </style>\"]},\"51\":{\"h\":\"组件的使用\",\"t\":[\"注意：组件外的容器必须设置宽度。\",\"<!-- App.vue --> <template> <div :style=\\\"{ width: '100px', backgroundColor: 'pink' }\\\"> <Carousel :textContent=\\\"textContent\\\" :textGap=\\\"textGap\\\" :scrollDelay=\\\"textStartScrollDelay\\\" :scrollSpeed=\\\"textScrollSpeed\\\" :textStyle=\\\"textStyle\\\"> </Carousel> </div> </template> <script setup> import { ref } from 'vue'; import Carousel from '@/components/Carousel.vue'; const textContent = ref('我是一段很长的文字'); const textGap = ref(20); const textStartScrollDelay = ref(1); const textScrollSpeed = ref(20); const textStyle = ref({ color: 'green', fontWeight: 'bold', }); </script>\"]},\"52\":{\"h\":\"效果展示\"},\"53\":{\"c\":[\"软件开发\"]},\"54\":{\"c\":[\"Vue\"]},\"55\":{\"h\":\"CSS 实现导航栏固定效果\"},\"56\":{\"h\":\"效果描述\",\"t\":[\"当页面滚动时，导航栏固定在顶部。\"]},\"57\":{\"h\":\"实现方法\",\"t\":[\"我们可以使用粘性定位来实现。\",\"将导航栏的position属性设置为sticky，并设置top属性将其固定在顶部。\",\"设置z-index属性以确保导航栏在页面其他元素之上显示。\"]},\"58\":{\"h\":\"效果展示\"},\"59\":{\"c\":[\"软件开发\"]},\"60\":{\"c\":[\"CSS\"]},\"61\":{\"h\":\"盒子宽度自适应文字内容\"},\"62\":{\"h\":\"效果描述\",\"t\":[\"当文字多少不确定时，让盒子宽度自适应文字内容。\"]},\"63\":{\"h\":\"实现方法\",\"t\":[\"为盒子设置width:fit-content;\"]},\"64\":{\"h\":\"效果展示\"},\"65\":{\"c\":[\"软件开发\"]},\"66\":{\"c\":[\"CSS\"]},\"67\":{\"h\":\"echarts 图表占满整个容器\",\"t\":[\"通过 grid 属性调整。\",\"grid:{ top:'0px', left:'0px', right:'0px', bottom:'0px }\"]},\"68\":{\"c\":[\"软件开发\"]},\"69\":{\"c\":[\"echarts\"]},\"70\":{\"h\":\"文本溢出的处理\"},\"71\":{\"h\":\"单行文本溢出显示省略号\",\"t\":[\"使用 white-space 属性来指定文本的处理方式，将其设置为 nowrap，表示不允许换行。\",\"使用 text-overflow 属性来指定溢出文本的处理方式，将其设置为 ellipsis，表示使用省略号来代替溢出的文本。\",\"为了让 text-overflow 属性生效，还需要将 overflow 属性设置为 hidden 或 clip。\",\"综上，可以这样写：\",\"div { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }\"]},\"72\":{\"h\":\"多行文本溢出显示省略号\",\"t\":[\"使用-webkit-line-clamp来限制在一个块元素显示的文本的行数。\",\"使用display: -webkit-box;设置该盒子作为弹性伸缩盒子模型显示。\",\"使用-webkit-box-orient属性设置伸缩盒对象的子元素的排列方式。\",\"使用text-overflow: ellipsis;属性设置省略号来代替溢出的文本。\",\"适用于 WebKit 浏览器或移动端（绝大部分是 WebKit 内核的）浏览器\",\".ellipsis { overflow: hidden; display: -webkit-box; text-overflow: ellipsis; -webkit-line-clamp: 2; -webkit-box-orient: vertical; }\"]},\"73\":{\"c\":[\"软件开发\"]},\"74\":{\"c\":[\"CSS\"]},\"75\":{\"h\":\"CSS 实现三角形\",\"t\":[\"网页中常见一些三角形，使用 CSS 边框可以 直接画出来，不必做成图片或者字体图标\",\"盒子宽度高度为 0\",\"4 个边框都要写，只保留需要的边框颜色，其余的不能省略，都改为 transparent （透明）\"]},\"76\":{\"c\":[\"软件开发\"]},\"77\":{\"c\":[\"CSS\"]},\"78\":{\"h\":\"开发技巧\",\"t\":[\"分享一下我在开发中遇到的问题以及开发中使用到的技巧。\"]},\"79\":{\"h\":\"友链\"},\"80\":{\"h\":\"Go-Go开发环境搭建\"},\"81\":{\"h\":\"下载并安装Go语言环境\",\"t\":[\"访问 Go 语言的官方网站，选择适合操作系统的安装包进行下载并按提示安装\"]},\"82\":{\"h\":\"验证安装\",\"t\":[\"在终端中输入 go version 来验证 Go 是否安装成功\"]},\"83\":{\"h\":\"安装代码编辑器\",\"t\":[\"使用 VSCode 安装 Go 插件即可\"]},\"84\":{\"c\":[\"软件开发\"]},\"85\":{\"c\":[\"Go\"]},\"86\":{\"h\":\"Go 学习记录\",\"t\":[\"分享我学习 Go 过程中的笔记。\"]},\"87\":{\"h\":\"创建 Nest 项目\"},\"88\":{\"h\":\"安装 Nest CLI\",\"t\":[\"Nest CLI 是官方提供的脚手架工具，用于帮助我们创建、开发和维护 Nest 应用程序\",\"建议全局安装：\",\"npm install -g @nestjs/cli\",\"更新（有新版本时可以执行以下命令）：\",\"npm update -g @nestjs/cli\"]},\"89\":{\"h\":\"创建 Nest 项目\",\"t\":[\"nest new 你的项目名\"]},\"90\":{\"h\":\"运行项目\",\"t\":[\"cd 你的项目文件夹\",\"npm run start:dev\",\"在浏览器中，打开 localhost:3000 查看运行情况。\"]},\"91\":{\"c\":[\"软件开发\"]},\"92\":{\"c\":[\"Nest\"]},\"93\":{\"h\":\"控制反转与依赖注入\"},\"94\":{\"h\":\"控制反转（IoC）\",\"t\":[\"控制反转（Inversion of Control，IoC）是一种软件设计思想，旨在将对象的创建和管理交给外部容器（如 IoC 容器），而不是在代码中硬编码。通过 IoC，对象之间的依赖关系由容器管理，而不是在代码中显式地创建和配置。可以降低计算机代码之间的耦合度。\",\"在 Nest 中，IoC 容器负责管理对象的生命周期和依赖关系。\"]},\"95\":{\"h\":\"依赖注入（DI）\",\"t\":[\"依赖注入（Dependency Injection，DI）是 IoC 的一种实现方式，通过将依赖项（即对象之间的依赖关系）注入到目标对象中，实现控制反转。\",\"在 Nest 中，依赖注入主要是通过装饰器（Decorators）实现的，通过在目标对象上添加装饰器，将依赖项注入到目标对象中。\"]},\"96\":{\"h\":\"两者关系\",\"t\":[\"控制反转是一种设计思想（设计模式），而依赖注入是控制反转的一种实现方式。\"]},\"97\":{\"h\":\"依赖注入的实现\",\"t\":[\"首先我们来看一下传统的开发方式，在传统的开发模式中，对象之间的依赖关系由代码中显式地创建和配置。\",\"// 假设这是我们的 CPU 和 GPU 类 class IntelCPU { process(): void { console.log('Intel CPU 运行中...'); } } class NvidiaGPU { render(): void { console.log('Nvidia GPU 渲染中...'); } } interface CPU { process(): void; } interface GPU { render(): void; } // 这是我们的 Computer 类，它直接创建 CPU 和 GPU 的实例 class Computer { cpu: CPU; gpu: GPU; constructor() { this.cpu = new IntelCPU(); // 硬编码依赖 this.gpu = new NvidiaGPU(); // 硬编码依赖 } run(): void { this.cpu.process(); this.gpu.render(); } } // 使用 Computer 类 const computer = new Computer(); computer.run();\",\"在这个例子中，Computer 类在构造函数中直接创建了 IntelCPU 和 NvidiaGPU 的实例。这种方式的缺点是，如果我们需要更换 CPU 或 GPU 的实现，我们需要修改 Computer 类的代码。\",\"在依赖注入中，组件不直接创建依赖项，而是在创建时通过构造函数、属性或方法参数接收依赖项。\",\"现在我们来看一下使用依赖注入后的代码。\",\"// CPU 和 GPU 接口 interface CPU { process(): void; } interface GPU { render(): void; } // 实现类 class IntelCPU implements CPU { process(): void { console.log('Intel CPU 运行中...'); } } class NvidiaGPU implements GPU { render(): void { console.log('Nvidia GPU 渲染中...'); } } // Computer 类，使用依赖注入 class Computer { cpu: CPU; gpu: GPU; constructor(cpu: CPU, gpu: GPU) { this.cpu = cpu; this.gpu = gpu; } run(): void { this.cpu.process(); this.gpu.render(); } } // 创建 Computer 实例时，我们传递 CPU 和 GPU 的实例 const intelCpu = new IntelCPU(); const nvidiaGpu = new NvidiaGPU(); const computer = new Computer(intelCpu, nvidiaGpu); computer.run();\",\"在这个例子中，Computer 类通过构造函数接收 CPU 和 GPU 的实例。这样，我们可以根据需要传递不同的实现，而不需要修改 Computer 类的代码。\"]},\"98\":{\"h\":\"Nest 中依赖注入的实现\",\"t\":[\"在 Nest 中，依赖注入（DI）是通过装饰器和 IoC 容器实现的。以下是一个简单的例子，展示了如何在 Nest 应用程序中使用依赖注入：\",\"我们定义一个服务（Service）和一个控制器（Controllers），然后使用 Nest 的装饰器来标记它们。\",\"首先，我们创建一个服务类，使用 @Injectable() 装饰器来标记它为可注入的服务。\",\"// src/app.service.ts import { Injectable } from '@nestjs/common'; @Injectable() export class AppService { getHello(): string { return 'Hello World!'; } }\",\"然后，我们创建一个控制器类，它将依赖于 AppService。在控制器的构造函数中，我们通过类型注解来声明依赖，并让 Nest 的 IoC 容器自动注入它。\",\"// src/app.controller.ts import { Controller, Get } from '@nestjs/common'; import { AppService } from './app.service'; @Controller() export class AppController { constructor(private readonly appService: AppService) {} @Get() getHello(): string { return this.appService.getHello(); } }\",\"此时，AppService 作为一个提供者（Providers），需要在模块中进行注册。\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; @Module({ imports: [], controllers: [AppController], providers: [AppService], }) export class AppModule {}\",\"最后，我们启动 Nest 应用程序，Nest 会自动处理依赖注入。\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; async function bootstrap() { const app = await NestFactory.create(AppModule); await app.listen(3000); } bootstrap();\",\"在这个例子中，当 AppController 被创建时，NestJS 的 IoC 容器会查找 AppService 的提供者，并将其实例注入到 AppController 的构造函数中。这样， AppController 就可以使用 AppService 的方法，而不需要自己创建 AppService 的实例。\"]},\"99\":{\"c\":[\"软件开发\"]},\"100\":{\"c\":[\"Nest\"]},\"101\":{\"h\":\"控制器\"},\"102\":{\"h\":\"什么是控制器\",\"t\":[\"控制器（Controllers）负责处理传入的请求和向客户端返回响应。在 Nest 中，使用 @Controller 装饰器来定义控制器。\"]},\"103\":{\"h\":\"路由\"},\"104\":{\"h\":\"基本使用\",\"t\":[\"Nest 中的路由是指定义请求 URL 和处理函数之间的映射关系。\",\"在 Nest 中，使用 @Get()、@Post()、@Put()、@Patch()、@Delete() 等装饰器来定义路由。\",\"例如：\",\"// src/test/test.controller.ts import { Controller, Get, Post, Body, Patch, Param, Delete, } from '@nestjs/common'; import { TestService } from './test.service'; import { CreateTestDto } from './dto/create-test.dto'; import { UpdateTestDto } from './dto/update-test.dto'; @Controller('test') export class TestController { constructor(private readonly testService: TestService) {} // 使用 POST 方法，通过 /test 路径来创建数据 @Post() create(@Body() createTestDto: CreateTestDto) { return this.testService.create(createTestDto); } // 使用 GET 方法，通过 /test 路径来访问 @Get() findAll() { return this.testService.findAll(); } // 使用 GET 方法，通过 /test/:id 路径来访问，如：/test/1 @Get(':id') findOne(@Param('id') id: string) { return this.testService.findOne(+id); } // 使用 PATCH 方法，通过 /test/:id 路径来更新数据，如：/test/1 @Patch(':id') update(@Param('id') id: string, @Body() updateTestDto: UpdateTestDto) { return this.testService.update(+id, updateTestDto); } // 使用 DELETE 方法，通过 /test/:id 路径来删除数据，如：/test/1 @Delete(':id') remove(@Param('id') id: string) { return this.testService.remove(+id); } }\"]},\"105\":{\"h\":\"设置路由前缀（Prefix）\",\"t\":[\"在 main.ts 中设置路由前缀：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; async function bootstrap() { const app = await NestFactory.create(AppModule); // 设置路由以 /api 为前缀，但是直接通过域名访问的 / 根路由排除 app.setGlobalPrefix('api', { exclude: ['/'], }); await app.listen(3000); } bootstrap();\"]},\"106\":{\"h\":\"处理请求参数\"},\"107\":{\"h\":\"查询字符串（Query String）\",\"t\":[\"使用 @Query() 装饰器来获取查询字符串参数：\",\"// src/test/test.controller.ts import { Controller, Get, Query } from '@nestjs/common'; @Controller('test') export class TestController { @Get('query') query(@Query() query) { return `获取到的数据为：${query.name}、${query.age}`; } }\",\"或：\",\"// src/test/test.controller.ts import { Controller, Get, Query } from '@nestjs/common'; @Controller('test') export class TestController { @Get('query') query(@Query('name') name: string, @Query('age') age: number) { return `获取到的数据为：${name}、${age}`; } }\"]},\"108\":{\"h\":\"URL 参数（URL Params）\",\"t\":[\"使用 @Param() 装饰器和 :参数名 路径来获取 URL 参数：\",\"// src/test/test.controller.ts import { Controller, Get, Param } from '@nestjs/common'; @Controller('test') export class TestController { @Get(':name') params(@Param() params) { return `获取到的数据为：${params.name}`; } }\",\"或：\",\"// src/test/test.controller.ts import { Controller, Get, Param } from '@nestjs/common'; @Controller('test') export class TestController { @Get(':name') params(@Param('name') name: string) { return `获取到的数据为：${name}`; } }\"]},\"109\":{\"h\":\"请求体（Request Body）\",\"t\":[\"使用 @Body() 装饰器来获取请求头：\",\"// src/test/test.controller.ts import { Body, Controller, Post } from '@nestjs/common'; import { CreateTestDto } from './dto/create-test.dto'; @Controller('test') export class TestController { @Post() body(@Body() createTestDto: CreateTestDto) { return `获取到的数据为：${createTestDto.name}`; } }\",\"或：\",\"// src/test/test.controller.ts import { Body, Controller, Post } from '@nestjs/common'; @Controller('test') export class TestController { @Post() body(@Body('name') name: string) { return `获取到的数据为：${name}`; } }\"]},\"110\":{\"h\":\"请求头（Request Header）\",\"t\":[\"使用 @Headers() 装饰器来获取请求头：\",\"// src/test/test.controller.ts import { Headers, Controller, Post } from '@nestjs/common'; @Controller('test') export class TestController { @Post() head(@Headers() header) { return `获取到的数据为：${header.name}`; } }\",\"或：\",\"// src/test/test.controller.ts import { Headers, Controller, Post } from '@nestjs/common'; @Controller('test') export class TestController { @Post() head(@Headers('name') name: string) { return `获取到的数据为：${name}`; } }\"]},\"111\":{\"h\":\"请求对象（Request Object）\",\"t\":[\"使用 @Req() 装饰器来获取请求对象：\",\"// src/test/test.controller.ts import { Controller, Get, Req } from '@nestjs/common'; @Controller('test') export class TestController { @Get('req') req(@Req() req) { return `获取到的数据为：${req.query.name}`; } }\"]},\"112\":{\"h\":\"状态码\",\"t\":[\"使用 @HttpCode() 装饰器来设置状态码：\",\"// src/app.controller.ts import { Controller, Get, HttpCode } from '@nestjs/common'; import { AppService } from './app.service'; @Controller() export class AppController { constructor(private readonly appService: AppService) {} @HttpCode(202) @Get() getHello(): string { return this.appService.getHello(); } }\"]},\"113\":{\"h\":\"响应头\",\"t\":[\"使用 @Header() 装饰器来设置响应头：\",\"// src/app.controller.ts import { Controller, Get, HttpCode, Header } from '@nestjs/common'; import { AppService } from './app.service'; @Controller() export class AppController { constructor(private readonly appService: AppService) {} @HttpCode(202) @Header('Cache-Control', 'none') @Get() getHello(): string { return this.appService.getHello(); } }\"]},\"114\":{\"c\":[\"软件开发\"]},\"115\":{\"c\":[\"Nest\"]},\"116\":{\"h\":\"提供者\"},\"117\":{\"h\":\"什么是提供者\",\"t\":[\"Nest 中的提供者（Providers）是用于管理应用程序的依赖项和服务。提供者可以是任何类，并且可以被注入到其他类中，以便在需要时使用。我们可以理解为：为控制器提供服务的就可以被称作提供者（Providers）。\"]},\"118\":{\"h\":\"定义、注册和使用提供者\",\"t\":[\"在 Nest 中，有多种方式来定义提供者。提供者可以在模块的 providers 数组中进行注册。这样，Nest 就会自动将该提供者注入到需要它的类中。\"]},\"119\":{\"h\":\"标准提供者\",\"t\":[\"标准提供者是使用 @Injectable() 装饰器来定义的。\",\"// src/app.service.ts import { Injectable } from '@nestjs/common'; @Injectable() export class AppService { getHello(): string { return 'Hello World!'; } }\",\"在模块的 providers 数组中注册提供者：\",\"// src/app.module.ts // 简写方式 import { Module } from '@nestjs/common'; import { AppService } from './app.service'; @Module({ providers: [AppService], }) export class AppModule {}\",\"// src/app.module.ts // 完整方式 import { Module } from '@nestjs/common'; import { AppService } from './app.service'; @Module({ providers: [ { provide: AppService, useClass: AppService, }, ], }) export class AppModule {}\",\"在需要使用的类中，在构造函数中注入提供者：\",\"// src/app.controller.ts import { Controller, Get } from '@nestjs/common'; import { AppService } from './app.service'; @Controller('app') export class AppController { constructor(private readonly appService: AppService) {} @Get() getHello(): string { return this.appService.getHello(); } }\"]},\"120\":{\"h\":\"自定义提供者\"},\"121\":{\"h\":\"值提供者（useValue）\",\"t\":[\"useValue 语法对于注入常量值、将外部库放入 Nest 容器或使用模拟对象替换实际实现非常有用。\",\"在模块中，使用 useValue 语法来提供值：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { UserService } from './user.service'; @Module({ providers: [ { provide: UserService, useValue: 'Hello user!', }, ], }) export class AppModule {}\",\"在需要使用的类中，在构造函数中注入提供者：\",\"// src/app.controller.ts import { Controller, Get } from '@nestjs/common'; import { AppService } from './app.service'; import { Inject } from '@nestjs/common'; @Controller('app') export class AppController { constructor( private readonly appService: AppService, private readonly userService: UserService ) {} @Get() getHello(): string { return this.appService.getHello() + ' ' + this.userService; } }\"]},\"122\":{\"h\":\"非类提供者\",\"t\":[\"我们已经使用了类名作为我们的提供者标记（providers 数组中列出的提供者中的 Provide 属性的值），有时我们希望灵活使用字符串作为提供者标记（token）。\",\"在模块中注册提供者时，使用字符串标记提供者：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; @Module({ providers: [ { provide: 'TOKEN_KEY', useValue: 'This is a token', }, ], }) export class AppModule {}\",\"在需要使用的地方，使用 @Inject() 装饰器注入标记为 'TOKEN_KEY' 的提供者：\",\"// src/app.controller.ts import { Controller, Get } from '@nestjs/common'; import { AppService } from './app.service'; import { Inject } from '@nestjs/common'; @Controller('app') export class AppController { constructor( private readonly appService: AppService, @Inject('TOKEN_KEY') private readonly token: string ) {} @Get() getHello(): string { return this.appService.getHello() + ' ' + this.token; } }\"]},\"123\":{\"h\":\"类提供者 (useClass)\",\"t\":[\"在某些情况下，我们可能需要动态地决定使用哪个类来提供服务。我们可以使用 useClass 选项来指定一个类，该类将被实例化并用作提供者。\",\"// src/app.module.ts import { Module } from '@nestjs/common'; @Module({ providers: [ { provide: ConfigService, useClass: environment === 'development' ? DevelopmentConfigService : ProductionConfigService, }, ], }) export class AppModule {}\",\"我们使用 environment 变量来决定使用哪个配置服务类。\",\"在需要使用的类中，在构造函数中注入提供者即可。\"]},\"124\":{\"h\":\"工厂提供者 (useFactory)\",\"t\":[\"有时候，我们需要动态地创建提供者。我们可以使用工厂函数实现。\",\"工厂函数可以接受（可选）参数。\",\"inject 属性接受一个提供者数组，在实例化过程中，Nest 将解析该数组并将其作为参数传递给工厂函数。这两个列表应该是相关的：Nest 将从 inject 列表中以相同的顺序将实例作为参数传递给工厂函数。\",\"在模块中，使用 useFactory 选项来指定一个工厂函数，该函数将返回一个提供者实例。\",\"// src/app.module.ts import { Module } from '@nestjs/common'; class AClass { make() { return 'A make method'; } } @Module({ providers: [ AClass, { provide: 'B', inject: [AClass], useFactory: (a: AClass) => { return a.make(); }, }, ], }) export class AppModule {}\",\"在需要使用的类中，使用 @Inject() 装饰器注入提供者即可。\"]},\"125\":{\"h\":\"别名提供者 (useExisting)\",\"t\":[\"useExisting 语法允许您为现有的提供程序创建别名。这将创建两种访问同一提供者的方法。如果你想要重用一个已经存在的提供者\",\"在模块中，使用 useExisting 来指定别名。\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { UserService } from './user.service'; @Module({ providers: [ AClass, { provide: 'B', useExisting: UserService, }, ], }) export class AppModule {}\",\"在需要使用的类中，使用 @Inject() 装饰器注入提供者即可。\"]},\"126\":{\"c\":[\"软件开发\"]},\"127\":{\"c\":[\"Nest\"]},\"128\":{\"h\":\"模块\"},\"129\":{\"h\":\"什么是模块\",\"t\":[\"模块（Modules）是应用程序的基本构建块，它封装了一组相关的功能和服务。\",\"在 Nest 中，模块是一个类，它使用 @Module() 装饰器进行装饰。在模块中，你可以定义控制器（Controllers）、提供者（Providers）和其他模块，以便将它们组织在一起。\",\"@module() 装饰器接受一个描述模块属性的对象，它有如下几个属性：\",\"imports：导入其他模块，以允许模块之间共享 Providers\",\"exports：导出其他模块需要共享的 Providers\",\"providers：注册模块中所有用到的 Providers，模块内共享使用\",\"controllers：声明模块的控制器\"]},\"130\":{\"h\":\"全局模块\",\"t\":[\"使用 @Global() 装饰器定义的模块为全局模块，其他模块在使用全局模块时不需要在 imports 中导入该模块\"]},\"131\":{\"h\":\"动态模块\",\"t\":[\"动态模块是指在运行时动态创建的模块。主要用于给模块传递参数。\",\"例如，我们创建一个新的 test 模块，默认是使用静态模块创建的：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { TestModule } from './test/test.module'; @Module({ imports: [TestModule], controllers: [AppController], providers: [AppService], }) export class AppModule {}\",\"我们来看一下如何使用动态模块：\",\"定义动态模块：\",\"// src/test/test.module.ts import { DynamicModule, Module } from '@nestjs/common'; import { TestService } from './test.service'; import { TestController } from './test.controller'; @Module({}) export class TestModule { static forRoot(options: string): DynamicModule { return { module: TestModule, controllers: [TestController], providers: [ { provide: 'TEST_CONFIG', useValue: options, }, TestService, ], }; } }\",\"在 app.module.ts 中使用动态模块：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { TestModule } from './test/test.module'; @Module({ imports: [TestModule.forRoot('')], controllers: [AppController], providers: [AppService], }) export class AppModule {}\",\"此时，我们使用动态模块实现了之前静态模块的效果。如果我们需要传递参数该怎么做呢？\",\"我们可以在 test.controller.ts 中使用 @Inject() 装饰器来进行依赖注入：\",\"// src/test/test.controller.ts import { Controller, Get, Inject } from '@nestjs/common'; import { TestService } from './test.service'; @Controller('test') export class TestController { constructor( private readonly testService: TestService, @Inject('TEST_CONFIG') private readonly testConfig: string ) {} @Get() findAll() { return this.testService.findAll() + ' ' + this.testConfig; } }\",\"此时，我们可以通过在模块入口处传递参数：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { TestModule } from './test/test.module'; @Module({ imports: [TestModule.forRoot('我是传递的参数')], controllers: [AppController], providers: [AppService], }) export class AppModule {}\",\"这样我们就可以在导入一个模块的时候，传入参数，然后动态生成模块的内容。\"]},\"132\":{\"c\":[\"软件开发\"]},\"133\":{\"c\":[\"Nest\"]},\"134\":{\"h\":\"中间件\"},\"135\":{\"h\":\"什么是中间件\",\"t\":[\"中间件（Middleware）是在路由处理程序之前调用的函数。中间件函数可以访问请求和响应对象，以及应用程序请求响应周期中的 next() 中间件函数。\",\"中间件函数可以执行以下任务：\",\"执行任何代码\",\"对请求和响应对象进行更改\",\"结束请求 - 响应周期\",\"调用堆栈中的下一个中间件函数\",\"如果当前的中间件函数没有结束请求 - 响应周期，它必须调用 next() 将控制传递给下一个中间件函数。否则，请求将被挂起。\"]},\"136\":{\"h\":\"普通中间件\",\"t\":[\"让我们创建一个简单的普通中间件，它只是记录进入和离开中间件函数的日志消息。\",\"使用下面的命令创建一个中间件：\",\"nest g middleware logging --flat\",\"中间件内容如下：\",\"// src/logging.middleware.ts import { Injectable, NestMiddleware } from '@nestjs/common'; import { Request, Response } from 'express'; @Injectable() export class LoggingMiddleware implements NestMiddleware { use(req: Request, res: Response, next: () => void) { console.log('请求前'); next(); console.log('请求后'); } }\",\"在 app.module.ts 中注册中间件：\",\"// src/app.module.ts import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { LoggingMiddleware } from './logging.middleware'; @Module({ imports: [], controllers: [AppController], providers: [AppService], }) export class AppModule implements NestModule { configure(consumer: MiddlewareConsumer) { consumer.apply(LoggingMiddleware).forRoutes('*'); } }\"]},\"137\":{\"h\":\"局部中间件\",\"t\":[\"在 forRoutes 中设置中间件的路由路径、控制器、请求路径和方法，在 exclude 中设置排除的路径、请求路径：\",\"// src/app.module.ts import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { LoggingMiddleware } from './logging.middleware'; import { UserController } from './user/user.controller'; import { UserService } from './user/user.service'; @Module({ imports: [], controllers: [AppController, UserController], providers: [AppService, UserService], }) export class AppModule implements NestModule { configure(consumer: MiddlewareConsumer) { consumer .apply(LoggingMiddleware) .exclude('/user/test') .forRoutes('/user'); } }\",\"或：\",\"// src/app.module.ts import { MiddlewareConsumer, Module, NestModule, RequestMethod, } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { LoggingMiddleware } from './logging.middleware'; import { UserController } from './user/user.controller'; import { UserService } from './user/user.service'; @Module({ imports: [], controllers: [AppController, UserController], providers: [AppService, UserService], }) export class AppModule implements NestModule { configure(consumer: MiddlewareConsumer) { consumer .apply(LoggingMiddleware) .exclude({ path: 'user', method: RequestMethod.POST }) .forRoutes(UserController); } }\",\"或：\",\"// src/app.module.ts import { MiddlewareConsumer, Module, NestModule, RequestMethod, } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { LoggingMiddleware } from './logging.middleware'; @Module({ imports: [], controllers: [AppController], providers: [AppService], }) export class AppModule implements NestModule { configure(consumer: MiddlewareConsumer) { consumer .apply(LoggingMiddleware) .forRoutes({ path: 'user', method: RequestMethod.GET }); } }\"]},\"138\":{\"h\":\"全局中间件\",\"t\":[\"全局中间件是应用到每个路由的处理程序。\",\"在 app.module.ts 中注册全局中间件：\",\"// src/app.module.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { LoggingMiddleware } from './logging.middleware'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.use(new LoggingMiddleware().use); await app.listen(3000); } bootstrap();\"]},\"139\":{\"c\":[\"软件开发\"]},\"140\":{\"c\":[\"Nest\"]},\"141\":{\"h\":\"异常过滤器\"},\"142\":{\"h\":\"什么是异常过滤器\",\"t\":[\"异常过滤器（Exception Filters）在 Nest 中用于捕获和处理应用程序中的异常情况。当异常发生时，过滤器会捕获并处理该异常，以提供更好的用户体验或记录错误日志。\"]},\"143\":{\"h\":\"创建异常过滤器\",\"t\":[\"我们使用命令来创建一个异常过滤器：\",\"nest g filter http-exception\",\"过滤器内容如下：\",\"// src/http-exception.filter.ts import { ArgumentsHost, Catch, ExceptionFilter, HttpException, } from '@nestjs/common'; @Catch(HttpException) export class HttpExceptionFilter<T> implements ExceptionFilter { catch(exception: HttpException, host: ArgumentsHost) { const ctx = host.switchToHttp(); // 获取请求上下文 const response = ctx.getResponse(); // 获取响应对象 const request = ctx.getRequest(); // 获取请求对象 const status = exception.getStatus(); // 获取异常状态码 response.status(status).json({ statusCode: status, timestamp: new Date().toISOString(), path: request.url, message: '我是自定义的异常', }); } }\"]},\"144\":{\"h\":\"使用异常过滤器\",\"t\":[\"我们可以使用多种方式在 Nest 中使用异常过滤器。\"]},\"145\":{\"h\":\"局部使用\",\"t\":[\"使用 @UseFilters 装饰器将异常过滤器应用于路由或控制器：\",\"// src/test/test.controller.ts import { Controller, Get, Param, UseFilters, ForbiddenException, } from '@nestjs/common'; import { TestService } from './test.service'; import { HttpExceptionFilter } from 'src/http-exception.filter'; @Controller('test') export class TestController { constructor(private readonly testService: TestService) {} @Get(':id') @UseFilters(HttpExceptionFilter) findOne(@Param('id') id: string) { throw new ForbiddenException(); return this.testService.findOne(+id); } }\",\"或：\",\"// src/test/test.controller.ts import { Controller, Get, Param, UseFilters, ForbiddenException, } from '@nestjs/common'; import { TestService } from './test.service'; import { HttpExceptionFilter } from 'src/http-exception.filter'; @Controller('test') @UseFilters(HttpExceptionFilter) export class TestController { constructor(private readonly testService: TestService) {} @Get(':id') findOne(@Param('id') id: string) { throw new ForbiddenException(); return this.testService.findOne(+id); } }\"]},\"146\":{\"h\":\"全局使用\",\"t\":[\"使用 ExceptionFilter 装饰器将异常过滤器应用于整个应用程序：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { HttpExceptionFilter } from './http-exception.filter'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalFilters(new HttpExceptionFilter()); await app.listen(3000); } bootstrap();\"]},\"147\":{\"c\":[\"软件开发\"]},\"148\":{\"c\":[\"Nest\"]},\"149\":{\"h\":\"管道\"},\"150\":{\"h\":\"什么是管道\",\"t\":[\"管道（Pipes）是 Nest 提供的一种用于数据转换和验证的功能。通过使用管道，我们可以对控制器接收的数据进行转换和验证，然后再将其传递给服务层。\"]},\"151\":{\"h\":\"内置管道\",\"t\":[\"Nest 内置了一些常用的管道，包括 ValidationPipe、ParseIntPipe、ParseFloatPipe、ParseBoolPipe、ParseArrayPipe、ParseUUIDPipe、 ParseEnumPipe、 DefaultValuePipe、 ParseFilePipe。这些管道已经预先配置好了，我们可以直接导入使用。\"]},\"152\":{\"h\":\"自定义管道\",\"t\":[\"我们还可以创建自定义管道，只需要继承 PipeTransform 接口，并实现 transform 方法即可。\",\"使用如下命令创建一个自定义管道：\",\"nest g pipe 管道名称\",\"管道内容如下：\",\"// src/my-pipes/my-pipes.pipes.ts import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform, } from '@nestjs/common'; @Injectable() export class MyPipesPipe implements PipeTransform { transform(value: any, metadata: ArgumentMetadata) { // value 是传过来的数据 // metadata 是关于数据的元数据信息 if (metadata.type === 'query' && typeof value !== 'string') { throw new BadRequestException('Query parameter must be a string'); } return value; } }\"]},\"153\":{\"h\":\"管道的绑定方式\",\"t\":[\"管道有多种绑定方式。\"]},\"154\":{\"h\":\"控制器绑定\",\"t\":[\"我们可以通过在控制器类上添加 @UsePipes() 装饰器来将管道绑定到控制器上：\",\"// src/user/user.controller.ts import { Controller, Get, Post, Body, UsePipes, ParseIntPipe, } from '@nestjs/common'; import { UserService } from './user.service'; import { CreateUserDto } from './dto/create-user.dto'; @Controller('user') @UsePipes(ParseIntPipe) export class UserController { constructor(private readonly userService: UserService) {} @Post() create(@Body() createUserDto: CreateUserDto) { return this.userService.create(createUserDto); } @Get() findAll() { return this.userService.findAll(); } }\"]},\"155\":{\"h\":\"路由绑定\",\"t\":[\"我们还可以通过在路由上添加 @UsePipes() 装饰器来将管道绑定到路由上：\",\"// src/user/user.controller.ts import { Controller, Get, Post, Body, UsePipes, ParseIntPipe, } from '@nestjs/common'; import { UserService } from './user.service'; import { CreateUserDto } from './dto/create-user.dto'; @Controller('user') export class UserController { constructor(private readonly userService: UserService) {} @Post() create(@Body() createUserDto: CreateUserDto) { return this.userService.create(createUserDto); } @Get() @UsePipes(ParseIntPipe) findAll() { return this.userService.findAll(); } }\"]},\"156\":{\"h\":\"方法参数绑定\",\"t\":[\"我们还可以将管道绑定到方法参数上：\",\"// src/user/user.controller.ts import { Controller, Get, Param, ParseIntPipe } from '@nestjs/common'; import { UserService } from './user.service'; @Controller('user') export class UserController { constructor(private readonly userService: UserService) {} @Get(':id') findOne(@Param('id', ParseIntPipe) id: number) { return this.userService.findOne(id); } }\"]},\"157\":{\"h\":\"全局绑定\",\"t\":[\"我们还可以将管道绑定到全局，这样所有的控制器都会自动应用该管道。要实现全局绑定，我们需要在 main.ts 中添加以下代码：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { ParseIntPipe } from '@nestjs/common'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalPipes(new ParseIntPipe()); await app.listen(3000); } bootstrap();\"]},\"158\":{\"h\":\"类验证器\",\"t\":[\"在 Nest 中，类验证器（Class Validator）是一种基于装饰器的验证机制，它允许你在类属性上使用装饰器来指定验证规则。这些装饰器来自 class-validator 库，这是一个流行的 Node.js 库，用于对象和值的验证。类验证器与 Nest 的管道（Pipe）功能结合使用时，可以提供强大的数据验证能力。\",\"以下是使用类验证器的基本步骤：\",\"安装 class-validator 和 class-transformer 库，它们提供了类验证器所需的功能：\",\"npm install class-validator class-transformer\",\"创建数据传输对象（DTO）：创建一个类，使用装饰器来定义验证规则。例如，你可以使用 IsString、 IsInt、 IsNotEmpty 等装饰器来指定属性的类型和验证条件。\",\"// src/user/dto/create-user.dto.ts import { IsInt, IsNotEmpty, IsString, Min } from 'class-validator'; export class CreateUserDto { @IsString() @IsNotEmpty() name: string; @IsInt() @Min(0) age: number; }\",\"在控制器中使用类验证器：在控制器方法中，你可以使用 ValidationPipe 来验证请求体。ValidationPipe 会自动使用 class-validator来验证传入的 DTO。\",\"// src/user/user.controller.ts import { Controller, Post, Body, UsePipes, ValidationPipe, } from '@nestjs/common'; import { UserService } from './user.service'; import { CreateUserDto } from './dto/create-user.dto'; @Controller('user') export class UserController { constructor(private readonly userService: UserService) {} @Post() @UsePipes(new ValidationPipe()) create(@Body() createUserDto: CreateUserDto) { return this.userService.create(createUserDto); } }\",\"还可以在 main.ts 中注册全局验证管道：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { ValidationPipe } from '@nestjs/common'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalPipes(new ValidationPipe()); await app.listen(3000); } bootstrap();\"]},\"159\":{\"c\":[\"软件开发\"]},\"160\":{\"c\":[\"Nest\"]},\"161\":{\"h\":\"守卫\"},\"162\":{\"h\":\"什么是守卫\",\"t\":[\"守卫（Guards）是用于对 Nest 应用中的路由进行验证的。守卫根据运行时出现的某些条件（例如权限，角色，访问控制列表等）来确定给定的请求是否由路由处理程序处理。\"]},\"163\":{\"h\":\"创建守卫\",\"t\":[\"我们使用以下命令来创建一个守卫：\",\"nest g guard 守卫名称\",\"守卫是一个使用 @Injectable() 装饰器装饰的类。守卫应该实现 CanActivate 接口。它的内容如下：\",\"// src/auth/auth.guard.ts import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'; import { Observable } from 'rxjs'; @Injectable() export class AuthGuard implements CanActivate { // 如果返回为 true，则放行，否则拦截 // 这里可以根据具体业务逻辑进行判断 canActivate( context: ExecutionContext ): boolean | Promise<boolean> | Observable<boolean> { return true; } }\"]},\"164\":{\"h\":\"应用守卫\"},\"165\":{\"h\":\"应用于控制器或单个路由\",\"t\":[\"使用 @UseGuards() 装饰器来应用守卫：\",\"// src/article/article.controller.ts import { Controller, Post, Body, UseGuards } from '@nestjs/common'; import { ArticleService } from './article.service'; import { CreateArticleDto } from './dto/create-article.dto'; import { AuthGuard } from 'src/auth/auth.guard'; @Controller('article') @UseGuards(AuthGuard) export class ArticleController { constructor(private readonly articleService: ArticleService) {} @Post() create(@Body() createArticleDto: CreateArticleDto) { return this.articleService.create(createArticleDto); } }\",\"或：\",\"// src/article/article.controller.ts import { Controller, Post, Body, UseGuards } from '@nestjs/common'; import { ArticleService } from './article.service'; import { CreateArticleDto } from './dto/create-article.dto'; import { AuthGuard } from 'src/auth/auth.guard'; @Controller('article') export class ArticleController { constructor(private readonly articleService: ArticleService) {} @Post() @UseGuards(AuthGuard) create(@Body() createArticleDto: CreateArticleDto) { return this.articleService.create(createArticleDto); } }\"]},\"166\":{\"h\":\"应用于全局\",\"t\":[\"在 main.ts 中应用于全局：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { AuthGuard } from './auth/auth.guard'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalGuards(new AuthGuard()); await app.listen(3000); } bootstrap();\"]},\"167\":{\"h\":\"反射器实现角色控制守卫\",\"t\":[\"Nest 提供了 @SetMetadata() 装饰器将定制元数据附加到路由处理程序。\",\"// src/article/article.controller.ts import { Controller, Get, SetMetadata, UseGuards } from '@nestjs/common'; import { ArticleService } from './article.service'; import { AuthGuard } from 'src/auth/auth.guard'; @Controller('article') @UseGuards(AuthGuard) export class ArticleController { constructor(private readonly articleService: ArticleService) {} @Get() @SetMetadata('role', ['admin']) // 第一个参数：key，第二个参数：自定义我们存放的权限 findAll() { return this.articleService.findAll(); } }\",\"在守卫中，我们使用反射器（Reflector）读取元数据，并检查当前用户是否具有所需的权限。\",\"// src/auth/auth.guard.ts import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'; import { Reflector } from '@nestjs/core'; import { Observable } from 'rxjs'; import type { Request } from 'express'; @Injectable() export class AuthGuard implements CanActivate { constructor(private Reflector: Reflector) {} canActivate( context: ExecutionContext ): boolean | Promise<boolean> | Observable<boolean> { const admin = this.Reflector.get<string[]>( 'role', context.getHandler() ); const request = context.switchToHttp().getRequest<Request>(); if (admin.includes(request.query.role as string)) { return true; } else { return false; } } }\"]},\"168\":{\"c\":[\"软件开发\"]},\"169\":{\"c\":[\"Nest\"]},\"170\":{\"h\":\"拦截器\"},\"171\":{\"h\":\"什么是拦截器\",\"t\":[\"拦截器（Interceptors）是 Nest 提供的一种中间件机制，用于在请求前后对数据进行拦截处理。\"]},\"172\":{\"h\":\"创建拦截器\",\"t\":[\"我们使用以下命令创建一个拦截器：\",\"nest g interceptor 拦截器名称\",\"拦截器是一个使用 @Injectable() 装饰器装饰的类。拦截器应该实现 NestInterceptor 接口。它的内容如下：\",\"// src/my-interceptor/my-interceptor.interceptor.ts import { CallHandler, ExecutionContext, Injectable, NestInterceptor, } from '@nestjs/common'; import { Observable } from 'rxjs'; @Injectable() export class MyInterceptorInterceptor implements NestInterceptor { intercept(context: ExecutionContext, next: CallHandler): Observable<any> { return next.handle(); } }\"]},\"173\":{\"h\":\"使用拦截器\",\"t\":[\"我们可以使用多种方式来使用拦截器。\"]},\"174\":{\"h\":\"控制器中使用\",\"t\":[\"我们可以将拦截器直接添加到控制器中：\",\"// src/user/user.controller.ts import { Controller, Get, Post, Body, UseInterceptors } from '@nestjs/common'; import { UserService } from './user.service'; import { CreateUserDto } from './dto/create-user.dto'; import { MyInterceptorInterceptor } from 'src/my-interceptor/my-interceptor.interceptor'; @Controller('user') @UseInterceptors(new MyInterceptorInterceptor()) export class UserController { constructor(private readonly userService: UserService) {} @Post() create(@Body() createUserDto: CreateUserDto) { return this.userService.create(createUserDto); } @Get() findAll() { return this.userService.findAll(); } }\"]},\"175\":{\"h\":\"模块中定义\",\"t\":[\"我们也可以在模块中定义拦截器：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { UserModule } from './user/user.module'; import { MyInterceptorInterceptor } from './my-interceptor/my-interceptor.interceptor'; @Module({ imports: [UserModule], controllers: [AppController], providers: [ AppService, { provide: 'APP_INTERCEPTOR', useClass: MyInterceptorInterceptor, }, ], }) export class AppModule {}\"]},\"176\":{\"h\":\"全局使用\",\"t\":[\"我们也可以在全局中使用拦截器，只需要在 main.ts 中进行配置：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { MyInterceptorInterceptor } from './my-interceptor/my-interceptor.interceptor'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalInterceptors(new MyInterceptorInterceptor()); await app.listen(3000); } bootstrap();\"]},\"177\":{\"c\":[\"软件开发\"]},\"178\":{\"c\":[\"Nest\"]},\"179\":{\"h\":\"自定义装饰器\"},\"180\":{\"h\":\"创建自定义装饰器\",\"t\":[\"Nest 允许我们创建自定义装饰器。\",\"使用以下命令来创建一个装饰器：\",\"nest g decorator 装饰器名称\",\"它的内容如下：\",\"// src/role/role.decorator.ts import { SetMetadata } from '@nestjs/common'; export const Role = (...args: string[]) => SetMetadata('role', args);\"]},\"181\":{\"h\":\"装饰器聚合\",\"t\":[\"我们可以将多个装饰器聚合。\",\"// src/auth/auth.decorator.ts import { applyDecorators } from '@nestjs/common'; export function Auth(...roles: Role[]) { return applyDecorators( SetMetadata('roles', roles), UseGuards(AuthGuard, RolesGuard), ApiBearerAuth(), ApiUnauthorizedResponse({ description: 'Unauthorized\\\"' }) ); }\"]},\"182\":{\"c\":[\"软件开发\"]},\"183\":{\"c\":[\"Nest\"]},\"184\":{\"h\":\"文件上传与下载\"},\"185\":{\"h\":\"安装需要的库\",\"t\":[\"我们使用 multer 库来实现，为了获取更好的类型提示，我们需要安装 multer 的类型支持库\",\"npm install @types/multer\",\"我们创建一个 upload 模块来演示：\",\"nest g res upload\"]},\"186\":{\"h\":\"在模块中引入 multer\",\"t\":[\"// src/upload/upload.module.ts import { Module } from '@nestjs/common'; import { UploadService } from './upload.service'; import { UploadController } from './upload.controller'; import { MulterModule } from '@nestjs/platform-express'; import { diskStorage } from 'multer'; import { extname, join } from 'path'; @Module({ // 有 register 和 registerAsync 两个方法，前者是同步的，后者是异步的 imports: [ MulterModule.register({ // 文件上传完要存放的位置 storage: diskStorage({ destination: join(__dirname, '../uploads'), // 存放文件的路径 filename: (req, file, callback) => { // 重新定义文件名，file.originalname 文件的原始名称 // extname 获取文件后缀 const fileName = `${ new Date().getTime() + extname(file.originalname) }`; // 返回新的名称，第一个参数表示错误，用 null 即可 return callback(null, fileName); }, }), }), ], controllers: [UploadController], providers: [UploadService], }) export class UploadModule {}\"]},\"187\":{\"h\":\"在控制器中使用 multer\",\"t\":[\"在控制器中使用 multer 即可实现文件的上传与下载。\"]},\"188\":{\"h\":\"单文件上传\",\"t\":[\"// src/upload/upload.controller.ts import { Controller, Post, UseInterceptors, UploadedFile, } from '@nestjs/common'; // FileInterceptor 用于单文件上传 import { FileInterceptor } from '@nestjs/platform-express'; @Controller('upload') export class UploadController { @Post('upload') // 使用 @UseInterceptors 装饰器，拦截器为 FileInterceptor，参数为 'file' @UseInterceptors(FileInterceptor('file')) // UploadedFile 装饰器用于上传单文件 upload(@UploadedFile() file) { console.log('file:', file); return true; } }\"]},\"189\":{\"h\":\"多文件上传\",\"t\":[\"// src/upload/upload.controller.ts import { Controller, Post, UseInterceptors, UploadedFiles, } from '@nestjs/common'; // FilesInterceptor 用于多文件上传 import { FilesInterceptor } from '@nestjs/platform-express'; @Controller('upload') export class UploadController { @Post('upload') // 使用 @UseInterceptors 装饰器，拦截器为 FilesInterceptor，参数为：'files' @UseInterceptors(FilesInterceptor('files')) // UploadedFiles 装饰器用于上传多文件 upload(@UploadedFiles() files: Array<Express.Multer.File>) { console.log('files:', files); return true; } }\"]},\"190\":{\"h\":\"文件直接下载\",\"t\":[\"// src/upload/upload.controller.ts import { Controller, Get, Query, Res } from '@nestjs/common'; import { join } from 'path'; import { Response } from 'express'; @Controller('upload') export class UploadController { @Get('download') download(@Res() res: Response, @Query('filename') filename: string) { const url = join(__dirname, `../uploads/${filename}`); res.download(url); } }\"]},\"191\":{\"h\":\"使用文件流下载\",\"t\":[\"需要安装 compressing 包：\",\"npm install compressing\",\"// src/upload/upload.controller.ts import { Controller, Get, Query, Res } from '@nestjs/common'; import { join } from 'path'; import { Response } from 'express'; import { zip } from 'compressing'; @Controller('upload') export class UploadController { @Get('streamDownload') async streamDownload( @Res() res: Response, @Query('filename') filename: string ) { const url = join(__dirname, `../uploads/${filename}`); const tarStream = new zip.Stream(); await tarStream.addEntry(url); res.setHeader('Content-Type', 'application/octet-stream'); res.setHeader( 'Content-Disposition', `attachment; filename=${filename}` ); tarStream.pipe(res); } }\"]},\"192\":{\"c\":[\"软件开发\"]},\"193\":{\"c\":[\"Nest\"]},\"194\":{\"h\":\"静态资源访问\"},\"195\":{\"h\":\"配置\",\"t\":[\"创建一个 public 文件夹用来存放静态资源\",\"在 main.ts 文件中调用 useStaticAssets 来实现静态资源访问：\",\"// main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { NestExpressApplication } from '@nestjs/platform-express'; async function bootstrap() { const app = await NestFactory.create<NestExpressApplication>(AppModule); app.useStaticAssets('public', { prefix: '/static' }); await app.listen(3000); } bootstrap();\"]},\"196\":{\"h\":\"访问\",\"t\":[\"在浏览器中访问 localhost:3000/static/文件 即可\"]},\"197\":{\"c\":[\"软件开发\"]},\"198\":{\"c\":[\"Nest\"]},\"199\":{\"h\":\"Nest 学习记录\",\"t\":[\"分享我学习 Nest 过程中的笔记。\"]},\"200\":{\"h\":\"理解曝光三要素\"},\"201\":{\"h\":\"相机的成像原理\",\"t\":[\"光穿过镜头到达传感器（CCD或CMOS），传感器把光记录下来，通过处理器转化成图片。\",\"传感器是由一个一个的像素点组成\",\"并不是像素越多越好，这还跟传感器的面积有关。虽然增加像素数量可以提高图像的分辨率，但如果像素密度过高，而传感器面积没有相应增加，可能会导致图像质量下降。这是因为过于密集的像素可能会互相干扰，导致图像噪点增加。\"]},\"202\":{\"h\":\"曝光三要素\",\"t\":[\"曝光三要素：光圈、快门、感光度\"]},\"203\":{\"h\":\"光圈\",\"t\":[\"光圈是相机镜头的一个孔，用于控制进光量。\",\"光圈大小：通常用f+数字来表示。f值越小表示光圈开得更大，允许更多光线进入；f值越大表示光圈较小，进入的光线较少。\",\"光圈除了能够控制进光量，还影响景深（即照片中前后物体的清晰度范围）。大光圈（低f值）产生浅景深，使得主体清晰而背景模糊，适合肖像和特定物体的特写；小光圈（高f值）产生深景深，使得前景和背景都相对清晰，适合风景摄影和需要广泛清晰度的场景。\",\"景深还与焦距、拍摄距离有关 拍摄距离越近，景深越浅，背景越模糊 焦距越长，景深越浅，背景越模糊\"]},\"204\":{\"h\":\"快门\",\"t\":[\"快门用于控制光线照射到传感器的时间长度。\",\"快门速度（Shutter Speed）表示快门打开的时间长度，通常以秒为单位。例如，1/1000秒的快门速度意味着快门每次只打开1/1000秒，而1秒的快门速度表示快门将持续打开1秒钟。它可以控制进光量从而影响曝光时间。\",\"快门速度还可以影响对动态物体的捕捉能力。较快的快门速度可以冻结运动并捕捉快速的动作，而较慢的快门速度可以模糊移动的物体，创造出动感效果。\",\"如果想抓拍，我们应该使用快门速度较短的快门。\",\"慢快门可以拍摄出镜面般的水面，绸缎般的水流。\"]},\"205\":{\"h\":\"感光度\",\"t\":[\"感光度（ISO）是相机传感器对光线的敏感程度。\",\"感光度越高，传感器对光线的敏感度就越高，图像越亮。而提高感光度会增加图像的噪点。\",\"使用感光度时需要权衡，因为虽然高感光度可以在低光环境下提供更好的曝光，但也可能引入噪点。\",\"感光度的作用就是牺牲，我们可以通过后期来减少高感光度带来的噪点。\"]},\"206\":{\"h\":\"安全快门\",\"t\":[\"安全快门指的是在手持相机拍摄时，能够避免因手抖引起的模糊的最慢快门速度。\",\"安全快门的经验值是：1/焦距\"]},\"207\":{\"c\":[\"摄影\"]},\"208\":{\"c\":[\"曝光\",\"光圈\",\"快门\",\"感光度\"]},\"209\":{\"h\":\"相机与镜头\"},\"210\":{\"h\":\"相机分类\",\"t\":[\"单反相机：可换镜头，机身偏重，续航及稳定性好\",\"微单相机（无反相机）：可换镜头，机身轻巧，操作比单反简单，续航没单反好，所见即所得\",\"卡片机：不可换镜头，便于随身携带，画质一般\"]},\"211\":{\"h\":\"画幅分类\",\"t\":[\"相机画幅指的是相机的传感器尺寸\",\"全画幅：主流画幅，画质优异\",\"半画幅：也称为APS-C画幅，主流画幅\",\"M43画幅：部分品牌使用，画幅大小小于半画幅\"]},\"212\":{\"h\":\"焦距和焦段\",\"t\":[\"镜头上一般有一串数字，单位为毫米，这里的数字指的就是焦距。数字的范围指的是焦段。\",\"焦距是指从镜头光学中心到相机传感器的距离。焦距决定了镜头的视角宽度和成像的远近。焦距的数值越小，视角越宽；数值越大，视角越窄。\",\"焦距还影响景深，焦距越长，景深越浅，背景越模糊\"]},\"213\":{\"c\":[\"摄影\"]},\"214\":{\"c\":[\"相机\",\"镜头\",\"焦距\",\"焦段\"]},\"215\":{\"h\":\"如何设定相机参数\"},\"216\":{\"h\":\"风光摄影\",\"t\":[\"清晰为主，对对焦要求不高\",\"光圈：白天建议光圈优先，此时快门速度不必担心，一定够快，如果近处有景物时，要缩小光圈（一般取f7.1以上），近处无景物而对焦点较远时，光圈可大可小。\",\"快门：夜晚建议快门优先，光线不足且手持时首先保证充足的安全快门，如果有三脚架时，可选慢快门，可以使水、云等呈现丝绸状。\",\"其他：RAW格式、ISO自动、白平衡自动、单次对焦、单点对焦、如果没有快门线，设置2秒的延迟快门\"]},\"217\":{\"h\":\"扫街（活动）摄影\",\"t\":[\"多运动的物体，对对焦要求高\",\"光线不稳定时，快门优先：1/200以上，保证移动的主体也清晰。\",\"在光照很强时，可以光圈优先，设置大光圈，快门速度自然会很高。\",\"对焦：区域选广域，来不及调整对焦点；模式选AFC连续对焦，锁住移动主体。\",\"其他：光圈与ISO自动、曝光补偿控制亮度、白平衡自动。\"]},\"218\":{\"h\":\"人像摄影\",\"t\":[\"最关心的参数是光圈，其最能影响背景虚化的效果。\"]},\"219\":{\"h\":\"参数设定整体思路\",\"t\":[\"白天光线充足时，安全快门不必担心，可光圈优先：风光f8左右，人像开到最大。\",\"光线不足时，安全快门压力大，可选快门优先，根据不同情况，设置不同的安全快门。\",\"一般快门速度越快越安全，但需要拍摄丝绸状流水时，须设置慢快门，用三脚架固定，别忘记使用ND镜。\",\"拍摄移动、随机主体时，对焦选择广域+AFC连续对焦，把对焦交给相机；拍摄风光、产品时，可选单点对焦+单次对焦。\",\"测光模式保持默认即可，白平衡可前期设置好，也可设置自动后使用后期调整。\"]},\"220\":{\"h\":\"关于光比\",\"t\":[\"光比就是背光面亮度/受光面亮度。\",\"以下问题，都与光比有关：\",\"逆光时，人脸是黑的\",\"演唱会时，艺人的脸过曝\",\"窗外过曝\",\"背景太亮/太暗\",\"解决方法：\",\"后期法：拍摄RAW格式的照片，争取更高宽容度，通过后期来调整。\",\"合成法：将两张照片合成一张。\",\"补光法：用补光灯补光。\",\"亮部或暗部放弃其一。\"]},\"221\":{\"c\":[\"摄影\"]},\"222\":{\"c\":[\"摄影技巧\"]},\"223\":{\"h\":\"如何提高构图能力\"},\"224\":{\"h\":\"构图的底层逻辑\",\"t\":[\"要学会分析画面：\",\"分析一个画面时一般有两个维度：抽象几何特征和内容。\",\"抽象几何特征：把画面的元素抽象成几何图形（点、线、面）\",\"内容：画面主题、主体、在什么环境下拍摄\"]},\"225\":{\"h\":\"如何学习\",\"t\":[\"抄绘法：拿出一张图片，把它的线条画出来。让它的秩序慢慢体现出来。然后思考我该如何拍出相似的图片\"]},\"226\":{\"c\":[\"摄影\"]},\"227\":{\"c\":[\"构图\"]},\"228\":{\"h\":\"没有摄影思路怎么办\"},\"229\":{\"h\":\"搜集好照片\",\"t\":[\"Behance\",\"Pinterest\",\"500px\",\"1px\",\"CNU\"]},\"230\":{\"h\":\"学会分析\",\"t\":[\"把图片存下来，然后分好类，再进行抄绘学习。\"]},\"231\":{\"c\":[\"摄影\"]},\"232\":{\"c\":[\"摄影思路\"]},\"233\":{\"h\":\"摄影学习记录\",\"t\":[\"强烈推荐B站UP主：摄影师泰罗，以下笔记为我观看其视频教程后所记录的笔记。\"]},\"234\":{\"h\":\"点灯大师\"},\"235\":{\"h\":\"如何使用 GPIO\",\"t\":[\"先打开时钟，然后定义一个 GPIO 类型的结构体，配置参数：引脚、模式、速率，最后调用 GPIO_Init 函数进行初始化。\"]},\"236\":{\"h\":\"点亮一颗小灯\",\"t\":[\"我们通过给小灯一个高电平，使其发光。\",\"可以使用 GPIO_SetBits 函数来给引脚赋值高电平，使用 GPIO_ResetBits 函数来给引脚赋值低电平。\",\"也可以使用 GPIO_WriteBit 函数来给引脚赋值，参数为：引脚、赋值状态。\",\"// main.c #include \\\"stm32f10x.h\\\" int main(){ // 打开时钟 RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE); // 定义一个 GPIO 类型的结构体 GPIO_InitTypeDef GPIO_Initstructure; // 配置参数：模式 GPIO_Initstructure.GPIO_Mode = GPIO_Mode_Out_PP; // 配置参数：引脚 GPIO_Initstructure.GPIO_Pin = GPIO_Pin_0; // 配置参数：速率 GPIO_Initstructure.GPIO_Speed = GPIO_Speed_50MHz; // 用 GPIO_Init 函数将结构体存储 GPIO_Init(GPIOA,&GPIO_Initstructure); while (1) { // 给 PA0 引脚低电平 // GPIO_ResetBits(GPIOA,GPIO_Pin_0); // GPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_RESET); // 给 PA0 引脚高电平 // GPIO_SetBits(GPIOA,GPIO_Pin_0); // GPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_SET); } }\"]},\"237\":{\"c\":[\"嵌入式开发\"]},\"238\":{\"c\":[\"STM32\"]},\"239\":{\"h\":\"STM32 学习记录\",\"t\":[\"分享我学习 STM32 过程中的笔记。\"]},\"240\":{\"h\":\"网盘管理神器 Alist 的安装\"},\"241\":{\"h\":\"Windows 平台\"},\"242\":{\"h\":\"下载安装包并安装\",\"t\":[\"Github 地址：Alist\",\"去 releases 里下载最新版 Windows 安装包\",\"下载完成后解压即可\",\"然后在文件资源管理器中找到 alist.exe 文件，在地址栏输入 cmd 后回车\",\"进入命令提示符后输入 alist server 运行\",\"在输出的 INFO 中可以看到密码：\",\"INFO[2023-12-02 02:21:36] Successfully created the admin user and the initial password is: 此处为密码\",\"从浏览器进入 localhost:5244 访问即可配置\"]},\"243\":{\"h\":\"添加存储\",\"t\":[\"查看官方文档即可：AList 文档\"]},\"244\":{\"h\":\"设置开机自启\",\"t\":[\"在 alist.exe 文件的目录里新建一个文件名为 alist.vbs\",\"文件内容为：\",\"Set ws = CreateObject(\\\"Wscript.Shell\\\") ws.run \\\"alist.exe server\\\",vbhide\",\"然后右键该文件创建快捷方式，将快捷方式剪切，在地址栏输入 shell:startup\",\"将快捷方式粘贴进来即可\"]},\"245\":{\"h\":\"软件更新\",\"t\":[\"去官网下载最新安装包，将 alist.exe 文件替换为最新的即可\"]},\"246\":{\"h\":\"Android 平台\"},\"247\":{\"h\":\"安装 termux\",\"t\":[\"从 F-Droid 下载 termux 和 Termux:Widget\",\"更换清华源：termux | 镜像站使用帮助 | 清华大学开源软件镜像站\"]},\"248\":{\"h\":\"安装 Alist\",\"t\":[\"在 termux 中输入如下命令：\",\"apt update && apt install alist\",\"启动 Alist：\",\"alist server\",\"在输出的 INFO 中可以看到密码：\",\"INFO[2023-12-02 02:21:36] Successfully created the admin user and the initial password is: 此处为密码\",\"进入 localhost:5244 访问即可\"]},\"249\":{\"h\":\"添加存储\",\"t\":[\"查看官方文档即可：AList 文档\"]},\"250\":{\"h\":\"设置一键启动脚本\",\"t\":[\"下载 vim：\",\"pkg install vim\",\"建立文件夹：\",\"mkdir .shortcuts\",\"进入文件夹：\",\"cd .shortcuts\",\"编辑脚本：\",\"vim start_alist.sh\",\"进入脚本编辑界面，按 i 进入编辑模式，输入以下内容：\",\"alist server\",\"输入完成后，按 esc 退出，输入 :wq 保存\",\"进入桌面，添加安卓小部件，将脚本添加到桌面即可\"]},\"251\":{\"h\":\"更新 Alist\",\"t\":[\"在 termux 中输入以下命令即可：\",\"pkg upgrade alist\"]},\"252\":{\"c\":[\"软件工具\"]},\"253\":{\"c\":[\"Alist\",\"网盘\",\"termux\"]},\"254\":{\"h\":\"Git 配置指南\"},\"255\":{\"h\":\"查看配置信息\",\"t\":[\"git config --list\"]},\"256\":{\"h\":\"配置用户信息\",\"t\":[\"git config --global user.name \\\"Your Name\\\" git config --global user.email \\\"email@example.com\\\"\"]},\"257\":{\"h\":\"配置代理\"},\"258\":{\"h\":\"设置全局代理\",\"t\":[\"git config --global http.proxy http://127.0.0.1:7890\",\"git config --global https.proxy https://127.0.0.1:7890\"]},\"259\":{\"h\":\"取消设置全局代理\",\"t\":[\"git config --global --unset http.proxy\",\"git config --global --unset https.proxy\"]},\"260\":{\"h\":\"设置对 GitHub 代理\",\"t\":[\"git config --global http.https://github.com.proxy http://127.0.0.1:7890\",\"git config --global https.https://github.com.proxy https://127.0.0.1:7890\"]},\"261\":{\"h\":\"取消设置对 GitHub 代理\",\"t\":[\"git config --global --unset http.https://github.com.proxy\",\"git config --global --unset https.https://github.com.proxy\"]},\"262\":{\"c\":[\"软件工具\"]},\"263\":{\"c\":[\"Git\"]},\"264\":{\"h\":\"我的浏览器插件合集\"},\"265\":{\"h\":\"ACG助手：专为bilibili定制的综合辅助扩展\",\"t\":[\"简介：专为 bilibili 定制的综合辅助扩展\",\"链接：ACG 助手：专为 bilibili 定制的综合辅助扩展\"]},\"266\":{\"h\":\"Bookmark Cleaner 一键清理失效书签\",\"t\":[\"简介：自动检测失效书签链接，一键清理\",\"链接：Bookmark Cleaner 一键清理失效书签\"]},\"267\":{\"h\":\"Proxy SwitchyOmega\",\"t\":[\"简介：轻松快捷地管理和切换多个代理设置\",\"链接：Proxy SwitchyOmega\"]},\"268\":{\"h\":\"uBlock Origin\",\"t\":[\"简介：一款高效的网络请求过滤工具（可以过滤网站广告），占用极低的内存和 CPU\",\"链接：uBlock Origin\"]},\"269\":{\"h\":\"扩展管理器（Extension Manager）\",\"t\":[\"简介：一键管理所有扩展\",\"链接：扩展管理器\"]},\"270\":{\"h\":\"篡改猴\",\"t\":[\"简介：使用用户脚本自由地改变网络\",\"链接：篡改猴\"]},\"271\":{\"h\":\"青柠起始页\",\"t\":[\"简介：一个简洁、美观、实用的浏览器起始页\",\"链接：青柠起始页\"]},\"272\":{\"c\":[\"软件工具\"]},\"273\":{\"c\":[\"浏览器插件\"]},\"274\":{\"h\":\"VSCode 配置指南\",\"t\":[\"记录我常用的 VSCode 基础配置\"]},\"275\":{\"h\":\"自动保存\",\"t\":[\"在设置中搜索 Auto Save，找到 Files:Auto Save 并设置为 afterDelay。\"]},\"276\":{\"h\":\"设置字体大小\",\"t\":[\"在设置中搜索 Font Size，找到 Editor:Font Size 并设置为 20。\"]},\"277\":{\"h\":\"设置字体系列\",\"t\":[\"在设置中搜索 Font Family，找到 Editor:Font Family 并设置为：JetBrains Mono,Consolas,'Courier New',monospace。\"]},\"278\":{\"h\":\"设置自动格式化\",\"t\":[\"在设置中搜索 Format On Save，找到 Editor:Format On Save 并设置为 true。\",\"在设置中搜索 Format On Type，找到 Editor:Format On Type 并设置为 true。\"]},\"279\":{\"h\":\"设置对话框样式\",\"t\":[\"在设置中搜索 Dialog Style，找到 Dialog Style 并设置为 custom。\"]},\"280\":{\"h\":\"设置光标动画样式\",\"t\":[\"在设置中搜索 Cursor Blinking，找到 Cursor Blinking 并设置为 smooth。\"]},\"281\":{\"h\":\"设置 HTML 标签关联编辑\",\"t\":[\"在设置中搜索 Linked Editing，找到 Editor:Linked Editing 并设置为 true。\"]},\"282\":{\"h\":\"设置 JavaScript 语义检查\",\"t\":[\"在设置中搜索 Check JS，找到 Implicit Project Config:Check JS 并设置为 true。\"]},\"283\":{\"h\":\"设置 JavaScript、TypeScript 格式化时添加分号\",\"t\":[\"在设置中搜索 Semicolons，找到 Format:Semicolons 并设置为 insert。\"]},\"284\":{\"c\":[\"软件工具\"]},\"285\":{\"c\":[\"VSCode\"]},\"286\":{\"h\":\"我的电脑必装软件合集\"},\"287\":{\"h\":\"微信\",\"t\":[\"简介：社交软件\",\"链接：微信，是一个生活方式\"]},\"288\":{\"h\":\"QQ\",\"t\":[\"简介：社交软件\",\"链接：QQ-轻松做自己\"]},\"289\":{\"h\":\"Geek\",\"t\":[\"简介：高效、免费、小巧的软件卸载工具\",\"链接：Geek Uninstaller - 最好的免费卸载程序\"]},\"290\":{\"h\":\"Bandizip\",\"t\":[\"简介：面向专业人士的压缩软件\",\"链接：Bandizip · 业内领先的压缩文件解决方案\"]},\"291\":{\"h\":\"Clash Verge\",\"t\":[\"简介：代理工具\",\"链接：Clash Verge\"]},\"292\":{\"h\":\"PixPin\",\"t\":[\"简介：功能强大使用简单的截图/贴图工具，帮助你提高效率\",\"链接：PixPin\"]},\"293\":{\"h\":\"Git\",\"t\":[\"简介：免费的开源分布式版本控制系统\",\"链接：Git\"]},\"294\":{\"h\":\"VSCode\",\"t\":[\"简介：免费、开源的代码编辑器\",\"链接：Visual Studio Code\"]},\"295\":{\"h\":\"Alist\",\"t\":[\"简介：支持多种存储的文件列表程序\",\"链接：AList 文档\",\"相关文章：网盘管理神器 Alist 的安装\"]},\"296\":{\"h\":\"RayLink\",\"t\":[\"简介：免费远程控制软件\",\"链接：RayLink\"]},\"297\":{\"h\":\"PotPlayer\",\"t\":[\"简介：强大的视频播放器\",\"链接：Global Potplayer\"]},\"298\":{\"h\":\"Apifox\",\"t\":[\"简介：API 设计、开发、测试一体化协作平台\",\"链接：Apifox - API 设计、开发、测试一体化协作平台\"]},\"299\":{\"c\":[\"软件工具\"]},\"300\":{\"c\":[\"电脑\"]},\"301\":{\"h\":\"如何将抖音表情包保存到微信\",\"t\":[\"抖音有很多我们喜欢的表情包，如果我们想把它们保存到微信上，该怎么操作呢？\"]},\"302\":{\"h\":\"登录抖音网页版\",\"t\":[\"在电脑浏览器中登录抖音网页版，然后将我们喜欢的表情包通过私信发送给抖音好友\"]},\"303\":{\"h\":\"打开私信页面\",\"t\":[\"在私信页面找到我们发送的表情包\",\"如何将抖音表情包保存到微信01\"]},\"304\":{\"h\":\"通过浏览器开发者工具审查元素\",\"t\":[\"按F12打开开发者工具，我们点击开发者工具左上角的按钮，然后此时我们鼠标选中要保存的表情包，即可在右面开发者工具中找到该元素，将鼠标放到右侧审查出的元素上即可获取到表情包的网络地址\",\"如何将抖音表情包保存到微信02\",\"如何将抖音表情包保存到微信03\"]},\"305\":{\"h\":\"下载并保存\",\"t\":[\"将网络地址在浏览器打开，然后右键选择另存为，即可保存表情包到本地\"]},\"306\":{\"h\":\"发送到微信并保存\",\"t\":[\"在微信中将下载的表情包发送给好友，然后将其添加到表情即可\"]},\"307\":{\"c\":[\"软件工具\"]},\"308\":{\"c\":[\"抖音\",\"微信\",\"表情包\"]},\"309\":{\"h\":\"软件工具\",\"t\":[\"分享我常用的软件工具以及一些软件工具的使用技巧。\"]},\"310\":{\"h\":\"泰山\",\"t\":[\"2024年5月21日，与好友一起夜爬泰山，幸运地在5月22日凌晨看到了日出。\"]},\"311\":{\"h\":\"登山路线\",\"t\":[\"红门上山然后乘桃花峪索道下山，如果体力好的话可以先去岱庙游览一番然后再登山（购买泰山门票可免费游览岱庙）\"]},\"312\":{\"h\":\"旅行建议\",\"t\":[\"建议轻装上阵，水可以少带，因为上面也不是很贵，厚衣服可以带一件，但是建议去南天门租大衣（30元，押金100元），可以带手电筒、登山杖。\",\"租大衣最好是找有摊位的，不然可能会有商家跑路的风险\"]},\"313\":{\"h\":\"美食推荐\",\"t\":[\"伊顺康羊蝎子馆（灵山大街店） \",\"地址：山东省泰安市泰山区财源街道肿瘤医院对面新灵山大街369-9号\",\"价格：人均40元\",\"推荐菜：羊蝎子、凉拌羊脸\",\"推荐理由：味道特别好，分量足，价格便宜\"]},\"314\":{\"c\":[\"旅行\"]},\"315\":{\"c\":[\"泰山\"]},\"316\":{\"h\":\"旅行记录\",\"t\":[\"分享旅行过程中的美好记忆\"]},\"317\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"旅行记录\",{\"0\":{\"316\":1}}],[\"旅行\",{\"2\":{\"314\":1}}],[\"旅行建议\",{\"0\":{\"312\":1}}],[\"味道特别好\",{\"1\":{\"313\":1}}],[\"推荐理由\",{\"1\":{\"313\":1}}],[\"推荐菜\",{\"1\":{\"313\":1}}],[\"凉拌羊脸\",{\"1\":{\"313\":1}}],[\"羊蝎子\",{\"1\":{\"313\":1}}],[\"价格便宜\",{\"1\":{\"313\":1}}],[\"价格\",{\"1\":{\"313\":1}}],[\"9号\",{\"1\":{\"313\":1}}],[\"山东省泰安市泰山区财源街道肿瘤医院对面新灵山大街369\",{\"1\":{\"313\":1}}],[\"灵山大街店\",{\"1\":{\"313\":1}}],[\"伊顺康羊蝎子馆\",{\"1\":{\"313\":1}}],[\"美食推荐\",{\"0\":{\"313\":1}}],[\"美观\",{\"1\":{\"271\":1}}],[\"租大衣最好是找有摊位的\",{\"1\":{\"312\":1}}],[\"押金100元\",{\"1\":{\"312\":1}}],[\"厚衣服可以带一件\",{\"1\":{\"312\":1}}],[\"因为上面也不是很贵\",{\"1\":{\"312\":1}}],[\"因为虽然高感光度可以在低光环境下提供更好的曝光\",{\"1\":{\"205\":1}}],[\"水可以少带\",{\"1\":{\"312\":1}}],[\"购买泰山门票可免费游览岱庙\",{\"1\":{\"311\":1}}],[\"红门上山然后乘桃花峪索道下山\",{\"1\":{\"311\":1}}],[\"登山杖\",{\"1\":{\"312\":1}}],[\"登山路线\",{\"0\":{\"311\":1}}],[\"登录抖音网页版\",{\"0\":{\"302\":1}}],[\"幸运地在5月22日凌晨看到了日出\",{\"1\":{\"310\":1}}],[\"与好友一起夜爬泰山\",{\"1\":{\"310\":1}}],[\"泰山\",{\"0\":{\"310\":1},\"2\":{\"315\":1}}],[\"表情包\",{\"2\":{\"308\":1}}],[\"表示快门打开的时间长度\",{\"1\":{\"204\":1}}],[\"表示使用省略号来代替溢出的文本\",{\"1\":{\"71\":1}}],[\"表示不允许换行\",{\"1\":{\"71\":1}}],[\"抖音\",{\"2\":{\"308\":1}}],[\"抖音有很多我们喜欢的表情包\",{\"1\":{\"301\":1}}],[\"发送到微信并保存\",{\"0\":{\"306\":1}}],[\"电脑\",{\"2\":{\"300\":1}}],[\"测试一体化协作平台\",{\"1\":{\"298\":2}}],[\"测光模式保持默认即可\",{\"1\":{\"219\":1}}],[\"强大的视频播放器\",{\"1\":{\"297\":1}}],[\"强烈推荐b站up主\",{\"1\":{\"233\":1}}],[\"相关文章\",{\"1\":{\"295\":1}}],[\"相机\",{\"2\":{\"214\":1}}],[\"相机画幅指的是相机的传感器尺寸\",{\"1\":{\"211\":1}}],[\"相机分类\",{\"0\":{\"210\":1}}],[\"相机与镜头\",{\"0\":{\"209\":1}}],[\"相机的成像原理\",{\"0\":{\"201\":1}}],[\"支持多种存储的文件列表程序\",{\"1\":{\"295\":1}}],[\"帮助你提高效率\",{\"1\":{\"292\":1}}],[\"贴图工具\",{\"1\":{\"292\":1}}],[\"功能强大使用简单的截图\",{\"1\":{\"292\":1}}],[\"功能结合使用时\",{\"1\":{\"158\":1}}],[\"业内领先的压缩文件解决方案\",{\"1\":{\"290\":1}}],[\"小巧的软件卸载工具\",{\"1\":{\"289\":1}}],[\"小光圈\",{\"1\":{\"203\":1}}],[\"免费远程控制软件\",{\"1\":{\"296\":1}}],[\"免费的开源分布式版本控制系统\",{\"1\":{\"293\":1}}],[\"免费\",{\"1\":{\"289\":1,\"294\":1}}],[\"轻松做自己\",{\"1\":{\"288\":1}}],[\"轻松快捷地管理和切换多个代理设置\",{\"1\":{\"267\":1}}],[\"社交软件\",{\"1\":{\"287\":1,\"288\":1}}],[\"格式化时添加分号\",{\"0\":{\"283\":1}}],[\"标签关联编辑\",{\"0\":{\"281\":1}}],[\"标准提供者是使用\",{\"1\":{\"119\":1}}],[\"标准提供者\",{\"0\":{\"119\":1}}],[\"找到\",{\"1\":{\"275\":1,\"276\":1,\"277\":1,\"278\":2,\"279\":1,\"280\":1,\"281\":1,\"282\":1,\"283\":1}}],[\"基础配置\",{\"1\":{\"274\":1}}],[\"基本使用\",{\"0\":{\"104\":1}}],[\"记录我常用的\",{\"1\":{\"274\":1}}],[\"青柠起始页\",{\"0\":{\"271\":1},\"1\":{\"271\":1}}],[\"篡改猴\",{\"0\":{\"270\":1},\"1\":{\"270\":1}}],[\"扩展管理器\",{\"0\":{\"269\":1},\"1\":{\"269\":1}}],[\"占用极低的内存和\",{\"1\":{\"268\":1}}],[\"自动保存\",{\"0\":{\"275\":1}}],[\"自动检测失效书签链接\",{\"1\":{\"266\":1}}],[\"自定义装饰器\",{\"0\":{\"179\":1}}],[\"自定义我们存放的权限\",{\"1\":{\"167\":1}}],[\"自定义管道\",{\"0\":{\"152\":1}}],[\"自定义提供者\",{\"0\":{\"120\":1}}],[\"助手\",{\"1\":{\"265\":1}}],[\"链接\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"287\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"294\":1,\"295\":1,\"296\":1,\"297\":1,\"298\":1}}],[\"定制的综合辅助扩展\",{\"1\":{\"265\":2}}],[\"定义一个\",{\"1\":{\"236\":1}}],[\"定义动态模块\",{\"1\":{\"131\":1}}],[\"定义\",{\"0\":{\"118\":1}}],[\"专为\",{\"1\":{\"265\":2}}],[\"专为bilibili定制的综合辅助扩展\",{\"0\":{\"265\":1}}],[\"简介\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"287\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"294\":1,\"295\":1,\"296\":1,\"297\":1,\"298\":1}}],[\"简写方式\",{\"1\":{\"119\":1}}],[\"取消设置对\",{\"0\":{\"261\":1}}],[\"取消设置全局代理\",{\"0\":{\"259\":1}}],[\"代理工具\",{\"1\":{\"291\":1}}],[\"代理\",{\"0\":{\"260\":1,\"261\":1}}],[\"代码块\",{\"1\":{\"45\":2}}],[\"7890\",{\"1\":{\"258\":2,\"260\":2}}],[\"添加安卓小部件\",{\"1\":{\"250\":1}}],[\"添加存储\",{\"0\":{\"243\":1,\"249\":1}}],[\"保存\",{\"1\":{\"250\":1}}],[\"保证移动的主体也清晰\",{\"1\":{\"217\":1}}],[\"退出\",{\"1\":{\"250\":1}}],[\"输入\",{\"1\":{\"250\":1}}],[\"输入完成后\",{\"1\":{\"250\":1}}],[\"输入以下内容\",{\"1\":{\"250\":1}}],[\"按f12打开开发者工具\",{\"1\":{\"304\":1}}],[\"按\",{\"1\":{\"250\":2}}],[\"编辑脚本\",{\"1\":{\"250\":1}}],[\"编码完成\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"编码\",{\"0\":{\"9\":1,\"11\":1},\"1\":{\"6\":1}}],[\"建立文件夹\",{\"1\":{\"250\":1}}],[\"建议轻装上阵\",{\"1\":{\"312\":1}}],[\"建议全局安装\",{\"1\":{\"88\":1}}],[\"建议学习顺序\",{\"1\":{\"0\":1}}],[\"启动\",{\"1\":{\"248\":1}}],[\"清华大学开源软件镜像站\",{\"1\":{\"247\":1}}],[\"清晰为主\",{\"1\":{\"216\":1}}],[\"镜像站使用帮助\",{\"1\":{\"247\":1}}],[\"镜头\",{\"2\":{\"214\":1}}],[\"镜头上一般有一串数字\",{\"1\":{\"212\":1}}],[\"软件工具\",{\"0\":{\"309\":1},\"2\":{\"252\":1,\"262\":1,\"272\":1,\"284\":1,\"299\":1,\"307\":1}}],[\"软件更新\",{\"0\":{\"245\":1}}],[\"软件开发\",{\"2\":{\"34\":1,\"40\":1,\"46\":1,\"53\":1,\"59\":1,\"65\":1,\"68\":1,\"73\":1,\"76\":1,\"84\":1,\"91\":1,\"99\":1,\"114\":1,\"126\":1,\"132\":1,\"139\":1,\"147\":1,\"159\":1,\"168\":1,\"177\":1,\"182\":1,\"192\":1,\"197\":1}}],[\"从\",{\"1\":{\"247\":1}}],[\"从浏览器进入\",{\"1\":{\"242\":1}}],[\"从缓冲块块\",{\"1\":{\"18\":1,\"19\":1}}],[\"从缓冲块位置\",{\"1\":{\"17\":1,\"23\":1}}],[\"此处为密码\",{\"1\":{\"242\":1,\"248\":1}}],[\"此时快门速度不必担心\",{\"1\":{\"216\":1}}],[\"此时\",{\"1\":{\"98\":1,\"131\":2}}],[\"此时我们发现回到了刚才借的位置\",{\"1\":{\"18\":3,\"19\":2}}],[\"此时我们需要借位\",{\"1\":{\"18\":1,\"19\":1}}],[\"此时读码明显没有结束\",{\"1\":{\"18\":1,\"19\":1}}],[\"进入桌面\",{\"1\":{\"250\":1}}],[\"进入编辑模式\",{\"1\":{\"250\":1}}],[\"进入脚本编辑界面\",{\"1\":{\"250\":1}}],[\"进入文件夹\",{\"1\":{\"250\":1}}],[\"进入\",{\"1\":{\"248\":1}}],[\"进入命令提示符后输入\",{\"1\":{\"242\":1}}],[\"进入的光线较少\",{\"1\":{\"203\":1}}],[\"里下载最新版\",{\"1\":{\"242\":1}}],[\"去官网下载最新安装包\",{\"1\":{\"245\":1}}],[\"去\",{\"1\":{\"242\":1}}],[\"地址\",{\"1\":{\"242\":1,\"313\":1}}],[\"下载并保存\",{\"0\":{\"305\":1}}],[\"下载并安装go语言环境\",{\"0\":{\"81\":1}}],[\"下载\",{\"1\":{\"247\":1,\"250\":1}}],[\"下载完成后解压即可\",{\"1\":{\"242\":1}}],[\"下载安装包并安装\",{\"0\":{\"242\":1}}],[\"平台\",{\"0\":{\"241\":1,\"246\":1}}],[\"网盘\",{\"2\":{\"253\":1}}],[\"网盘管理神器\",{\"0\":{\"240\":1},\"1\":{\"295\":1}}],[\"网页中常见一些三角形\",{\"1\":{\"75\":1}}],[\"嵌入式开发\",{\"2\":{\"237\":1}}],[\"给\",{\"1\":{\"236\":2}}],[\"赋值状态\",{\"1\":{\"236\":1}}],[\"函数将结构体存储\",{\"1\":{\"236\":1}}],[\"函数来给引脚赋值\",{\"1\":{\"236\":1}}],[\"函数来给引脚赋值低电平\",{\"1\":{\"236\":1}}],[\"函数来给引脚赋值高电平\",{\"1\":{\"236\":1}}],[\"函数进行初始化\",{\"1\":{\"235\":1}}],[\"速率\",{\"1\":{\"235\":1,\"236\":1}}],[\"引脚高电平\",{\"1\":{\"236\":1}}],[\"引脚低电平\",{\"1\":{\"236\":1}}],[\"引脚\",{\"1\":{\"235\":1,\"236\":2}}],[\"先打开时钟\",{\"1\":{\"235\":1}}],[\"先按坐标\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"再进行抄绘学习\",{\"1\":{\"230\":1}}],[\"学会分析\",{\"0\":{\"230\":1}}],[\"学习记录\",{\"0\":{\"86\":1,\"199\":1,\"239\":1}}],[\"搜集好照片\",{\"0\":{\"229\":1}}],[\"没有摄影思路怎么办\",{\"0\":{\"228\":1}}],[\"构图\",{\"2\":{\"227\":1}}],[\"构图的底层逻辑\",{\"0\":{\"224\":1}}],[\"拿出一张图片\",{\"1\":{\"225\":1}}],[\"抄绘法\",{\"1\":{\"225\":1}}],[\"面向专业人士的压缩软件\",{\"1\":{\"290\":1}}],[\"面\",{\"1\":{\"224\":1}}],[\"线\",{\"1\":{\"224\":1}}],[\"点亮一颗小灯\",{\"0\":{\"236\":1}}],[\"点灯大师\",{\"0\":{\"234\":1}}],[\"点\",{\"1\":{\"224\":1}}],[\"把图片存下来\",{\"1\":{\"230\":1}}],[\"把它的线条画出来\",{\"1\":{\"225\":1}}],[\"把画面的元素抽象成几何图形\",{\"1\":{\"224\":1}}],[\"把对焦交给相机\",{\"1\":{\"219\":1}}],[\"抽象几何特征\",{\"1\":{\"224\":1}}],[\"抽象几何特征和内容\",{\"1\":{\"224\":1}}],[\"分量足\",{\"1\":{\"313\":1}}],[\"分析一个画面时一般有两个维度\",{\"1\":{\"224\":1}}],[\"分享旅行过程中的美好记忆\",{\"1\":{\"316\":1}}],[\"分享我常用的软件工具以及一些软件工具的使用技巧\",{\"1\":{\"309\":1}}],[\"分享我学习\",{\"1\":{\"86\":1,\"199\":1,\"239\":1}}],[\"分享一下我在开发中遇到的问题以及开发中使用到的技巧\",{\"1\":{\"78\":1}}],[\"亮部或暗部放弃其一\",{\"1\":{\"220\":1}}],[\"补光法\",{\"1\":{\"220\":1}}],[\"合成法\",{\"1\":{\"220\":1}}],[\"合集\",{\"0\":{\"32\":1}}],[\"争取更高宽容度\",{\"1\":{\"220\":1}}],[\"后回车\",{\"1\":{\"242\":1}}],[\"后期法\",{\"1\":{\"220\":1}}],[\"后者是异步的\",{\"1\":{\"186\":1}}],[\"解决方法\",{\"1\":{\"220\":1}}],[\"太暗\",{\"1\":{\"220\":1}}],[\"背景太亮\",{\"1\":{\"220\":1}}],[\"背景越模糊\",{\"1\":{\"203\":2,\"212\":1}}],[\"窗外过曝\",{\"1\":{\"220\":1}}],[\"艺人的脸过曝\",{\"1\":{\"220\":1}}],[\"演唱会时\",{\"1\":{\"220\":1}}],[\"人均40元\",{\"1\":{\"313\":1}}],[\"人脸是黑的\",{\"1\":{\"220\":1}}],[\"人像开到最大\",{\"1\":{\"219\":1}}],[\"人像摄影\",{\"0\":{\"218\":1}}],[\"逆光时\",{\"1\":{\"220\":1}}],[\"都与光比有关\",{\"1\":{\"220\":1}}],[\"都改为\",{\"1\":{\"75\":1}}],[\"受光面亮度\",{\"1\":{\"220\":1}}],[\"关于光比\",{\"0\":{\"220\":1}}],[\"关于我\",{\"0\":{\"27\":1}}],[\"产品时\",{\"1\":{\"219\":1}}],[\"产生深景深\",{\"1\":{\"203\":1}}],[\"产生浅景深\",{\"1\":{\"203\":1}}],[\"随机主体时\",{\"1\":{\"219\":1}}],[\"拍摄raw格式的照片\",{\"1\":{\"220\":1}}],[\"拍摄风光\",{\"1\":{\"219\":1}}],[\"拍摄移动\",{\"1\":{\"219\":1}}],[\"拍摄距离越近\",{\"1\":{\"203\":1}}],[\"拍摄距离有关\",{\"1\":{\"203\":1}}],[\"别忘记使用nd镜\",{\"1\":{\"219\":1}}],[\"别名提供者\",{\"0\":{\"125\":1}}],[\"须设置慢快门\",{\"1\":{\"219\":1}}],[\"根据不同情况\",{\"1\":{\"219\":1}}],[\"根路由排除\",{\"1\":{\"105\":1}}],[\"风光f8左右\",{\"1\":{\"219\":1}}],[\"风光摄影\",{\"0\":{\"216\":1}}],[\"锁住移动主体\",{\"1\":{\"217\":1}}],[\"模式\",{\"1\":{\"235\":1,\"236\":1}}],[\"模式选afc连续对焦\",{\"1\":{\"217\":1}}],[\"模块来演示\",{\"1\":{\"185\":1}}],[\"模块中定义\",{\"0\":{\"175\":1}}],[\"模块内共享使用\",{\"1\":{\"129\":1}}],[\"模块是一个类\",{\"1\":{\"129\":1}}],[\"模块\",{\"0\":{\"128\":1},\"1\":{\"129\":1,\"131\":1}}],[\"区域选广域\",{\"1\":{\"217\":1}}],[\"活动\",{\"0\":{\"217\":1}}],[\"扫街\",{\"0\":{\"217\":1}}],[\"云等呈现丝绸状\",{\"1\":{\"216\":1}}],[\"夜晚建议快门优先\",{\"1\":{\"216\":1}}],[\"近处无景物而对焦点较远时\",{\"1\":{\"216\":1}}],[\"一个简洁\",{\"1\":{\"271\":1}}],[\"一个联想词通常是两个字\",{\"1\":{\"5\":1}}],[\"一键管理所有扩展\",{\"1\":{\"269\":1}}],[\"一键清理\",{\"1\":{\"266\":1}}],[\"一键清理失效书签\",{\"0\":{\"266\":1},\"1\":{\"266\":1}}],[\"一款高效的网络请求过滤工具\",{\"1\":{\"268\":1}}],[\"一般快门速度越快越安全\",{\"1\":{\"219\":1}}],[\"一般取f7\",{\"1\":{\"216\":1}}],[\"一定够快\",{\"1\":{\"216\":1}}],[\"白平衡可前期设置好\",{\"1\":{\"219\":1}}],[\"白平衡自动\",{\"1\":{\"216\":1,\"217\":1}}],[\"白天光线充足时\",{\"1\":{\"219\":1}}],[\"白天建议光圈优先\",{\"1\":{\"216\":1}}],[\"白黄>红橙>蓝绿\",{\"1\":{\"13\":1}}],[\"焦段\",{\"2\":{\"214\":1}}],[\"焦距还影响景深\",{\"1\":{\"212\":1}}],[\"焦距的数值越小\",{\"1\":{\"212\":1}}],[\"焦距决定了镜头的视角宽度和成像的远近\",{\"1\":{\"212\":1}}],[\"焦距是指从镜头光学中心到相机传感器的距离\",{\"1\":{\"212\":1}}],[\"焦距和焦段\",{\"0\":{\"212\":1}}],[\"焦距\",{\"1\":{\"206\":1},\"2\":{\"214\":1}}],[\"焦距越长\",{\"1\":{\"203\":1,\"212\":1}}],[\"视角越窄\",{\"1\":{\"212\":1}}],[\"视角越宽\",{\"1\":{\"212\":1}}],[\"部分品牌使用\",{\"1\":{\"211\":1}}],[\"也可以使用\",{\"1\":{\"236\":1}}],[\"也可设置自动后使用后期调整\",{\"1\":{\"219\":1}}],[\"也称为aps\",{\"1\":{\"211\":1}}],[\"也就是从编码的\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"半画幅\",{\"1\":{\"211\":1}}],[\"主体\",{\"1\":{\"224\":1}}],[\"主流画幅\",{\"1\":{\"211\":2}}],[\"主要用于给模块传递参数\",{\"1\":{\"131\":1}}],[\"全画幅\",{\"1\":{\"211\":1}}],[\"全局绑定\",{\"0\":{\"157\":1}}],[\"全局使用\",{\"0\":{\"146\":1,\"176\":1}}],[\"全局中间件是应用到每个路由的处理程序\",{\"1\":{\"138\":1}}],[\"全局中间件\",{\"0\":{\"138\":1}}],[\"全局模块\",{\"0\":{\"130\":1}}],[\"画面主题\",{\"1\":{\"224\":1}}],[\"画幅大小小于半画幅\",{\"1\":{\"211\":1}}],[\"画幅分类\",{\"0\":{\"211\":1}}],[\"画质优异\",{\"1\":{\"211\":1}}],[\"画质一般\",{\"1\":{\"210\":1}}],[\"便于随身携带\",{\"1\":{\"210\":1}}],[\"不然可能会有商家跑路的风险\",{\"1\":{\"312\":1}}],[\"不可换镜头\",{\"1\":{\"210\":1}}],[\"不必做成图片或者字体图标\",{\"1\":{\"75\":1}}],[\"卡片机\",{\"1\":{\"210\":1}}],[\"续航没单反好\",{\"1\":{\"210\":1}}],[\"续航及稳定性好\",{\"1\":{\"210\":1}}],[\"操作比单反简单\",{\"1\":{\"210\":1}}],[\"机身轻巧\",{\"1\":{\"210\":1}}],[\"机身偏重\",{\"1\":{\"210\":1}}],[\"无反相机\",{\"1\":{\"210\":1}}],[\"无耻之徒\",{\"1\":{\"30\":1}}],[\"微单相机\",{\"1\":{\"210\":1}}],[\"微信\",{\"0\":{\"287\":1},\"1\":{\"31\":1,\"287\":1},\"2\":{\"308\":1}}],[\"曝光补偿控制亮度\",{\"1\":{\"217\":1}}],[\"曝光\",{\"2\":{\"208\":1}}],[\"曝光三要素\",{\"0\":{\"202\":1},\"1\":{\"202\":1}}],[\"能够避免因手抖引起的模糊的最慢快门速度\",{\"1\":{\"206\":1}}],[\"安全快门压力大\",{\"1\":{\"219\":1}}],[\"安全快门不必担心\",{\"1\":{\"219\":1}}],[\"安全快门的经验值是\",{\"1\":{\"206\":1}}],[\"安全快门指的是在手持相机拍摄时\",{\"1\":{\"206\":1}}],[\"安全快门\",{\"0\":{\"206\":1}}],[\"安装包\",{\"1\":{\"242\":1}}],[\"安装需要的库\",{\"0\":{\"185\":1}}],[\"安装\",{\"0\":{\"88\":1,\"247\":1,\"248\":1},\"1\":{\"83\":1,\"158\":1}}],[\"安装代码编辑器\",{\"0\":{\"83\":1}}],[\"图像越亮\",{\"1\":{\"205\":1}}],[\"图表占满整个容器\",{\"0\":{\"67\":1}}],[\"绸缎般的水流\",{\"1\":{\"204\":1}}],[\"慢快门可以拍摄出镜面般的水面\",{\"1\":{\"204\":1}}],[\"创造出动感效果\",{\"1\":{\"204\":1}}],[\"创建一个\",{\"1\":{\"195\":1}}],[\"创建一个类\",{\"1\":{\"158\":1}}],[\"创建自定义装饰器\",{\"0\":{\"180\":1}}],[\"创建拦截器\",{\"0\":{\"172\":1}}],[\"创建守卫\",{\"0\":{\"163\":1}}],[\"创建数据传输对象\",{\"1\":{\"158\":1}}],[\"创建异常过滤器\",{\"0\":{\"143\":1}}],[\"创建\",{\"0\":{\"87\":1,\"89\":1},\"1\":{\"97\":1}}],[\"较快的快门速度可以冻结运动并捕捉快速的动作\",{\"1\":{\"204\":1}}],[\"景深越浅\",{\"1\":{\"203\":2,\"212\":1}}],[\"景深还与焦距\",{\"1\":{\"203\":1}}],[\"高效\",{\"1\":{\"289\":1}}],[\"高f值\",{\"1\":{\"203\":1}}],[\"高级排名\",{\"1\":{\"13\":1}}],[\"适合风景摄影和需要广泛清晰度的场景\",{\"1\":{\"203\":1}}],[\"适合肖像和特定物体的特写\",{\"1\":{\"203\":1}}],[\"适用于\",{\"1\":{\"72\":1}}],[\"使其发光\",{\"1\":{\"236\":1}}],[\"使得前景和背景都相对清晰\",{\"1\":{\"203\":1}}],[\"使得主体清晰而背景模糊\",{\"1\":{\"203\":1}}],[\"使用用户脚本自由地改变网络\",{\"1\":{\"270\":1}}],[\"使用感光度时需要权衡\",{\"1\":{\"205\":1}}],[\"使用文件流下载\",{\"0\":{\"191\":1}}],[\"使用以下命令来创建一个装饰器\",{\"1\":{\"180\":1}}],[\"使用拦截器\",{\"0\":{\"173\":1}}],[\"使用装饰器来定义验证规则\",{\"1\":{\"158\":1}}],[\"使用如下命令创建一个自定义管道\",{\"1\":{\"152\":1}}],[\"使用异常过滤器\",{\"0\":{\"144\":1}}],[\"使用下面的命令创建一个中间件\",{\"1\":{\"136\":1}}],[\"使用字符串标记提供者\",{\"1\":{\"122\":1}}],[\"使用依赖注入\",{\"1\":{\"97\":1}}],[\"使用text\",{\"1\":{\"72\":1}}],[\"使用display\",{\"1\":{\"72\":1}}],[\"使用\",{\"0\":{\"43\":1,\"44\":1},\"1\":{\"71\":2,\"72\":2,\"75\":1,\"83\":1,\"97\":1,\"98\":1,\"102\":1,\"104\":6,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"121\":1,\"122\":1,\"124\":2,\"125\":2,\"130\":1,\"145\":1,\"146\":1,\"165\":1,\"188\":1,\"189\":1,\"236\":1}}],[\"低f值\",{\"1\":{\"203\":1}}],[\"大光圈\",{\"1\":{\"203\":1}}],[\"允许更多光线进入\",{\"1\":{\"203\":1}}],[\"允许我们创建自定义装饰器\",{\"1\":{\"180\":1}}],[\"通常以秒为单位\",{\"1\":{\"204\":1}}],[\"通常用f+数字来表示\",{\"1\":{\"203\":1}}],[\"通过浏览器开发者工具审查元素\",{\"0\":{\"304\":1}}],[\"通过后期来调整\",{\"1\":{\"220\":1}}],[\"通过处理器转化成图片\",{\"1\":{\"201\":1}}],[\"通过使用管道\",{\"1\":{\"150\":1}}],[\"通过在目标对象上添加装饰器\",{\"1\":{\"95\":1}}],[\"通过将依赖项\",{\"1\":{\"95\":1}}],[\"通过\",{\"1\":{\"67\":1,\"94\":1,\"104\":5}}],[\"感光度的作用就是牺牲\",{\"1\":{\"205\":1}}],[\"感光度越高\",{\"1\":{\"205\":1}}],[\"感光度\",{\"0\":{\"205\":1},\"1\":{\"202\":1,\"205\":1},\"2\":{\"208\":1}}],[\"快门优先\",{\"1\":{\"217\":1}}],[\"快门速度自然会很高\",{\"1\":{\"217\":1}}],[\"快门速度还可以影响对动态物体的捕捉能力\",{\"1\":{\"204\":1}}],[\"快门速度\",{\"1\":{\"204\":1}}],[\"快门用于控制光线照射到传感器的时间长度\",{\"1\":{\"204\":1}}],[\"快门\",{\"0\":{\"204\":1},\"1\":{\"202\":1,\"216\":1},\"2\":{\"208\":1}}],[\"光比就是背光面亮度\",{\"1\":{\"220\":1}}],[\"光线不足时\",{\"1\":{\"219\":1}}],[\"光线不足且手持时首先保证充足的安全快门\",{\"1\":{\"216\":1}}],[\"光线不稳定时\",{\"1\":{\"217\":1}}],[\"光圈与iso自动\",{\"1\":{\"217\":1}}],[\"光圈可大可小\",{\"1\":{\"216\":1}}],[\"光圈除了能够控制进光量\",{\"1\":{\"203\":1}}],[\"光圈大小\",{\"1\":{\"203\":1}}],[\"光圈是相机镜头的一个孔\",{\"1\":{\"203\":1}}],[\"光圈\",{\"0\":{\"203\":1},\"1\":{\"202\":1,\"216\":1},\"2\":{\"208\":1}}],[\"光穿过镜头到达传感器\",{\"1\":{\"201\":1}}],[\"虽然增加像素数量可以提高图像的分辨率\",{\"1\":{\"201\":1}}],[\"虽然不是\",{\"1\":{\"18\":1,\"19\":1}}],[\"传感器对光线的敏感度就越高\",{\"1\":{\"205\":1}}],[\"传感器是由一个一个的像素点组成\",{\"1\":{\"201\":1}}],[\"传感器把光记录下来\",{\"1\":{\"201\":1}}],[\"传入参数\",{\"1\":{\"131\":1}}],[\"理解曝光三要素\",{\"0\":{\"200\":1}}],[\"配置代理\",{\"0\":{\"257\":1}}],[\"配置用户信息\",{\"0\":{\"256\":1}}],[\"配置指南\",{\"0\":{\"254\":1,\"274\":1}}],[\"配置参数\",{\"1\":{\"235\":1,\"236\":3}}],[\"配置\",{\"0\":{\"195\":1}}],[\"静态资源访问\",{\"0\":{\"194\":1}}],[\"zip\",{\"1\":{\"191\":2}}],[\"zhf521\",{\"1\":{\"31\":1}}],[\"zhf5256\",{\"1\":{\"31\":1}}],[\"包\",{\"1\":{\"191\":1}}],[\"包括\",{\"1\":{\"151\":1}}],[\"包括位置和色相\",{\"1\":{\"0\":1}}],[\"需要安装\",{\"1\":{\"191\":1}}],[\"需要在模块中进行注册\",{\"1\":{\"98\":1}}],[\"多运动的物体\",{\"1\":{\"217\":1}}],[\"多文件上传\",{\"0\":{\"189\":1}}],[\"多行文本溢出显示省略号\",{\"0\":{\"72\":1}}],[\"单点对焦\",{\"1\":{\"216\":1}}],[\"单次对焦\",{\"1\":{\"216\":1}}],[\"单位为毫米\",{\"1\":{\"212\":1}}],[\"单反相机\",{\"1\":{\"210\":1}}],[\"单文件上传\",{\"0\":{\"188\":1}}],[\"单行文本溢出显示省略号\",{\"0\":{\"71\":1}}],[\"即照片中前后物体的清晰度范围\",{\"1\":{\"203\":1}}],[\"即可保存表情包到本地\",{\"1\":{\"305\":1}}],[\"即可在右面开发者工具中找到该元素\",{\"1\":{\"304\":1}}],[\"即可实现文件的上传与下载\",{\"1\":{\"187\":1}}],[\"即可\",{\"1\":{\"186\":1,\"196\":1}}],[\"即对象之间的依赖关系\",{\"1\":{\"95\":1}}],[\"用补光灯补光\",{\"1\":{\"220\":1}}],[\"用三脚架固定\",{\"1\":{\"219\":1}}],[\"用\",{\"1\":{\"186\":1,\"236\":1}}],[\"用于控制进光量\",{\"1\":{\"203\":1}}],[\"用于多文件上传\",{\"1\":{\"189\":1}}],[\"用于单文件上传\",{\"1\":{\"188\":1}}],[\"用于在请求前后对数据进行拦截处理\",{\"1\":{\"171\":1}}],[\"用于对象和值的验证\",{\"1\":{\"158\":1}}],[\"用于帮助我们创建\",{\"1\":{\"88\":1}}],[\"用于实现文字跑马灯效果\",{\"1\":{\"49\":1}}],[\"返回新的名称\",{\"1\":{\"186\":1}}],[\"重新定义文件名\",{\"1\":{\"186\":1}}],[\"存放文件的路径\",{\"1\":{\"186\":1}}],[\"存在翻色\",{\"0\":{\"19\":1}}],[\"存在小循环\",{\"0\":{\"18\":1}}],[\"前者是同步的\",{\"1\":{\"186\":1}}],[\"拦截器为\",{\"1\":{\"188\":1,\"189\":1}}],[\"拦截器应该实现\",{\"1\":{\"172\":1}}],[\"拦截器是一个使用\",{\"1\":{\"172\":1}}],[\"拦截器名称\",{\"1\":{\"172\":1}}],[\"拦截器\",{\"0\":{\"170\":1},\"1\":{\"171\":1}}],[\"读取元数据\",{\"1\":{\"167\":1}}],[\"反射器实现角色控制守卫\",{\"0\":{\"167\":1}}],[\"|\",{\"1\":{\"163\":2,\"167\":2,\"247\":2}}],[\"则放行\",{\"1\":{\"163\":1}}],[\"则需要借其他位置\",{\"1\":{\"18\":1,\"19\":1}}],[\"角色\",{\"1\":{\"162\":1}}],[\"角块\",{\"1\":{\"12\":1,\"13\":1}}],[\"应用于全局\",{\"0\":{\"166\":1}}],[\"应用于控制器或单个路由\",{\"0\":{\"165\":1}}],[\"应用守卫\",{\"0\":{\"164\":1}}],[\"应用中的路由进行验证的\",{\"1\":{\"162\":1}}],[\"应用程序中使用依赖注入\",{\"1\":{\"98\":1}}],[\"应用程序\",{\"1\":{\"88\":1,\"98\":1}}],[\"守卫应该实现\",{\"1\":{\"163\":1}}],[\"守卫是一个使用\",{\"1\":{\"163\":1}}],[\"守卫名称\",{\"1\":{\"163\":1}}],[\"守卫根据运行时出现的某些条件\",{\"1\":{\"162\":1}}],[\"守卫\",{\"0\":{\"161\":1},\"1\":{\"162\":1}}],[\"会自动使用\",{\"1\":{\"158\":1}}],[\"会自动处理依赖注入\",{\"1\":{\"98\":1}}],[\"等装饰器来指定属性的类型和验证条件\",{\"1\":{\"158\":1}}],[\"等装饰器来定义路由\",{\"1\":{\"104\":1}}],[\"库来实现\",{\"1\":{\"185\":1}}],[\"库\",{\"1\":{\"158\":3}}],[\"要学会分析画面\",{\"1\":{\"224\":1}}],[\"要缩小光圈\",{\"1\":{\"216\":1}}],[\"要实现全局绑定\",{\"1\":{\"157\":1}}],[\"要为每个异步操作后面都加上\",{\"1\":{\"45\":1}}],[\"只需要在\",{\"1\":{\"176\":1}}],[\"只需要继承\",{\"1\":{\"152\":1}}],[\"只保留需要的边框颜色\",{\"1\":{\"75\":1}}],[\"内容\",{\"1\":{\"224\":1}}],[\"内置了一些常用的管道\",{\"1\":{\"151\":1}}],[\"内置管道\",{\"0\":{\"151\":1}}],[\"内核的\",{\"1\":{\"72\":1}}],[\"提供的一种中间件机制\",{\"1\":{\"171\":1}}],[\"提供的一种用于数据转换和验证的功能\",{\"1\":{\"150\":1}}],[\"提供了\",{\"1\":{\"167\":1}}],[\"提供者可以在模块的\",{\"1\":{\"118\":1}}],[\"提供者可以是任何类\",{\"1\":{\"117\":1}}],[\"提供者\",{\"0\":{\"116\":1},\"1\":{\"129\":1}}],[\"管道有多种绑定方式\",{\"1\":{\"153\":1}}],[\"管道的绑定方式\",{\"0\":{\"153\":1}}],[\"管道内容如下\",{\"1\":{\"152\":1}}],[\"管道名称\",{\"1\":{\"152\":1}}],[\"管道\",{\"0\":{\"149\":1},\"1\":{\"150\":1}}],[\"局部使用\",{\"0\":{\"145\":1}}],[\"局部中间件\",{\"0\":{\"137\":1}}],[\"过滤器内容如下\",{\"1\":{\"143\":1}}],[\"过滤器会捕获并处理该异常\",{\"1\":{\"142\":1}}],[\"过程中的笔记\",{\"1\":{\"86\":1,\"199\":1,\"239\":1}}],[\"异常过滤器\",{\"0\":{\"141\":1},\"1\":{\"142\":1}}],[\"异常捕获\",{\"0\":{\"42\":1}}],[\"让它的秩序慢慢体现出来\",{\"1\":{\"225\":1}}],[\"让我们创建一个简单的普通中间件\",{\"1\":{\"136\":1}}],[\"让盒子宽度自适应文字内容\",{\"1\":{\"62\":1}}],[\"普通中间件\",{\"0\":{\"136\":1}}],[\"否则拦截\",{\"1\":{\"163\":1}}],[\"否则\",{\"1\":{\"135\":1}}],[\"调用堆栈中的下一个中间件函数\",{\"1\":{\"135\":1}}],[\"响应周期\",{\"1\":{\"135\":2}}],[\"响应头\",{\"0\":{\"113\":1}}],[\"结束请求\",{\"1\":{\"135\":1}}],[\"对焦选择广域+afc连续对焦\",{\"1\":{\"219\":1}}],[\"对焦\",{\"1\":{\"217\":1}}],[\"对对焦要求高\",{\"1\":{\"217\":1}}],[\"对对焦要求不高\",{\"1\":{\"216\":1}}],[\"对请求和响应对象进行更改\",{\"1\":{\"135\":1}}],[\"对象之间的依赖关系由代码中显式地创建和配置\",{\"1\":{\"97\":1}}],[\"对象之间的依赖关系由容器管理\",{\"1\":{\"94\":1}}],[\"执行任何代码\",{\"1\":{\"135\":1}}],[\"默认是使用静态模块创建的\",{\"1\":{\"131\":1}}],[\"动态模块是指在运行时动态创建的模块\",{\"1\":{\"131\":1}}],[\"动态模块\",{\"0\":{\"131\":1}}],[\"动画持续时间\",{\"1\":{\"50\":1}}],[\"其最能影响背景虚化的效果\",{\"1\":{\"218\":1}}],[\"其他\",{\"1\":{\"216\":1,\"217\":1}}],[\"其他模块在使用全局模块时不需要在\",{\"1\":{\"130\":1}}],[\"其余的不能省略\",{\"1\":{\"75\":1}}],[\"声明模块的控制器\",{\"1\":{\"129\":1}}],[\"导致图像噪点增加\",{\"1\":{\"201\":1}}],[\"导出其他模块需要共享的\",{\"1\":{\"129\":1}}],[\"导入其他模块\",{\"1\":{\"129\":1}}],[\"导航栏固定在顶部\",{\"1\":{\"56\":1}}],[\"来不及调整对焦点\",{\"1\":{\"217\":1}}],[\"来实现静态资源访问\",{\"1\":{\"195\":1}}],[\"来确定给定的请求是否由路由处理程序处理\",{\"1\":{\"162\":1}}],[\"来指定别名\",{\"1\":{\"125\":1}}],[\"来验证请求体\",{\"1\":{\"158\":1}}],[\"来验证\",{\"1\":{\"82\":1}}],[\"该怎么操作呢\",{\"1\":{\"301\":1}}],[\"该函数将返回一个提供者实例\",{\"1\":{\"124\":1}}],[\"该类将被实例化并用作提供者\",{\"1\":{\"123\":1}}],[\"列表中以相同的顺序将实例作为参数传递给工厂函数\",{\"1\":{\"124\":1}}],[\"可光圈优先\",{\"1\":{\"219\":1}}],[\"可换镜头\",{\"1\":{\"210\":2}}],[\"可能会导致图像质量下降\",{\"1\":{\"201\":1}}],[\"可选单点对焦+单次对焦\",{\"1\":{\"219\":1}}],[\"可选快门优先\",{\"1\":{\"219\":1}}],[\"可选慢快门\",{\"1\":{\"216\":1}}],[\"可选\",{\"1\":{\"124\":1}}],[\"可以带手电筒\",{\"1\":{\"312\":1}}],[\"可以过滤网站广告\",{\"1\":{\"268\":1}}],[\"可以使用\",{\"1\":{\"236\":1}}],[\"可以使水\",{\"1\":{\"216\":1}}],[\"可以光圈优先\",{\"1\":{\"217\":1}}],[\"可以提供强大的数据验证能力\",{\"1\":{\"158\":1}}],[\"可以降低计算机代码之间的耦合度\",{\"1\":{\"94\":1}}],[\"可以这样写\",{\"1\":{\"71\":1}}],[\"工厂函数可以接受\",{\"1\":{\"124\":1}}],[\"工厂提供者\",{\"0\":{\"124\":1}}],[\"变量来决定使用哪个配置服务类\",{\"1\":{\"123\":1}}],[\"选项来指定一个工厂函数\",{\"1\":{\"124\":1}}],[\"选项来指定一个类\",{\"1\":{\"123\":1}}],[\"选择适合操作系统的安装包进行下载并按提示安装\",{\"1\":{\"81\":1}}],[\"非类提供者\",{\"0\":{\"122\":1}}],[\"+\",{\"1\":{\"121\":2,\"122\":2,\"131\":2,\"186\":1}}],[\"+id\",{\"1\":{\"104\":3,\"145\":2}}],[\"语义检查\",{\"0\":{\"282\":1}}],[\"语法允许您为现有的提供程序创建别名\",{\"1\":{\"125\":1}}],[\"语法来提供值\",{\"1\":{\"121\":1}}],[\"语法对于注入常量值\",{\"1\":{\"121\":1}}],[\"语言的官方网站\",{\"1\":{\"81\":1}}],[\"值提供者\",{\"0\":{\"121\":1}}],[\"完整方式\",{\"1\":{\"119\":1}}],[\"数值越大\",{\"1\":{\"212\":1}}],[\"数字的范围指的是焦段\",{\"1\":{\"212\":1}}],[\"数组中列出的提供者中的\",{\"1\":{\"122\":1}}],[\"数组中注册提供者\",{\"1\":{\"119\":1}}],[\"数组中进行注册\",{\"1\":{\"118\":1}}],[\"数码产品\",{\"1\":{\"28\":1}}],[\"有\",{\"1\":{\"186\":1}}],[\"有时候\",{\"1\":{\"124\":1}}],[\"有时我们希望灵活使用字符串作为提供者标记\",{\"1\":{\"122\":1}}],[\"有多种方式来定义提供者\",{\"1\":{\"118\":1}}],[\"有新版本时可以执行以下命令\",{\"1\":{\"88\":1}}],[\"以提供更好的用户体验或记录错误日志\",{\"1\":{\"142\":1}}],[\"以及应用程序请求响应周期中的\",{\"1\":{\"135\":1}}],[\"以允许模块之间共享\",{\"1\":{\"129\":1}}],[\"以便将它们组织在一起\",{\"1\":{\"129\":1}}],[\"以便在需要时使用\",{\"1\":{\"117\":1}}],[\"以下笔记为我观看其视频教程后所记录的笔记\",{\"1\":{\"233\":1}}],[\"以下问题\",{\"1\":{\"220\":1}}],[\"以下是使用类验证器的基本步骤\",{\"1\":{\"158\":1}}],[\"以下是一个简单的例子\",{\"1\":{\"98\":1}}],[\"以下打乱均采用黄顶红前的坐标打乱\",{\"1\":{\"16\":1,\"22\":1}}],[\"什么是拦截器\",{\"0\":{\"171\":1}}],[\"什么是守卫\",{\"0\":{\"162\":1}}],[\"什么是管道\",{\"0\":{\"150\":1}}],[\"什么是异常过滤器\",{\"0\":{\"142\":1}}],[\"什么是中间件\",{\"0\":{\"135\":1}}],[\"什么是模块\",{\"0\":{\"129\":1}}],[\"什么是提供者\",{\"0\":{\"117\":1}}],[\"什么是控制器\",{\"0\":{\"102\":1}}],[\"状态码\",{\"0\":{\"112\":1}}],[\"请求路径\",{\"1\":{\"137\":1}}],[\"请求路径和方法\",{\"1\":{\"137\":1}}],[\"请求后\",{\"1\":{\"136\":1}}],[\"请求前\",{\"1\":{\"136\":1}}],[\"请求将被挂起\",{\"1\":{\"135\":1}}],[\"请求对象\",{\"0\":{\"111\":1}}],[\"请求头\",{\"0\":{\"110\":1}}],[\"请求体\",{\"0\":{\"109\":1}}],[\"装饰器用于上传多文件\",{\"1\":{\"189\":1}}],[\"装饰器用于上传单文件\",{\"1\":{\"188\":1}}],[\"装饰器\",{\"1\":{\"188\":1,\"189\":1}}],[\"装饰器聚合\",{\"0\":{\"181\":1}}],[\"装饰器名称\",{\"1\":{\"180\":1}}],[\"装饰器将定制元数据附加到路由处理程序\",{\"1\":{\"167\":1}}],[\"装饰器将异常过滤器应用于整个应用程序\",{\"1\":{\"146\":1}}],[\"装饰器将异常过滤器应用于路由或控制器\",{\"1\":{\"145\":1}}],[\"装饰器装饰的类\",{\"1\":{\"163\":1,\"172\":1}}],[\"装饰器定义的模块为全局模块\",{\"1\":{\"130\":1}}],[\"装饰器接受一个描述模块属性的对象\",{\"1\":{\"129\":1}}],[\"装饰器进行装饰\",{\"1\":{\"129\":1}}],[\"装饰器注入提供者即可\",{\"1\":{\"124\":1,\"125\":1}}],[\"装饰器注入标记为\",{\"1\":{\"122\":1}}],[\"装饰器和\",{\"1\":{\"108\":1}}],[\"装饰器来应用守卫\",{\"1\":{\"165\":1}}],[\"装饰器来将管道绑定到路由上\",{\"1\":{\"155\":1}}],[\"装饰器来将管道绑定到控制器上\",{\"1\":{\"154\":1}}],[\"装饰器来进行依赖注入\",{\"1\":{\"131\":1}}],[\"装饰器来定义的\",{\"1\":{\"119\":1}}],[\"装饰器来定义控制器\",{\"1\":{\"102\":1}}],[\"装饰器来设置响应头\",{\"1\":{\"113\":1}}],[\"装饰器来设置状态码\",{\"1\":{\"112\":1}}],[\"装饰器来获取请求对象\",{\"1\":{\"111\":1}}],[\"装饰器来获取请求头\",{\"1\":{\"109\":1,\"110\":1}}],[\"装饰器来获取查询字符串参数\",{\"1\":{\"107\":1}}],[\"装饰器来标记它为可注入的服务\",{\"1\":{\"98\":1}}],[\"参数设定整体思路\",{\"0\":{\"219\":1}}],[\"参数为\",{\"1\":{\"188\":1,\"189\":1,\"236\":1}}],[\"参数名\",{\"1\":{\"108\":1}}],[\"参数\",{\"0\":{\"108\":1},\"1\":{\"108\":1,\"124\":1}}],[\"$\",{\"1\":{\"107\":4,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"190\":1,\"191\":1}}],[\"查询字符串\",{\"0\":{\"107\":1}}],[\"查看配置信息\",{\"0\":{\"255\":1}}],[\"查看官方文档即可\",{\"1\":{\"243\":1,\"249\":1}}],[\"查看运行情况\",{\"1\":{\"90\":1}}],[\"查看当前镜像源\",{\"0\":{\"37\":1}}],[\"处理请求参数\",{\"0\":{\"106\":1}}],[\"路径来获取\",{\"1\":{\"108\":1}}],[\"路径来删除数据\",{\"1\":{\"104\":1}}],[\"路径来更新数据\",{\"1\":{\"104\":1}}],[\"路径来访问\",{\"1\":{\"104\":2}}],[\"路径来创建数据\",{\"1\":{\"104\":1}}],[\"路由绑定\",{\"0\":{\"155\":1}}],[\"路由\",{\"0\":{\"103\":1}}],[\"方法参数绑定\",{\"0\":{\"156\":1}}],[\"方法即可\",{\"1\":{\"152\":1}}],[\"方法\",{\"1\":{\"104\":5}}],[\"例如权限\",{\"1\":{\"162\":1}}],[\"例如\",{\"1\":{\"104\":1,\"131\":1,\"158\":1,\"204\":1}}],[\"负责处理传入的请求和向客户端返回响应\",{\"1\":{\"102\":1}}],[\"控制器中使用\",{\"0\":{\"174\":1}}],[\"控制器绑定\",{\"0\":{\"154\":1}}],[\"控制器\",{\"0\":{\"101\":1},\"1\":{\"102\":1,\"137\":1}}],[\"控制反转是一种设计思想\",{\"1\":{\"96\":1}}],[\"控制反转\",{\"0\":{\"94\":1},\"1\":{\"94\":1}}],[\"控制反转与依赖注入\",{\"0\":{\"93\":1}}],[\"就会自动将该提供者注入到需要它的类中\",{\"1\":{\"118\":1}}],[\"就会导致不知道哪一个异步操作出现了问题\",{\"1\":{\"45\":1}}],[\"就可以使用\",{\"1\":{\"98\":1}}],[\"被创建时\",{\"1\":{\"98\":1}}],[\"作为一个提供者\",{\"1\":{\"98\":1}}],[\"首先\",{\"1\":{\"98\":1}}],[\"首先我们来看一下传统的开发方式\",{\"1\":{\"97\":1}}],[\"然后将其添加到表情即可\",{\"1\":{\"306\":1}}],[\"然后将我们喜欢的表情包通过私信发送给抖音好友\",{\"1\":{\"302\":1}}],[\"然后右键选择另存为\",{\"1\":{\"305\":1}}],[\"然后右键该文件创建快捷方式\",{\"1\":{\"244\":1}}],[\"然后此时我们鼠标选中要保存的表情包\",{\"1\":{\"304\":1}}],[\"然后在文件资源管理器中找到\",{\"1\":{\"242\":1}}],[\"然后定义一个\",{\"1\":{\"235\":1}}],[\"然后分好类\",{\"1\":{\"230\":1}}],[\"然后思考我该如何拍出相似的图片\",{\"1\":{\"225\":1}}],[\"然后再将其传递给服务层\",{\"1\":{\"150\":1}}],[\"然后动态生成模块的内容\",{\"1\":{\"131\":1}}],[\"然后\",{\"1\":{\"98\":1}}],[\"然后使用\",{\"1\":{\"98\":1}}],[\"然后看\",{\"1\":{\"17\":10,\"18\":11,\"19\":10,\"23\":10}}],[\"展示了如何在\",{\"1\":{\"98\":1}}],[\"实用的浏览器起始页\",{\"1\":{\"271\":1}}],[\"实例时\",{\"1\":{\"97\":1}}],[\"实现类\",{\"1\":{\"97\":1}}],[\"实现的\",{\"1\":{\"95\":1}}],[\"实现控制反转\",{\"1\":{\"95\":1}}],[\"实现三角形\",{\"0\":{\"75\":1}}],[\"实现方法\",{\"0\":{\"57\":1,\"63\":1}}],[\"实现导航栏固定效果\",{\"0\":{\"55\":1}}],[\"实现文字跑马灯效果\",{\"0\":{\"49\":1}}],[\"实现文字渐变\",{\"0\":{\"33\":1}}],[\"接口\",{\"1\":{\"97\":1,\"152\":1,\"163\":1,\"172\":1}}],[\"接收参数\",{\"1\":{\"50\":1}}],[\"现在我们来看一下使用依赖注入后的代码\",{\"1\":{\"97\":1}}],[\"现在我们使用封装好的工具函数\",{\"1\":{\"45\":1}}],[\"硬编码依赖\",{\"1\":{\"97\":2}}],[\"的安装\",{\"0\":{\"240\":1},\"1\":{\"295\":1}}],[\"的类型支持库\",{\"1\":{\"185\":1}}],[\"的管道\",{\"1\":{\"158\":1}}],[\"的方法\",{\"1\":{\"98\":1}}],[\"的构造函数中\",{\"1\":{\"98\":1}}],[\"的提供者\",{\"1\":{\"98\":1,\"122\":1}}],[\"的\",{\"1\":{\"98\":2}}],[\"的装饰器来标记它们\",{\"1\":{\"98\":1}}],[\"的实现\",{\"1\":{\"97\":1}}],[\"的实例\",{\"1\":{\"97\":4,\"98\":1}}],[\"的一种实现方式\",{\"1\":{\"95\":1}}],[\"渲染中\",{\"1\":{\"97\":2}}],[\"渲染文本内容\",{\"1\":{\"50\":1}}],[\"运行\",{\"1\":{\"242\":1}}],[\"运行中\",{\"1\":{\"97\":2}}],[\"运行项目\",{\"0\":{\"90\":1}}],[\"类型的结构体\",{\"1\":{\"235\":1,\"236\":1}}],[\"类验证器与\",{\"1\":{\"158\":1}}],[\"类验证器\",{\"0\":{\"158\":1},\"1\":{\"158\":1}}],[\"类提供者\",{\"0\":{\"123\":1}}],[\"类通过构造函数接收\",{\"1\":{\"97\":1}}],[\"类的代码\",{\"1\":{\"97\":2}}],[\"类在构造函数中直接创建了\",{\"1\":{\"97\":1}}],[\"类\",{\"1\":{\"97\":4}}],[\"和其他模块\",{\"1\":{\"129\":1}}],[\"和处理函数之间的映射关系\",{\"1\":{\"104\":1}}],[\"和一个控制器\",{\"1\":{\"98\":1}}],[\"和\",{\"1\":{\"97\":6,\"158\":1,\"186\":1,\"247\":1}}],[\"假设这是我们的\",{\"1\":{\"97\":1}}],[\"而提高感光度会增加图像的噪点\",{\"1\":{\"205\":1}}],[\"而较慢的快门速度可以模糊移动的物体\",{\"1\":{\"204\":1}}],[\"而1秒的快门速度表示快门将持续打开1秒钟\",{\"1\":{\"204\":1}}],[\"而传感器面积没有相应增加\",{\"1\":{\"201\":1}}],[\"而不需要自己创建\",{\"1\":{\"98\":1}}],[\"而不需要修改\",{\"1\":{\"97\":1}}],[\"而不是在代码中显式地创建和配置\",{\"1\":{\"94\":1}}],[\"而不是在代码中硬编码\",{\"1\":{\"94\":1}}],[\"而是在创建时通过构造函数\",{\"1\":{\"97\":1}}],[\"而依赖注入是控制反转的一种实现方式\",{\"1\":{\"96\":1}}],[\"设计\",{\"1\":{\"298\":2}}],[\"设计模式\",{\"1\":{\"96\":1}}],[\"设置\",{\"0\":{\"281\":1,\"282\":1,\"283\":1}}],[\"设置光标动画样式\",{\"0\":{\"280\":1}}],[\"设置自动格式化\",{\"0\":{\"278\":1}}],[\"设置字体系列\",{\"0\":{\"277\":1}}],[\"设置字体大小\",{\"0\":{\"276\":1}}],[\"设置对话框样式\",{\"0\":{\"279\":1}}],[\"设置对\",{\"0\":{\"260\":1}}],[\"设置全局代理\",{\"0\":{\"258\":1}}],[\"设置一键启动脚本\",{\"0\":{\"250\":1}}],[\"设置开机自启\",{\"0\":{\"244\":1}}],[\"设置不同的安全快门\",{\"1\":{\"219\":1}}],[\"设置大光圈\",{\"1\":{\"217\":1}}],[\"设置2秒的延迟快门\",{\"1\":{\"216\":1}}],[\"设置路由以\",{\"1\":{\"105\":1}}],[\"设置路由前缀\",{\"0\":{\"105\":1}}],[\"设置该盒子作为弹性伸缩盒子模型显示\",{\"1\":{\"72\":1}}],[\"设置z\",{\"1\":{\"57\":1}}],[\"设置渐变\",{\"1\":{\"33\":1}}],[\"两个方法\",{\"1\":{\"186\":1}}],[\"两个联想词之间用某个动词连接\",{\"1\":{\"5\":1}}],[\"两者关系\",{\"0\":{\"96\":1}}],[\"注册模块中所有用到的\",{\"1\":{\"129\":1}}],[\"注册和使用提供者\",{\"0\":{\"118\":1}}],[\"注入到目标对象中\",{\"1\":{\"95\":1}}],[\"注意\",{\"1\":{\"51\":1}}],[\"依赖注入的实现\",{\"0\":{\"97\":1}}],[\"依赖注入主要是通过装饰器\",{\"1\":{\"95\":1}}],[\"依赖注入\",{\"0\":{\"95\":1},\"1\":{\"95\":1,\"98\":1}}],[\"中输入以下命令即可\",{\"1\":{\"251\":1}}],[\"中输入如下命令\",{\"1\":{\"248\":1}}],[\"中可以看到密码\",{\"1\":{\"242\":1,\"248\":1}}],[\"中进行配置\",{\"1\":{\"176\":1}}],[\"中应用于全局\",{\"1\":{\"166\":1}}],[\"中添加以下代码\",{\"1\":{\"157\":1}}],[\"中用于捕获和处理应用程序中的异常情况\",{\"1\":{\"142\":1}}],[\"中注册全局验证管道\",{\"1\":{\"158\":1}}],[\"中注册全局中间件\",{\"1\":{\"138\":1}}],[\"中注册中间件\",{\"1\":{\"136\":1}}],[\"中设置排除的路径\",{\"1\":{\"137\":1}}],[\"中设置中间件的路由路径\",{\"1\":{\"137\":1}}],[\"中设置路由前缀\",{\"1\":{\"105\":1}}],[\"中间件内容如下\",{\"1\":{\"136\":1}}],[\"中间件函数可以执行以下任务\",{\"1\":{\"135\":1}}],[\"中间件函数可以访问请求和响应对象\",{\"1\":{\"135\":1}}],[\"中间件函数\",{\"1\":{\"135\":1}}],[\"中间件\",{\"0\":{\"134\":1},\"1\":{\"135\":1}}],[\"中使用异常过滤器\",{\"1\":{\"144\":1}}],[\"中使用\",{\"1\":{\"131\":1}}],[\"中使用动态模块\",{\"1\":{\"131\":1}}],[\"中导入该模块\",{\"1\":{\"130\":1}}],[\"中的提供者\",{\"1\":{\"117\":1}}],[\"中的路由是指定义请求\",{\"1\":{\"104\":1}}],[\"中依赖注入的实现\",{\"0\":{\"98\":1}}],[\"中\",{\"1\":{\"94\":1,\"95\":1,\"98\":1,\"102\":1,\"104\":1,\"118\":1,\"129\":1,\"158\":1}}],[\"容器或使用模拟对象替换实际实现非常有用\",{\"1\":{\"121\":1}}],[\"容器会查找\",{\"1\":{\"98\":1}}],[\"容器自动注入它\",{\"1\":{\"98\":1}}],[\"容器实现的\",{\"1\":{\"98\":1}}],[\"容器负责管理对象的生命周期和依赖关系\",{\"1\":{\"94\":1}}],[\"容器\",{\"1\":{\"94\":1}}],[\"旨在将对象的创建和管理交给外部容器\",{\"1\":{\"94\":1}}],[\"30元\",{\"1\":{\"312\":1}}],[\"3000\",{\"1\":{\"90\":1,\"98\":1,\"105\":1,\"138\":1,\"146\":1,\"157\":1,\"158\":1,\"166\":1,\"176\":1,\"195\":1,\"196\":1}}],[\"36\",{\"1\":{\"242\":1,\"248\":1}}],[\"3407085928\",{\"1\":{\"31\":1}}],[\"打开私信页面\",{\"0\":{\"303\":1}}],[\"打开时钟\",{\"1\":{\"236\":1}}],[\"打开\",{\"1\":{\"90\":1}}],[\"打乱完成后\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"打乱如下\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"你可以使用\",{\"1\":{\"158\":2}}],[\"你可以定义控制器\",{\"1\":{\"129\":1}}],[\"你的项目文件夹\",{\"1\":{\"90\":1}}],[\"你的项目名\",{\"1\":{\"89\":1}}],[\"你好\",{\"1\":{\"27\":1}}],[\"更换清华源\",{\"1\":{\"247\":1}}],[\"更换淘宝镜像源\",{\"0\":{\"38\":1}}],[\"更新\",{\"0\":{\"251\":1},\"1\":{\"88\":1}}],[\"项目\",{\"0\":{\"87\":1,\"89\":1}}],[\"插件即可\",{\"1\":{\"83\":1}}],[\"验证安装\",{\"0\":{\"82\":1}}],[\"访问即可\",{\"1\":{\"248\":1}}],[\"访问即可配置\",{\"1\":{\"242\":1}}],[\"访问控制列表等\",{\"1\":{\"162\":1}}],[\"访问\",{\"0\":{\"196\":1},\"1\":{\"81\":1}}],[\"友链\",{\"0\":{\"79\":1}}],[\"开源的代码编辑器\",{\"1\":{\"294\":1}}],[\"开发\",{\"1\":{\"298\":2}}],[\"开发和维护\",{\"1\":{\"88\":1}}],[\"开发技巧\",{\"0\":{\"78\":1}}],[\"开始读\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"开始读码\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"透明\",{\"1\":{\"75\":1}}],[\"个边框都要写\",{\"1\":{\"75\":1}}],[\"404\",{\"1\":{\"317\":1}}],[\"4\",{\"1\":{\"75\":1}}],[\"42\",{\"1\":{\"0\":1}}],[\"盒子宽度高度为\",{\"1\":{\"75\":1}}],[\"盒子宽度自适应文字内容\",{\"0\":{\"61\":1}}],[\"直接画出来\",{\"1\":{\"75\":1}}],[\"边框可以\",{\"1\":{\"75\":1}}],[\"21\",{\"1\":{\"242\":1,\"248\":1}}],[\"2\",{\"1\":{\"72\":1}}],[\"200以上\",{\"1\":{\"217\":1}}],[\"2023\",{\"1\":{\"242\":1,\"248\":1}}],[\"202\",{\"1\":{\"112\":1,\"113\":1}}],[\"2024年5月21日\",{\"1\":{\"310\":1}}],[\"2024\",{\"1\":{\"30\":1}}],[\"20\",{\"1\":{\"51\":2,\"276\":1}}],[\"浏览器插件\",{\"2\":{\"273\":1}}],[\"浏览器\",{\"1\":{\"72\":1}}],[\"浏览器或移动端\",{\"1\":{\"72\":1}}],[\"绝大部分是\",{\"1\":{\"72\":1}}],[\"综上\",{\"1\":{\"71\":1}}],[\"或\",{\"1\":{\"71\":1,\"97\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"137\":2,\"145\":1,\"165\":1}}],[\"还影响景深\",{\"1\":{\"203\":1}}],[\"还可以在\",{\"1\":{\"158\":1}}],[\"还需要将\",{\"1\":{\"71\":1}}],[\"还有很多棱块没有读到\",{\"1\":{\"18\":1,\"19\":1}}],[\"为了获取更好的类型提示\",{\"1\":{\"185\":1}}],[\"为了让\",{\"1\":{\"71\":1}}],[\"为控制器提供服务的就可以被称作提供者\",{\"1\":{\"117\":1}}],[\"为前缀\",{\"1\":{\"105\":1}}],[\"为盒子设置width\",{\"1\":{\"63\":1}}],[\"属性接受一个提供者数组\",{\"1\":{\"124\":1}}],[\"属性的值\",{\"1\":{\"122\":1}}],[\"属性或方法参数接收依赖项\",{\"1\":{\"97\":1}}],[\"属性设置省略号来代替溢出的文本\",{\"1\":{\"72\":1}}],[\"属性设置为\",{\"1\":{\"71\":1}}],[\"属性生效\",{\"1\":{\"71\":1}}],[\"属性来指定溢出文本的处理方式\",{\"1\":{\"71\":1}}],[\"属性来指定文本的处理方式\",{\"1\":{\"71\":1}}],[\"属性调整\",{\"1\":{\"67\":1}}],[\"并设置为\",{\"1\":{\"275\":1,\"276\":1,\"277\":1,\"278\":2,\"279\":1,\"280\":1,\"281\":1,\"282\":1,\"283\":1}}],[\"并设置top属性将其固定在顶部\",{\"1\":{\"57\":1}}],[\"并不是像素越多越好\",{\"1\":{\"201\":1}}],[\"并检查当前用户是否具有所需的权限\",{\"1\":{\"167\":1}}],[\"并实现\",{\"1\":{\"152\":1}}],[\"并且可以被注入到其他类中\",{\"1\":{\"117\":1}}],[\"并且最后一个是以\",{\"1\":{\"18\":1}}],[\"并将其实例注入到\",{\"1\":{\"98\":1}}],[\"并让\",{\"1\":{\"98\":1}}],[\"当异常发生时\",{\"1\":{\"142\":1}}],[\"当\",{\"1\":{\"98\":1}}],[\"当文字多少不确定时\",{\"1\":{\"62\":1}}],[\"当页面滚动时\",{\"1\":{\"56\":1}}],[\"当有多个异步操作时\",{\"1\":{\"45\":1}}],[\"效果描述\",{\"0\":{\"56\":1,\"62\":1}}],[\"效果展示\",{\"0\":{\"52\":1,\"58\":1,\"64\":1}}],[\"组件不直接创建依赖项\",{\"1\":{\"97\":1}}],[\"组件外的容器必须设置宽度\",{\"1\":{\"51\":1}}],[\"组件的使用\",{\"0\":{\"51\":1}}],[\"组件源码\",{\"0\":{\"50\":1}}],[\"计算动画持续时间\",{\"1\":{\"50\":1}}],[\"挂载时执行\",{\"1\":{\"50\":1}}],[\"监听文本内容变化\",{\"1\":{\"50\":1}}],[\"5244\",{\"1\":{\"242\":1,\"248\":1}}],[\"5\",{\"1\":{\"50\":1}}],[\"50mhz\",{\"1\":{\"236\":1}}],[\"500px\",{\"1\":{\"229\":1}}],[\"50\",{\"1\":{\"50\":2}}],[\"判断文本内容是否溢出\",{\"1\":{\"50\":2}}],[\"获取文件后缀\",{\"1\":{\"186\":1}}],[\"获取文本内容元素\",{\"1\":{\"50\":1}}],[\"获取异常状态码\",{\"1\":{\"143\":1}}],[\"获取请求对象\",{\"1\":{\"143\":1}}],[\"获取请求上下文\",{\"1\":{\"143\":1}}],[\"获取响应对象\",{\"1\":{\"143\":1}}],[\"获取容器宽度和文本内容宽度\",{\"1\":{\"50\":1}}],[\"获取跑马灯容器元素\",{\"1\":{\"50\":1}}],[\"visual\",{\"1\":{\"294\":1}}],[\"vim\",{\"1\":{\"250\":3}}],[\"vbhide\",{\"1\":{\"244\":1}}],[\"vbs\",{\"1\":{\"244\":1}}],[\"validator来验证传入的\",{\"1\":{\"158\":1}}],[\"validator\",{\"1\":{\"158\":5}}],[\"validationpipe\",{\"1\":{\"151\":1,\"158\":6}}],[\"value\",{\"1\":{\"50\":5,\"152\":4}}],[\"void\",{\"1\":{\"97\":10,\"136\":1}}],[\"vscode\",{\"0\":{\"274\":1,\"294\":1},\"1\":{\"83\":1,\"274\":1},\"2\":{\"285\":1}}],[\"verge\",{\"0\":{\"291\":1},\"1\":{\"291\":1}}],[\"version\",{\"1\":{\"82\":1}}],[\"vertical\",{\"1\":{\"72\":1}}],[\"v\",{\"1\":{\"50\":1}}],[\"vue\",{\"0\":{\"49\":1},\"1\":{\"50\":2,\"51\":3},\"2\":{\"54\":1}}],[\"文档\",{\"1\":{\"243\":1,\"249\":1,\"295\":1}}],[\"文件替换为最新的即可\",{\"1\":{\"245\":1}}],[\"文件内容为\",{\"1\":{\"244\":1}}],[\"文件的目录里新建一个文件名为\",{\"1\":{\"244\":1}}],[\"文件的原始名称\",{\"1\":{\"186\":1}}],[\"文件\",{\"1\":{\"196\":1,\"242\":1}}],[\"文件中调用\",{\"1\":{\"195\":1}}],[\"文件夹用来存放静态资源\",{\"1\":{\"195\":1}}],[\"文件直接下载\",{\"0\":{\"190\":1}}],[\"文件上传完要存放的位置\",{\"1\":{\"186\":1}}],[\"文件上传与下载\",{\"0\":{\"184\":1}}],[\"文本溢出的处理\",{\"0\":{\"70\":1}}],[\"文本溢出时追加的文本内容\",{\"1\":{\"50\":1}}],[\"文本开始滚动的延迟时间\",{\"1\":{\"50\":1}}],[\"文本滚动速度\",{\"1\":{\"50\":1}}],[\"文本间隔\",{\"1\":{\"50\":1}}],[\"文本内容样式\",{\"1\":{\"50\":1}}],[\"文本内容\",{\"1\":{\"50\":2}}],[\"文字跑马灯效果的实现\",{\"0\":{\"48\":1}}],[\"`attachment\",{\"1\":{\"191\":1}}],[\"`\",{\"1\":{\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"186\":1,\"190\":2,\"191\":3}}],[\"`获取到的数据为\",{\"1\":{\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1}}],[\"`$\",{\"1\":{\"50\":4,\"186\":1}}],[\"``\",{\"1\":{\"23\":1}}],[\"跑马灯\",{\"1\":{\"50\":1}}],[\"跑马灯容器\",{\"1\":{\"50\":1}}],[\">\",{\"1\":{\"50\":10,\"51\":3,\"167\":1}}],[\"<carousel\",{\"1\":{\"51\":1}}],[\"<style\",{\"1\":{\"50\":1}}],[\"<script\",{\"1\":{\"50\":1,\"51\":1}}],[\"<div\",{\"1\":{\"50\":4,\"51\":1}}],[\"<template>\",{\"1\":{\"50\":1,\"51\":1}}],[\"<\",{\"1\":{\"50\":12,\"51\":5}}],[\"封装了一个组件\",{\"1\":{\"49\":1}}],[\"==\",{\"1\":{\"152\":1}}],[\"===\",{\"1\":{\"123\":1,\"152\":1}}],[\"=\",{\"1\":{\"45\":3,\"50\":11,\"51\":5,\"97\":8,\"98\":1,\"105\":1,\"138\":1,\"143\":4,\"146\":1,\"157\":1,\"158\":1,\"166\":1,\"167\":2,\"176\":1,\"180\":1,\"186\":1,\"190\":1,\"191\":2,\"195\":1,\"236\":3,\"244\":1}}],[\"=>\",{\"1\":{\"44\":1,\"50\":6,\"124\":1,\"136\":1,\"180\":1,\"186\":1}}],[\"原来的代码\",{\"1\":{\"45\":1}}],[\"优化异常捕获\",{\"0\":{\"45\":1}}],[\"potplayer\",{\"0\":{\"297\":1},\"1\":{\"297\":1}}],[\"post\",{\"1\":{\"104\":4,\"109\":4,\"110\":4,\"137\":1,\"154\":2,\"155\":2,\"158\":2,\"165\":4,\"174\":2,\"188\":2,\"189\":2}}],[\"pkg\",{\"1\":{\"250\":1,\"251\":1}}],[\"pp\",{\"1\":{\"236\":1}}],[\"public\",{\"1\":{\"195\":2}}],[\"put\",{\"1\":{\"104\":1}}],[\"platform\",{\"1\":{\"186\":1,\"188\":1,\"189\":1,\"195\":1}}],[\"password\",{\"1\":{\"242\":1,\"248\":1}}],[\"pa0\",{\"1\":{\"236\":2}}],[\"parsefilepipe\",{\"1\":{\"151\":1}}],[\"parsefloatpipe\",{\"1\":{\"151\":1}}],[\"parseenumpipe\",{\"1\":{\"151\":1}}],[\"parseuuidpipe\",{\"1\":{\"151\":1}}],[\"parsearraypipe\",{\"1\":{\"151\":1}}],[\"parseboolpipe\",{\"1\":{\"151\":1}}],[\"parseintpipe\",{\"1\":{\"151\":1,\"154\":2,\"155\":2,\"156\":2,\"157\":2}}],[\"parameter\",{\"1\":{\"152\":1}}],[\"params\",{\"0\":{\"108\":1},\"1\":{\"108\":4}}],[\"param\",{\"1\":{\"104\":4,\"108\":5,\"145\":4,\"156\":2}}],[\"path\",{\"1\":{\"137\":2,\"143\":1,\"186\":1,\"190\":1,\"191\":1}}],[\"patch\",{\"1\":{\"104\":4}}],[\"paddingright\",{\"1\":{\"50\":2}}],[\"prefix\",{\"0\":{\"105\":1},\"1\":{\"195\":1}}],[\"private\",{\"1\":{\"98\":1,\"104\":1,\"112\":1,\"113\":1,\"119\":1,\"121\":2,\"122\":2,\"131\":2,\"145\":2,\"154\":1,\"155\":1,\"156\":1,\"158\":1,\"165\":2,\"167\":2,\"174\":1}}],[\"project\",{\"1\":{\"282\":1}}],[\"proxy\",{\"0\":{\"267\":1},\"1\":{\"258\":2,\"259\":2,\"260\":2,\"261\":2,\"267\":1}}],[\"productionconfigservice\",{\"1\":{\"123\":1}}],[\"provide\",{\"1\":{\"119\":1,\"121\":1,\"122\":2,\"123\":1,\"124\":1,\"125\":1,\"131\":1,\"175\":1}}],[\"providers\",{\"1\":{\"98\":2,\"117\":2,\"118\":1,\"119\":3,\"121\":1,\"122\":2,\"123\":1,\"124\":1,\"125\":1,\"129\":5,\"131\":4,\"136\":1,\"137\":3,\"175\":1,\"186\":1}}],[\"process\",{\"1\":{\"97\":6}}],[\"props\",{\"1\":{\"50\":11}}],[\"promise<boolean>\",{\"1\":{\"163\":1,\"167\":1}}],[\"promise\",{\"0\":{\"44\":1}}],[\"px`\",{\"1\":{\"50\":2}}],[\"pixpin\",{\"0\":{\"292\":1},\"1\":{\"292\":1}}],[\"pin\",{\"1\":{\"236\":6}}],[\"pinterest\",{\"1\":{\"229\":1}}],[\"pink\",{\"1\":{\"51\":1}}],[\"pipe\",{\"1\":{\"152\":1,\"158\":1,\"191\":1}}],[\"pipetransform\",{\"1\":{\"152\":3}}],[\"pipes\",{\"1\":{\"150\":1,\"152\":3}}],[\"pisces12013\",{\"1\":{\"31\":1}}],[\"pi6\",{\"1\":{\"0\":1}}],[\"捕获异常\",{\"0\":{\"43\":1,\"44\":1}}],[\"切换回官方镜像源\",{\"0\":{\"39\":1}}],[\"换源\",{\"0\":{\"36\":1}}],[\"将网络地址在浏览器打开\",{\"1\":{\"305\":1}}],[\"将鼠标放到右侧审查出的元素上即可获取到表情包的网络地址\",{\"1\":{\"304\":1}}],[\"将脚本添加到桌面即可\",{\"1\":{\"250\":1}}],[\"将\",{\"1\":{\"245\":1}}],[\"将快捷方式粘贴进来即可\",{\"1\":{\"244\":1}}],[\"将快捷方式剪切\",{\"1\":{\"244\":1}}],[\"将两张照片合成一张\",{\"1\":{\"220\":1}}],[\"将控制传递给下一个中间件函数\",{\"1\":{\"135\":1}}],[\"将从\",{\"1\":{\"124\":1}}],[\"将解析该数组并将其作为参数传递给工厂函数\",{\"1\":{\"124\":1}}],[\"将外部库放入\",{\"1\":{\"121\":1}}],[\"将依赖项注入到目标对象中\",{\"1\":{\"95\":1}}],[\"将其设置为\",{\"1\":{\"71\":2}}],[\"将导航栏的position属性设置为sticky\",{\"1\":{\"57\":1}}],[\"将文字设置为透明\",{\"1\":{\"33\":1}}],[\"将设置的背景颜色限制在文字中\",{\"1\":{\"33\":2}}],[\"将魔方调整好\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"html\",{\"0\":{\"281\":1}}],[\"httpexceptionfilter\",{\"1\":{\"145\":4,\"146\":2}}],[\"httpexceptionfilter<t>\",{\"1\":{\"143\":1}}],[\"httpexception\",{\"1\":{\"143\":3}}],[\"http\",{\"1\":{\"143\":2,\"145\":2,\"146\":1,\"258\":2,\"259\":1,\"260\":2,\"261\":1}}],[\"httpcode\",{\"1\":{\"112\":3,\"113\":2}}],[\"https\",{\"1\":{\"31\":1,\"38\":1,\"39\":1,\"258\":2,\"259\":1,\"260\":4,\"261\":3}}],[\"h\",{\"1\":{\"236\":1}}],[\"handle\",{\"1\":{\"172\":1}}],[\"host\",{\"1\":{\"143\":2}}],[\"head\",{\"1\":{\"110\":2}}],[\"headers\",{\"1\":{\"110\":5}}],[\"header\",{\"0\":{\"110\":1},\"1\":{\"110\":2,\"113\":3}}],[\"hello\",{\"1\":{\"98\":1,\"119\":1,\"121\":1}}],[\"hidden\",{\"1\":{\"50\":1,\"71\":2,\"72\":1}}],[\"h4\",{\"1\":{\"0\":1}}],[\"茕茕の博客\",{\"1\":{\"31\":1}}],[\"博客\",{\"1\":{\"31\":1}}],[\"邮箱\",{\"1\":{\"31\":1}}],[\"联系方式\",{\"0\":{\"31\":1}}],[\"联想词\",{\"0\":{\"4\":1},\"1\":{\"6\":1}}],[\"莫言\",{\"1\":{\"29\":1}}],[\"鳄鱼\",{\"1\":{\"29\":1}}],[\"最好的免费卸载程序\",{\"1\":{\"289\":1}}],[\"最关心的参数是光圈\",{\"1\":{\"218\":1}}],[\"最后调用\",{\"1\":{\"235\":1}}],[\"最后\",{\"1\":{\"98\":1}}],[\"最近在看\",{\"0\":{\"30\":1}}],[\"最近在读\",{\"0\":{\"29\":1}}],[\"最终的编码如下\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"键盘客制化\",{\"1\":{\"28\":1}}],[\"摄影师泰罗\",{\"1\":{\"233\":1}}],[\"摄影学习记录\",{\"0\":{\"233\":1}}],[\"摄影思路\",{\"2\":{\"232\":1}}],[\"摄影技巧\",{\"2\":{\"222\":1}}],[\"摄影\",{\"0\":{\"217\":1},\"1\":{\"28\":1},\"2\":{\"207\":1,\"213\":1,\"221\":1,\"226\":1,\"231\":1}}],[\"爱好\",{\"0\":{\"28\":1}}],[\"热爱生活\",{\"1\":{\"27\":1}}],[\"热爱技术\",{\"1\":{\"27\":1}}],[\"喜欢编程\",{\"1\":{\"27\":1}}],[\"毕业于曲阜师范大学\",{\"1\":{\"27\":1}}],[\"check\",{\"1\":{\"282\":2}}],[\"cursor\",{\"1\":{\"280\":2}}],[\"custom\",{\"1\":{\"279\":1}}],[\"cmd\",{\"1\":{\"242\":1}}],[\"cmll\",{\"0\":{\"0\":1},\"1\":{\"0\":2},\"2\":{\"2\":1}}],[\"c\",{\"1\":{\"236\":1}}],[\"cnu\",{\"1\":{\"229\":1}}],[\"c画幅\",{\"1\":{\"211\":1}}],[\"ccd或cmos\",{\"1\":{\"201\":1}}],[\"ctx\",{\"1\":{\"143\":3}}],[\"createobject\",{\"1\":{\"244\":1}}],[\"created\",{\"1\":{\"242\":1,\"248\":1}}],[\"create<nestexpressapplication>\",{\"1\":{\"195\":1}}],[\"createarticledto\",{\"1\":{\"165\":8}}],[\"createuserdto\",{\"1\":{\"154\":4,\"155\":4,\"158\":5,\"174\":4}}],[\"createtestdto\",{\"1\":{\"104\":4,\"109\":4}}],[\"create\",{\"1\":{\"98\":1,\"104\":3,\"105\":1,\"109\":1,\"138\":1,\"146\":1,\"154\":3,\"155\":3,\"157\":1,\"158\":5,\"165\":6,\"166\":1,\"174\":3,\"176\":1}}],[\"cpu\",{\"1\":{\"97\":22,\"268\":1}}],[\"center\",{\"1\":{\"50\":1}}],[\"cleaner\",{\"0\":{\"266\":1},\"1\":{\"266\":1}}],[\"cli\",{\"0\":{\"88\":1},\"1\":{\"88\":3}}],[\"clip\",{\"1\":{\"33\":2,\"71\":1}}],[\"clash\",{\"0\":{\"291\":1},\"1\":{\"291\":1}}],[\"class\",{\"1\":{\"97\":6,\"98\":3,\"104\":1,\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"119\":4,\"121\":2,\"122\":2,\"123\":1,\"124\":2,\"125\":1,\"131\":5,\"136\":2,\"137\":3,\"143\":1,\"145\":2,\"152\":1,\"154\":1,\"155\":1,\"156\":1,\"158\":10,\"163\":1,\"165\":2,\"167\":2,\"172\":1,\"174\":1,\"175\":1,\"186\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"class=\",{\"1\":{\"50\":2}}],[\"clamp\",{\"1\":{\"72\":1}}],[\"clamp来限制在一个块元素显示的文本的行数\",{\"1\":{\"72\":1}}],[\"callback\",{\"1\":{\"186\":2}}],[\"callhandler\",{\"1\":{\"172\":2}}],[\"canactivate\",{\"1\":{\"163\":4,\"167\":3}}],[\"cache\",{\"1\":{\"113\":1}}],[\"carousel>\",{\"1\":{\"51\":1}}],[\"carousel\",{\"1\":{\"50\":1,\"51\":2}}],[\"catch\",{\"0\":{\"43\":1,\"44\":1},\"1\":{\"43\":1,\"44\":1,\"45\":4,\"143\":3}}],[\"code\",{\"1\":{\"294\":1}}],[\"courier\",{\"1\":{\"277\":1}}],[\"core\",{\"1\":{\"98\":1,\"105\":1,\"138\":1,\"146\":1,\"157\":1,\"158\":1,\"166\":1,\"167\":1,\"176\":1,\"195\":1}}],[\"consolas\",{\"1\":{\"277\":1}}],[\"console\",{\"1\":{\"43\":1,\"44\":1,\"45\":1,\"97\":4,\"136\":2,\"188\":1,\"189\":1}}],[\"consumer\",{\"1\":{\"136\":2,\"137\":6}}],[\"constructor\",{\"1\":{\"97\":2,\"98\":1,\"104\":1,\"112\":1,\"113\":1,\"119\":1,\"121\":1,\"122\":1,\"131\":1,\"145\":2,\"154\":1,\"155\":1,\"156\":1,\"158\":1,\"165\":2,\"167\":2,\"174\":1}}],[\"const\",{\"1\":{\"50\":8,\"51\":5,\"97\":4,\"98\":1,\"105\":1,\"138\":1,\"143\":4,\"146\":1,\"157\":1,\"158\":1,\"166\":1,\"167\":2,\"176\":1,\"180\":1,\"186\":1,\"190\":1,\"191\":2,\"195\":1}}],[\"context\",{\"1\":{\"163\":1,\"167\":3,\"172\":1}}],[\"content\",{\"1\":{\"50\":2,\"63\":1,\"191\":2}}],[\"controller\",{\"1\":{\"98\":4,\"102\":1,\"104\":3,\"107\":6,\"108\":6,\"109\":6,\"110\":6,\"111\":3,\"112\":3,\"113\":3,\"119\":3,\"121\":3,\"122\":3,\"131\":8,\"136\":1,\"137\":5,\"145\":6,\"154\":3,\"155\":3,\"156\":3,\"158\":3,\"165\":6,\"167\":3,\"174\":3,\"175\":1,\"186\":1,\"188\":3,\"189\":3,\"190\":3,\"191\":3}}],[\"controllers\",{\"1\":{\"98\":2,\"102\":1,\"129\":2,\"131\":4,\"136\":1,\"137\":3,\"175\":1,\"186\":1}}],[\"control\",{\"1\":{\"94\":1,\"113\":1}}],[\"containerwidth\",{\"1\":{\"50\":2}}],[\"containerref\",{\"1\":{\"50\":3}}],[\"container\",{\"1\":{\"50\":2}}],[\"configure\",{\"1\":{\"136\":1,\"137\":3}}],[\"configservice\",{\"1\":{\"123\":1}}],[\"config\",{\"1\":{\"38\":1,\"39\":1,\"131\":2,\"255\":1,\"256\":2,\"258\":2,\"259\":2,\"260\":2,\"261\":2,\"282\":1}}],[\"color\",{\"1\":{\"33\":2,\"51\":1}}],[\"common\",{\"1\":{\"98\":3,\"104\":1,\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"119\":4,\"121\":3,\"122\":3,\"123\":1,\"124\":1,\"125\":1,\"131\":5,\"136\":2,\"137\":3,\"143\":1,\"145\":2,\"152\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":2,\"163\":1,\"165\":2,\"167\":2,\"172\":1,\"174\":1,\"175\":1,\"180\":1,\"181\":1,\"186\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"compressing\",{\"1\":{\"191\":3}}],[\"computer\",{\"1\":{\"97\":16}}],[\"components\",{\"1\":{\"51\":1}}],[\"com\",{\"1\":{\"31\":2,\"38\":1,\"256\":1,\"260\":2,\"261\":2}}],[\"css\",{\"0\":{\"33\":1,\"55\":1,\"75\":1},\"1\":{\"75\":1},\"2\":{\"35\":1,\"60\":1,\"66\":1,\"74\":1,\"77\":1}}],[\"cd\",{\"1\":{\"19\":1,\"90\":1,\"250\":1}}],[\"editing\",{\"1\":{\"281\":2}}],[\"editor\",{\"1\":{\"276\":1,\"277\":1,\"278\":2,\"281\":1}}],[\"email\",{\"1\":{\"256\":2}}],[\"esc\",{\"1\":{\"250\":1}}],[\"enable\",{\"1\":{\"236\":1}}],[\"environment\",{\"1\":{\"123\":2}}],[\"extension\",{\"0\":{\"269\":1}}],[\"extname\",{\"1\":{\"186\":3}}],[\"example\",{\"1\":{\"256\":1}}],[\"exe\",{\"1\":{\"242\":1,\"244\":2,\"245\":1}}],[\"executioncontext\",{\"1\":{\"163\":2,\"167\":2,\"172\":2}}],[\"exceptionfilter\",{\"1\":{\"143\":2,\"146\":1}}],[\"exception\",{\"1\":{\"142\":1,\"143\":4,\"145\":2,\"146\":1}}],[\"exclude\",{\"1\":{\"105\":1,\"137\":3}}],[\"express\",{\"1\":{\"136\":1,\"167\":1,\"186\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"195\":1}}],[\"exports\",{\"1\":{\"129\":1}}],[\"export\",{\"1\":{\"98\":3,\"104\":1,\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"119\":4,\"121\":2,\"122\":2,\"123\":1,\"124\":1,\"125\":1,\"131\":5,\"136\":2,\"137\":3,\"143\":1,\"145\":2,\"152\":1,\"154\":1,\"155\":1,\"156\":1,\"158\":2,\"163\":1,\"165\":2,\"167\":2,\"172\":1,\"174\":1,\"175\":1,\"180\":1,\"181\":1,\"186\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"ellipsis\",{\"1\":{\"71\":2,\"72\":3}}],[\"else\",{\"1\":{\"50\":1,\"167\":1}}],[\"echarts\",{\"0\":{\"67\":1},\"2\":{\"69\":1}}],[\"error2\",{\"1\":{\"45\":1}}],[\"error1\",{\"1\":{\"45\":1}}],[\"error\",{\"1\":{\"43\":2,\"44\":2,\"45\":4}}],[\"e\",{\"1\":{\"19\":3}}],[\"02\",{\"1\":{\"242\":2,\"248\":2}}],[\"0px\",{\"1\":{\"67\":4}}],[\"09\",{\"1\":{\"30\":1}}],[\"07\",{\"1\":{\"30\":1}}],[\"0\",{\"1\":{\"18\":1,\"19\":2,\"50\":4,\"75\":1,\"158\":1,\"236\":5,\"258\":4,\"260\":4}}],[\"xm\",{\"1\":{\"18\":1}}],[\"x\",{\"1\":{\"18\":3}}],[\"在微信中将下载的表情包发送给好友\",{\"1\":{\"306\":1}}],[\"在私信页面找到我们发送的表情包\",{\"1\":{\"303\":1}}],[\"在电脑浏览器中登录抖音网页版\",{\"1\":{\"302\":1}}],[\"在设置中搜索\",{\"1\":{\"275\":1,\"276\":1,\"277\":1,\"278\":2,\"279\":1,\"280\":1,\"281\":1,\"282\":1,\"283\":1}}],[\"在输出的\",{\"1\":{\"242\":1,\"248\":1}}],[\"在地址栏输入\",{\"1\":{\"242\":1,\"244\":1}}],[\"在什么环境下拍摄\",{\"1\":{\"224\":1}}],[\"在光照很强时\",{\"1\":{\"217\":1}}],[\"在守卫中\",{\"1\":{\"167\":1}}],[\"在控制器中使用\",{\"0\":{\"187\":1},\"1\":{\"187\":1}}],[\"在控制器中使用类验证器\",{\"1\":{\"158\":1}}],[\"在控制器方法中\",{\"1\":{\"158\":1}}],[\"在控制器的构造函数中\",{\"1\":{\"98\":1}}],[\"在实例化过程中\",{\"1\":{\"124\":1}}],[\"在某些情况下\",{\"1\":{\"123\":1}}],[\"在需要使用的地方\",{\"1\":{\"122\":1}}],[\"在需要使用的类中\",{\"1\":{\"119\":1,\"121\":1,\"123\":1,\"124\":1,\"125\":1}}],[\"在模块中引入\",{\"0\":{\"186\":1}}],[\"在模块中注册提供者时\",{\"1\":{\"122\":1}}],[\"在模块中\",{\"1\":{\"121\":1,\"124\":1,\"125\":1,\"129\":1}}],[\"在模块的\",{\"1\":{\"119\":1}}],[\"在构造函数中注入提供者即可\",{\"1\":{\"123\":1}}],[\"在构造函数中注入提供者\",{\"1\":{\"119\":1,\"121\":1}}],[\"在依赖注入中\",{\"1\":{\"97\":1}}],[\"在这个例子中\",{\"1\":{\"97\":2,\"98\":1}}],[\"在传统的开发模式中\",{\"1\":{\"97\":1}}],[\"在\",{\"1\":{\"94\":1,\"95\":1,\"98\":1,\"102\":1,\"104\":1,\"105\":1,\"118\":1,\"129\":1,\"131\":1,\"136\":1,\"137\":2,\"138\":1,\"142\":1,\"158\":1,\"166\":1,\"195\":1,\"244\":1,\"248\":1,\"251\":1}}],[\"在浏览器中访问\",{\"1\":{\"196\":1}}],[\"在浏览器中\",{\"1\":{\"90\":1}}],[\"在终端中输入\",{\"1\":{\"82\":1}}],[\"在同一块上\",{\"1\":{\"18\":1,\"19\":1}}],[\"在完成左右桥之后\",{\"1\":{\"0\":1}}],[\"但需要拍摄丝绸状流水时\",{\"1\":{\"219\":1}}],[\"但也可能引入噪点\",{\"1\":{\"205\":1}}],[\"但如果像素密度过高\",{\"1\":{\"201\":1}}],[\"但是建议去南天门租大衣\",{\"1\":{\"312\":1}}],[\"但是直接通过域名访问的\",{\"1\":{\"105\":1}}],[\"但是最后一个编码是以\",{\"1\":{\"19\":1}}],[\"但是\",{\"1\":{\"18\":1,\"19\":1}}],[\"但还有未读的棱块\",{\"1\":{\"18\":2,\"19\":1}}],[\"jetbrains\",{\"1\":{\"277\":1}}],[\"join\",{\"1\":{\"186\":2,\"190\":2,\"191\":2}}],[\"js\",{\"1\":{\"158\":1,\"282\":2}}],[\"json\",{\"1\":{\"143\":1}}],[\"javascript\",{\"0\":{\"282\":1,\"283\":1},\"2\":{\"47\":1}}],[\"j\",{\"1\":{\"18\":4}}],[\"所见即所得\",{\"1\":{\"210\":1}}],[\"所以我们可以自己写一个工具函数来优化异常捕获\",{\"1\":{\"45\":1}}],[\"所以我们需要继续按色相借位\",{\"1\":{\"18\":2,\"19\":1}}],[\"所以出现了翻色的情况\",{\"1\":{\"19\":1}}],[\"所有棱块都读到了\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"如何将抖音表情包保存到微信03\",{\"1\":{\"304\":1}}],[\"如何将抖音表情包保存到微信02\",{\"1\":{\"304\":1}}],[\"如何将抖音表情包保存到微信01\",{\"1\":{\"303\":1}}],[\"如何将抖音表情包保存到微信\",{\"0\":{\"301\":1}}],[\"如何使用\",{\"0\":{\"235\":1}}],[\"如何学习\",{\"0\":{\"225\":1}}],[\"如何提高构图能力\",{\"0\":{\"223\":1}}],[\"如何设定相机参数\",{\"0\":{\"215\":1}}],[\"如何更好地使用联想词记忆\",{\"0\":{\"5\":1}}],[\"如\",{\"1\":{\"94\":1,\"104\":3}}],[\"如果体力好的话可以先去岱庙游览一番然后再登山\",{\"1\":{\"311\":1}}],[\"如果我们想把它们保存到微信上\",{\"1\":{\"301\":1}}],[\"如果我们需要传递参数该怎么做呢\",{\"1\":{\"131\":1}}],[\"如果我们需要更换\",{\"1\":{\"97\":1}}],[\"如果没有快门线\",{\"1\":{\"216\":1}}],[\"如果有三脚架时\",{\"1\":{\"216\":1}}],[\"如果近处有景物时\",{\"1\":{\"216\":1}}],[\"如果想抓拍\",{\"1\":{\"204\":1}}],[\"如果返回为\",{\"1\":{\"163\":1}}],[\"如果当前的中间件函数没有结束请求\",{\"1\":{\"135\":1}}],[\"如果你想要重用一个已经存在的提供者\",{\"1\":{\"125\":1}}],[\"如果只写一次\",{\"1\":{\"45\":1}}],[\"如果给文字直接设置渐变色会不生效\",{\"1\":{\"33\":1}}],[\"如果\",{\"1\":{\"18\":1,\"19\":1}}],[\"那么我们的第八个编码就是\",{\"1\":{\"18\":1}}],[\"那么我们需要借一个\",{\"1\":{\"18\":1,\"19\":1}}],[\"那么第十四个编码就是\",{\"1\":{\"18\":1}}],[\"那么第十三个编码就是\",{\"1\":{\"18\":1}}],[\"那么第十二个编码就是\",{\"1\":{\"18\":1,\"19\":1}}],[\"那么第十一个编码就是\",{\"1\":{\"18\":1,\"19\":1}}],[\"那么第十个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第九个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第八个编码就是\",{\"1\":{\"17\":1,\"19\":1,\"23\":1}}],[\"那么第七个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第六个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第五个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第四个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第三个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第二个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第一个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"127\",{\"1\":{\"258\":2,\"260\":2}}],[\"12\",{\"1\":{\"242\":1,\"248\":1}}],[\"1px\",{\"1\":{\"229\":1}}],[\"1以上\",{\"1\":{\"216\":1}}],[\"1000秒\",{\"1\":{\"204\":1}}],[\"1000秒的快门速度意味着快门每次只打开1\",{\"1\":{\"204\":1}}],[\"100px\",{\"1\":{\"51\":1}}],[\"100\",{\"1\":{\"50\":1}}],[\"10\",{\"1\":{\"50\":1}}],[\"1\",{\"1\":{\"18\":2,\"19\":1,\"50\":1,\"51\":1,\"104\":3,\"204\":1,\"206\":1,\"217\":1,\"236\":1,\"258\":2,\"260\":2}}],[\"黄绿块的黄色是\",{\"1\":{\"19\":1}}],[\"黄绿块的绿色是\",{\"1\":{\"18\":1}}],[\"黄顶红前\",{\"1\":{\"10\":1,\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"借位的原则是按色相借位\",{\"1\":{\"18\":1,\"19\":1}}],[\"它可以控制进光量从而影响曝光时间\",{\"1\":{\"204\":1}}],[\"它的内容如下\",{\"1\":{\"163\":1,\"172\":1,\"180\":1}}],[\"它的编码是\",{\"1\":{\"17\":11,\"18\":11,\"19\":10,\"23\":11}}],[\"它们提供了类验证器所需的功能\",{\"1\":{\"158\":1}}],[\"它允许你在类属性上使用装饰器来指定验证规则\",{\"1\":{\"158\":1}}],[\"它只是记录进入和离开中间件函数的日志消息\",{\"1\":{\"136\":1}}],[\"它必须调用\",{\"1\":{\"135\":1}}],[\"它有如下几个属性\",{\"1\":{\"129\":1}}],[\"它使用\",{\"1\":{\"129\":1}}],[\"它封装了一组相关的功能和服务\",{\"1\":{\"129\":1}}],[\"它将依赖于\",{\"1\":{\"98\":1}}],[\"它直接创建\",{\"1\":{\"97\":1}}],[\"它是我们的缓冲块\",{\"1\":{\"18\":1,\"19\":1}}],[\"tarstream\",{\"1\":{\"191\":3}}],[\"the\",{\"1\":{\"242\":2,\"248\":2}}],[\"throw\",{\"1\":{\"145\":2,\"152\":1}}],[\"this\",{\"1\":{\"97\":8,\"98\":1,\"104\":5,\"112\":1,\"113\":1,\"119\":1,\"121\":2,\"122\":3,\"131\":2,\"145\":2,\"154\":2,\"155\":2,\"156\":1,\"158\":1,\"165\":2,\"167\":2,\"174\":2}}],[\"timestamp\",{\"1\":{\"143\":1}}],[\"ts\",{\"1\":{\"98\":4,\"104\":1,\"105\":2,\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"119\":4,\"121\":2,\"122\":2,\"123\":1,\"124\":1,\"125\":1,\"131\":7,\"136\":3,\"137\":3,\"138\":2,\"143\":1,\"145\":2,\"146\":1,\"152\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":2,\"158\":4,\"163\":1,\"165\":2,\"166\":2,\"167\":2,\"172\":1,\"174\":1,\"175\":1,\"176\":2,\"180\":1,\"181\":1,\"186\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"195\":2}}],[\"typescript\",{\"0\":{\"283\":1}}],[\"types\",{\"1\":{\"185\":1}}],[\"typeof\",{\"1\":{\"152\":1}}],[\"type\",{\"1\":{\"50\":5,\"152\":1,\"167\":1,\"191\":1,\"278\":2}}],[\"termux\",{\"0\":{\"247\":1},\"1\":{\"247\":3,\"248\":1,\"251\":1},\"2\":{\"253\":1}}],[\"testconfig\",{\"1\":{\"131\":2}}],[\"testcontroller\",{\"1\":{\"104\":1,\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"131\":3,\"145\":2}}],[\"testmodule\",{\"1\":{\"131\":8}}],[\"testservice\",{\"1\":{\"104\":8,\"131\":6,\"145\":8}}],[\"test\",{\"1\":{\"104\":14,\"107\":6,\"108\":6,\"109\":7,\"110\":6,\"111\":3,\"131\":18,\"137\":1,\"145\":8}}],[\"template>\",{\"1\":{\"50\":1,\"51\":1}}],[\"textscrollspeed\",{\"1\":{\"51\":2}}],[\"textstartscrolldelay\",{\"1\":{\"51\":2}}],[\"textstyle=\",{\"1\":{\"51\":1}}],[\"textstyle\",{\"1\":{\"50\":3,\"51\":2}}],[\"textwidth\",{\"1\":{\"50\":3}}],[\"textcontent=\",{\"1\":{\"51\":1}}],[\"textcontent\",{\"1\":{\"50\":4,\"51\":2}}],[\"textcontentref\",{\"1\":{\"50\":3}}],[\"textgap=\",{\"1\":{\"51\":1}}],[\"textgap\",{\"1\":{\"50\":4,\"51\":2}}],[\"textoverflow\",{\"1\":{\"50\":5}}],[\"text\",{\"1\":{\"33\":3,\"71\":3,\"72\":1}}],[\"translatex\",{\"1\":{\"50\":2}}],[\"transformer\",{\"1\":{\"158\":2}}],[\"transform\",{\"1\":{\"50\":2,\"152\":2}}],[\"transparent\",{\"1\":{\"33\":1,\"75\":1}}],[\"true\",{\"1\":{\"50\":2,\"163\":2,\"167\":1,\"188\":1,\"189\":1,\"278\":2,\"281\":1,\"282\":1}}],[\"trycatch\",{\"1\":{\"45\":3}}],[\"try\",{\"0\":{\"43\":1},\"1\":{\"43\":1,\"45\":4}}],[\"toisostring\",{\"1\":{\"143\":1}}],[\"token\",{\"1\":{\"122\":7}}],[\"top\",{\"1\":{\"67\":1}}],[\"to\",{\"1\":{\"33\":2,\"50\":1}}],[\"t\",{\"1\":{\"18\":3}}],[\"t6\",{\"1\":{\"0\":1}}],[\"query\",{\"0\":{\"107\":1},\"1\":{\"107\":13,\"111\":1,\"152\":2,\"167\":1,\"190\":2,\"191\":2}}],[\"qq\",{\"0\":{\"288\":1},\"1\":{\"31\":2,\"288\":1}}],[\"qt\",{\"1\":{\"18\":1}}],[\"q\",{\"1\":{\"18\":3}}],[\"wq\",{\"1\":{\"250\":1}}],[\"wscript\",{\"1\":{\"244\":1}}],[\"ws\",{\"1\":{\"244\":2}}],[\"widget\",{\"1\":{\"247\":1}}],[\"width\",{\"1\":{\"50\":1,\"51\":1}}],[\"windows\",{\"0\":{\"241\":1},\"1\":{\"242\":1}}],[\"while\",{\"1\":{\"236\":1}}],[\"white\",{\"1\":{\"71\":2}}],[\"whitespace\",{\"1\":{\"50\":2}}],[\"writebit\",{\"1\":{\"236\":3}}],[\"world\",{\"1\":{\"98\":1,\"119\":1}}],[\"watch\",{\"1\":{\"50\":2}}],[\"webkit\",{\"1\":{\"33\":2,\"72\":8}}],[\"w\",{\"1\":{\"17\":3,\"19\":3,\"23\":3}}],[\"droid\",{\"1\":{\"247\":1}}],[\"download\",{\"1\":{\"190\":3}}],[\"date\",{\"1\":{\"143\":1,\"186\":1}}],[\"dynamicmodule\",{\"1\":{\"131\":2}}],[\"dto\",{\"1\":{\"104\":4,\"109\":2,\"154\":2,\"155\":2,\"158\":6,\"165\":4,\"174\":2}}],[\"destination\",{\"1\":{\"186\":1}}],[\"description\",{\"1\":{\"181\":1}}],[\"decorator\",{\"1\":{\"180\":2,\"181\":1}}],[\"decorators\",{\"1\":{\"95\":1}}],[\"delete\",{\"1\":{\"104\":4}}],[\"dependency\",{\"1\":{\"95\":1}}],[\"developmentconfigservice\",{\"1\":{\"123\":1}}],[\"development\",{\"1\":{\"123\":1}}],[\"dev\",{\"1\":{\"90\":1}}],[\"defaultvaluepipe\",{\"1\":{\"151\":1}}],[\"default\",{\"1\":{\"50\":5}}],[\"defineprops\",{\"1\":{\"50\":1}}],[\"dialog\",{\"1\":{\"279\":2}}],[\"dirname\",{\"1\":{\"186\":1,\"190\":1,\"191\":1}}],[\"disposition\",{\"1\":{\"191\":1}}],[\"display\",{\"1\":{\"50\":2,\"72\":1}}],[\"diskstorage\",{\"1\":{\"186\":2}}],[\"di\",{\"0\":{\"95\":1},\"1\":{\"95\":1,\"98\":1}}],[\"div\",{\"1\":{\"71\":1}}],[\"div>\",{\"1\":{\"50\":4,\"51\":1}}],[\"duration\",{\"1\":{\"50\":3}}],[\"d\",{\"1\":{\"17\":3,\"18\":5,\"19\":9,\"23\":3}}],[\"d2\",{\"1\":{\"17\":2,\"18\":1}}],[\"smooth\",{\"1\":{\"280\":1}}],[\"size\",{\"1\":{\"276\":2}}],[\"save\",{\"1\":{\"275\":2,\"278\":2}}],[\"switchyomega\",{\"0\":{\"267\":1},\"1\":{\"267\":1}}],[\"switchtohttp\",{\"1\":{\"143\":1,\"167\":1}}],[\"successfully\",{\"1\":{\"242\":1,\"248\":1}}],[\"speed\",{\"1\":{\"204\":1,\"236\":2}}],[\"space\",{\"1\":{\"71\":2}}],[\"sh\",{\"1\":{\"250\":1}}],[\"shortcuts\",{\"1\":{\"250\":2}}],[\"show=\",{\"1\":{\"50\":1}}],[\"shell\",{\"1\":{\"244\":2}}],[\"shutter\",{\"1\":{\"204\":1}}],[\"src\",{\"1\":{\"98\":4,\"104\":1,\"105\":1,\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"119\":4,\"121\":2,\"122\":2,\"123\":1,\"124\":1,\"125\":1,\"131\":5,\"136\":2,\"137\":3,\"138\":1,\"143\":1,\"145\":4,\"146\":1,\"152\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":3,\"163\":1,\"165\":4,\"166\":1,\"167\":3,\"172\":1,\"174\":2,\"175\":1,\"176\":1,\"180\":1,\"181\":1,\"186\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"scoped>\",{\"1\":{\"50\":1}}],[\"script>\",{\"1\":{\"50\":1,\"51\":1}}],[\"scrollspeed=\",{\"1\":{\"51\":1}}],[\"scrollspeed\",{\"1\":{\"50\":2}}],[\"scrolldelay=\",{\"1\":{\"51\":1}}],[\"scrolldelay\",{\"1\":{\"50\":2}}],[\"studio\",{\"1\":{\"294\":1}}],[\"stm32\",{\"0\":{\"239\":1},\"1\":{\"239\":1},\"2\":{\"238\":1}}],[\"stm32f10x\",{\"1\":{\"236\":1}}],[\"stream\",{\"1\":{\"191\":2}}],[\"streamdownload\",{\"1\":{\"191\":2}}],[\"string\",{\"0\":{\"107\":1},\"1\":{\"50\":1,\"98\":2,\"104\":3,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"112\":1,\"113\":1,\"119\":2,\"121\":1,\"122\":2,\"131\":2,\"145\":2,\"152\":2,\"158\":1,\"167\":1,\"180\":1,\"190\":1,\"191\":1}}],[\"storage\",{\"1\":{\"186\":1}}],[\"statuscode\",{\"1\":{\"143\":1}}],[\"status\",{\"1\":{\"143\":4}}],[\"static\",{\"1\":{\"131\":1,\"195\":1,\"196\":1}}],[\"startup\",{\"1\":{\"244\":1}}],[\"start\",{\"1\":{\"90\":1,\"250\":1}}],[\"style\",{\"1\":{\"279\":2}}],[\"style>\",{\"1\":{\"50\":1}}],[\"style=\",{\"1\":{\"50\":3,\"51\":1}}],[\"s`\",{\"1\":{\"50\":2}}],[\"semicolons\",{\"1\":{\"283\":2}}],[\"server\",{\"1\":{\"242\":1,\"244\":1,\"248\":1,\"250\":1}}],[\"service\",{\"1\":{\"98\":4,\"104\":1,\"112\":1,\"113\":1,\"119\":4,\"121\":2,\"122\":1,\"125\":1,\"131\":5,\"136\":1,\"137\":5,\"145\":2,\"154\":1,\"155\":1,\"156\":1,\"158\":1,\"165\":2,\"167\":1,\"174\":1,\"175\":1,\"186\":1}}],[\"setbits\",{\"1\":{\"236\":2}}],[\"setheader\",{\"1\":{\"191\":2}}],[\"setmetadata\",{\"1\":{\"167\":3,\"180\":2,\"181\":1}}],[\"setglobalprefix\",{\"1\":{\"105\":1}}],[\"setup>\",{\"1\":{\"50\":1,\"51\":1}}],[\"set\",{\"1\":{\"38\":1,\"39\":1,\"236\":1,\"244\":1}}],[\"se\",{\"1\":{\"19\":1}}],[\"sd\",{\"1\":{\"17\":1,\"23\":1}}],[\"s\",{\"1\":{\"17\":3,\"19\":3,\"23\":3}}],[\"s6\",{\"1\":{\"0\":1}}],[\"nvidia\",{\"1\":{\"97\":2}}],[\"nvidiagpu\",{\"1\":{\"97\":7}}],[\"next\",{\"1\":{\"135\":2,\"136\":2,\"172\":2}}],[\"nexttick\",{\"1\":{\"50\":3}}],[\"new\",{\"1\":{\"89\":1,\"97\":6,\"138\":1,\"143\":1,\"145\":2,\"146\":1,\"152\":1,\"157\":1,\"158\":2,\"166\":1,\"174\":1,\"176\":1,\"186\":1,\"191\":1,\"277\":1}}],[\"nestexpressapplication\",{\"1\":{\"195\":1}}],[\"nestinterceptor\",{\"1\":{\"172\":3}}],[\"nestmodule\",{\"1\":{\"136\":2,\"137\":6}}],[\"nestmiddleware\",{\"1\":{\"136\":2}}],[\"nestfactory\",{\"1\":{\"98\":2,\"105\":2,\"138\":2,\"146\":2,\"157\":2,\"158\":2,\"166\":2,\"176\":2,\"195\":2}}],[\"nestjs\",{\"1\":{\"88\":2,\"98\":5,\"104\":1,\"105\":1,\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"119\":4,\"121\":3,\"122\":3,\"123\":1,\"124\":1,\"125\":1,\"131\":5,\"136\":2,\"137\":3,\"138\":1,\"143\":1,\"145\":2,\"146\":1,\"152\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":2,\"158\":3,\"163\":1,\"165\":2,\"166\":1,\"167\":3,\"172\":1,\"174\":1,\"175\":1,\"176\":1,\"180\":1,\"181\":1,\"186\":2,\"188\":2,\"189\":2,\"190\":1,\"191\":1,\"195\":2}}],[\"nest\",{\"0\":{\"87\":1,\"88\":1,\"89\":1,\"98\":1,\"199\":1},\"1\":{\"88\":2,\"89\":1,\"94\":1,\"95\":1,\"98\":6,\"102\":1,\"104\":2,\"117\":1,\"118\":2,\"121\":1,\"124\":2,\"129\":1,\"136\":1,\"142\":1,\"143\":1,\"144\":1,\"150\":1,\"151\":1,\"152\":1,\"158\":2,\"162\":1,\"163\":1,\"167\":1,\"171\":1,\"172\":1,\"180\":2,\"185\":1,\"199\":1},\"2\":{\"92\":1,\"100\":1,\"115\":1,\"127\":1,\"133\":1,\"140\":1,\"148\":1,\"160\":1,\"169\":1,\"178\":1,\"183\":1,\"193\":1,\"198\":1}}],[\"not\",{\"1\":{\"317\":1}}],[\"node\",{\"1\":{\"158\":1}}],[\"none\",{\"1\":{\"50\":1,\"113\":1}}],[\"nowrap\",{\"1\":{\"50\":2,\"71\":2}}],[\"number\",{\"1\":{\"50\":3,\"107\":1,\"156\":1,\"158\":1}}],[\"null\",{\"1\":{\"45\":2,\"50\":3,\"186\":2}}],[\"npmjs\",{\"1\":{\"39\":1}}],[\"npmmirror\",{\"1\":{\"38\":1}}],[\"npm\",{\"0\":{\"36\":1},\"1\":{\"37\":1,\"38\":1,\"39\":1,\"88\":2,\"90\":1,\"158\":1,\"185\":1,\"191\":1},\"2\":{\"41\":1}}],[\"name\",{\"1\":{\"107\":4,\"108\":6,\"109\":4,\"110\":4,\"111\":1,\"158\":1,\"256\":2}}],[\"na\",{\"1\":{\"19\":1}}],[\"n\",{\"1\":{\"17\":3,\"19\":3,\"23\":3}}],[\"key\",{\"1\":{\"122\":3,\"167\":1}}],[\"keyframes\",{\"1\":{\"50\":1}}],[\"kd\",{\"1\":{\"18\":1}}],[\"kn\",{\"1\":{\"17\":1,\"23\":1}}],[\"k\",{\"1\":{\"17\":3,\"18\":3,\"23\":3}}],[\"your\",{\"1\":{\"256\":1}}],[\"yellow\",{\"1\":{\"33\":2}}],[\"yd\",{\"1\":{\"19\":1}}],[\"yi\",{\"1\":{\"18\":1}}],[\"y\",{\"1\":{\"17\":3,\"18\":3,\"19\":3,\"23\":3}}],[\"on\",{\"1\":{\"278\":4}}],[\"onmounted\",{\"1\":{\"50\":2}}],[\"out\",{\"1\":{\"236\":1}}],[\"octet\",{\"1\":{\"191\":1}}],[\"observable<any>\",{\"1\":{\"172\":1}}],[\"observable<boolean>\",{\"1\":{\"163\":1,\"167\":1}}],[\"observable\",{\"1\":{\"163\":1,\"167\":1,\"172\":1}}],[\"object\",{\"0\":{\"111\":1},\"1\":{\"50\":1}}],[\"options\",{\"1\":{\"131\":2}}],[\"of\",{\"1\":{\"94\":1}}],[\"offsetwidth\",{\"1\":{\"50\":2}}],[\"origin\",{\"0\":{\"268\":1},\"1\":{\"268\":1}}],[\"originalname\",{\"1\":{\"186\":2}}],[\"orient\",{\"1\":{\"72\":1}}],[\"orient属性设置伸缩盒对象的子元素的排列方式\",{\"1\":{\"72\":1}}],[\"org\",{\"1\":{\"39\":1}}],[\"overflow\",{\"1\":{\"50\":1,\"71\":5,\"72\":3}}],[\"oi\",{\"1\":{\"19\":1}}],[\"oy\",{\"1\":{\"17\":1,\"23\":1}}],[\"o\",{\"1\":{\"17\":3,\"18\":3,\"19\":3,\"23\":3}}],[\"o2\",{\"1\":{\"0\":1}}],[\"iso自动\",{\"1\":{\"216\":1}}],[\"iso\",{\"1\":{\"205\":1}}],[\"isnotempty\",{\"1\":{\"158\":3}}],[\"isint\",{\"1\":{\"158\":3}}],[\"isstring\",{\"1\":{\"158\":3}}],[\"is\",{\"1\":{\"122\":1,\"242\":1,\"248\":1}}],[\"id\",{\"1\":{\"104\":12,\"145\":6,\"156\":4}}],[\"implicit\",{\"1\":{\"282\":1}}],[\"implements\",{\"1\":{\"97\":2,\"136\":2,\"137\":3,\"143\":1,\"152\":1,\"163\":1,\"167\":1,\"172\":1}}],[\"imports\",{\"1\":{\"98\":1,\"129\":1,\"130\":1,\"131\":3,\"136\":1,\"137\":3,\"175\":1,\"186\":1}}],[\"import\",{\"1\":{\"50\":1,\"51\":2,\"98\":8,\"104\":4,\"105\":2,\"107\":2,\"108\":2,\"109\":3,\"110\":2,\"111\":1,\"112\":2,\"113\":2,\"119\":7,\"121\":5,\"122\":4,\"123\":1,\"124\":1,\"125\":2,\"131\":17,\"136\":6,\"137\":16,\"138\":3,\"143\":1,\"145\":6,\"146\":3,\"152\":1,\"154\":3,\"155\":3,\"156\":2,\"157\":3,\"158\":7,\"163\":2,\"165\":8,\"166\":3,\"167\":7,\"172\":2,\"174\":4,\"175\":5,\"176\":3,\"180\":1,\"181\":1,\"186\":6,\"188\":2,\"189\":2,\"190\":3,\"191\":4,\"195\":3}}],[\"ioc\",{\"0\":{\"94\":1},\"1\":{\"94\":4,\"95\":1,\"98\":3}}],[\"insert\",{\"1\":{\"283\":1}}],[\"install\",{\"1\":{\"88\":1,\"158\":1,\"185\":1,\"191\":1,\"248\":1,\"250\":1}}],[\"info\",{\"1\":{\"242\":2,\"248\":2}}],[\"infinite\",{\"1\":{\"50\":1}}],[\"int\",{\"1\":{\"236\":1}}],[\"intercept\",{\"1\":{\"172\":1}}],[\"interceptor\",{\"1\":{\"172\":4,\"174\":3,\"175\":4,\"176\":3}}],[\"interceptors\",{\"1\":{\"171\":1}}],[\"interface\",{\"1\":{\"97\":4}}],[\"intel\",{\"1\":{\"97\":2}}],[\"intelcpu\",{\"1\":{\"97\":7}}],[\"include\",{\"1\":{\"236\":1}}],[\"includes\",{\"1\":{\"167\":1}}],[\"initial\",{\"1\":{\"242\":1,\"248\":1}}],[\"initstructure\",{\"1\":{\"236\":5}}],[\"inittypedef\",{\"1\":{\"236\":1}}],[\"init\",{\"1\":{\"235\":1,\"236\":2}}],[\"inject\",{\"1\":{\"121\":1,\"122\":3,\"124\":4,\"125\":1,\"131\":3}}],[\"injectable\",{\"1\":{\"98\":3,\"119\":3,\"136\":2,\"152\":2,\"163\":3,\"167\":2,\"172\":3}}],[\"injection\",{\"1\":{\"95\":1}}],[\"inversion\",{\"1\":{\"94\":1}}],[\"index属性以确保导航栏在页面其他元素之上显示\",{\"1\":{\"57\":1}}],[\"items\",{\"1\":{\"50\":1}}],[\"if\",{\"1\":{\"50\":1,\"152\":1,\"167\":1}}],[\"ij\",{\"1\":{\"18\":2}}],[\"i\",{\"1\":{\"17\":3,\"18\":2,\"19\":3,\"23\":3,\"250\":1}}],[\"是一个生活方式\",{\"1\":{\"287\":1}}],[\"是一种基于装饰器的验证机制\",{\"1\":{\"158\":1}}],[\"是一种软件设计思想\",{\"1\":{\"94\":1}}],[\"是相机传感器对光线的敏感程度\",{\"1\":{\"205\":1}}],[\"是用于对\",{\"1\":{\"162\":1}}],[\"是用于管理应用程序的依赖项和服务\",{\"1\":{\"117\":1}}],[\"是关于数据的元数据信息\",{\"1\":{\"152\":1}}],[\"是传过来的数据\",{\"1\":{\"152\":1}}],[\"是在路由处理程序之前调用的函数\",{\"1\":{\"135\":1}}],[\"是应用程序的基本构建块\",{\"1\":{\"129\":1}}],[\"是通过装饰器和\",{\"1\":{\"98\":1}}],[\"是\",{\"1\":{\"95\":1,\"150\":1,\"171\":1}}],[\"是官方提供的脚手架工具\",{\"1\":{\"88\":1}}],[\"是否安装成功\",{\"1\":{\"82\":1}}],[\"是红绿块的绿\",{\"1\":{\"19\":1}}],[\"是红蓝块的蓝\",{\"1\":{\"18\":1}}],[\"是红蓝块的红\",{\"1\":{\"17\":1,\"19\":1,\"23\":1}}],[\"是橙蓝块的蓝\",{\"1\":{\"18\":1}}],[\"是橙蓝块的橙\",{\"1\":{\"17\":1,\"19\":1,\"23\":1}}],[\"是橙绿块的橙\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"是黄橙块的黄\",{\"1\":{\"19\":1}}],[\"是黄橙块的橙\",{\"1\":{\"17\":1,\"18\":1,\"23\":1}}],[\"是黄红块的红\",{\"1\":{\"18\":1,\"19\":1}}],[\"是黄绿块的绿\",{\"1\":{\"18\":1}}],[\"是黄绿块的黄\",{\"1\":{\"17\":1,\"19\":1,\"23\":1}}],[\"是黄蓝块的蓝\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"是白橙块的白\",{\"1\":{\"18\":1}}],[\"是白橙块的橙\",{\"1\":{\"17\":1,\"23\":1}}],[\"是白蓝块的白\",{\"1\":{\"17\":1,\"18\":1,\"23\":1}}],[\"是白绿块的白\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"是白红块的白\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"是桥式方法的第三步\",{\"1\":{\"0\":1}}],[\"位置结束\",{\"1\":{\"18\":1,\"19\":1}}],[\"位置已还原或已读码\",{\"1\":{\"18\":1,\"19\":1}}],[\"位置的\",{\"1\":{\"18\":3,\"19\":2}}],[\"位置是白橙块的橙\",{\"1\":{\"19\":1}}],[\"位置是红绿块的红\",{\"1\":{\"18\":1}}],[\"位置是黄红块的黄\",{\"1\":{\"17\":1,\"23\":1}}],[\"位置\",{\"1\":{\"17\":10,\"18\":13,\"19\":12,\"23\":10}}],[\"afterdelay\",{\"1\":{\"275\":1}}],[\"auto\",{\"1\":{\"275\":2}}],[\"authguard\",{\"1\":{\"163\":1,\"165\":4,\"166\":2,\"167\":3,\"181\":1}}],[\"auth\",{\"1\":{\"163\":2,\"165\":4,\"166\":2,\"167\":4,\"181\":3}}],[\"acg\",{\"1\":{\"265\":1}}],[\"acg助手\",{\"0\":{\"265\":1}}],[\"aclass\",{\"1\":{\"124\":4,\"125\":1}}],[\"alist\",{\"0\":{\"240\":1,\"248\":1,\"251\":1,\"295\":1},\"1\":{\"242\":3,\"243\":1,\"244\":3,\"245\":1,\"248\":3,\"249\":1,\"250\":2,\"251\":1,\"295\":2},\"2\":{\"253\":1}}],[\"align\",{\"1\":{\"50\":1}}],[\"addentry\",{\"1\":{\"191\":1}}],[\"admin\",{\"1\":{\"167\":3,\"242\":1,\"248\":1}}],[\"array<express\",{\"1\":{\"189\":1}}],[\"args\",{\"1\":{\"180\":2}}],[\"argumentmetadata\",{\"1\":{\"152\":2}}],[\"argumentshost\",{\"1\":{\"143\":2}}],[\"articlecontroller\",{\"1\":{\"165\":2,\"167\":1}}],[\"articleservice\",{\"1\":{\"165\":8,\"167\":4}}],[\"article\",{\"1\":{\"165\":10,\"167\":4}}],[\"android\",{\"0\":{\"246\":1}}],[\"and\",{\"1\":{\"242\":1,\"248\":1}}],[\"any\",{\"1\":{\"152\":1}}],[\"animation\",{\"1\":{\"50\":1}}],[\"animationdelay\",{\"1\":{\"50\":1}}],[\"animationduration\",{\"1\":{\"50\":1}}],[\"age\",{\"1\":{\"107\":4,\"158\":1}}],[\"apt\",{\"1\":{\"248\":2}}],[\"apb2periph\",{\"1\":{\"236\":1}}],[\"apb2periphclockcmd\",{\"1\":{\"236\":1}}],[\"apifox\",{\"0\":{\"298\":1},\"1\":{\"298\":1}}],[\"apiunauthorizedresponse\",{\"1\":{\"181\":1}}],[\"apibearerauth\",{\"1\":{\"181\":1}}],[\"api\",{\"1\":{\"105\":2,\"298\":2}}],[\"application\",{\"1\":{\"191\":1}}],[\"applydecorators\",{\"1\":{\"181\":2}}],[\"apply\",{\"1\":{\"136\":1,\"137\":3}}],[\"appmodule\",{\"1\":{\"98\":3,\"105\":2,\"119\":2,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"131\":3,\"136\":1,\"137\":3,\"138\":2,\"146\":2,\"157\":2,\"158\":2,\"166\":2,\"175\":1,\"176\":2,\"195\":2}}],[\"appcontroller\",{\"1\":{\"98\":6,\"112\":1,\"113\":1,\"119\":1,\"121\":1,\"122\":1,\"131\":6,\"136\":2,\"137\":6,\"175\":2}}],[\"appservice\",{\"1\":{\"98\":12,\"112\":4,\"113\":4,\"119\":10,\"121\":4,\"122\":4,\"131\":6,\"136\":2,\"137\":6,\"175\":2}}],[\"app\",{\"1\":{\"51\":1,\"98\":9,\"105\":4,\"112\":2,\"113\":2,\"119\":8,\"121\":4,\"122\":4,\"123\":1,\"124\":1,\"125\":1,\"131\":10,\"136\":4,\"137\":9,\"138\":6,\"146\":4,\"157\":4,\"158\":4,\"166\":4,\"175\":4,\"176\":4,\"195\":4}}],[\"await\",{\"1\":{\"43\":1,\"44\":1,\"45\":5,\"98\":2,\"105\":2,\"138\":2,\"146\":2,\"157\":2,\"158\":2,\"166\":2,\"176\":2,\"191\":1,\"195\":2}}],[\"as\",{\"1\":{\"167\":1}}],[\"asyncfn\",{\"1\":{\"45\":2}}],[\"asyncfn2\",{\"1\":{\"45\":2}}],[\"asyncfn1\",{\"1\":{\"45\":2}}],[\"async2\",{\"1\":{\"43\":1,\"44\":1}}],[\"async1\",{\"1\":{\"43\":1,\"44\":1,\"45\":2}}],[\"async\",{\"0\":{\"42\":1},\"1\":{\"43\":1,\"44\":1,\"45\":3,\"98\":1,\"105\":1,\"138\":1,\"146\":1,\"157\":1,\"158\":1,\"166\":1,\"176\":1,\"191\":1,\"195\":1}}],[\"as6\",{\"1\":{\"0\":1}}],[\"ab\",{\"1\":{\"18\":2,\"19\":3}}],[\"ai\",{\"1\":{\"17\":1,\"23\":1}}],[\"a\",{\"1\":{\"17\":3,\"19\":3,\"23\":3,\"122\":1,\"124\":3,\"152\":1}}],[\"geek\",{\"0\":{\"289\":1},\"1\":{\"289\":1}}],[\"gettime\",{\"1\":{\"186\":1}}],[\"gethandler\",{\"1\":{\"167\":1}}],[\"gethello\",{\"1\":{\"98\":3,\"112\":2,\"113\":2,\"119\":3,\"121\":2,\"122\":2}}],[\"get<string\",{\"1\":{\"167\":1}}],[\"getstatus\",{\"1\":{\"143\":1}}],[\"getrequest<request>\",{\"1\":{\"167\":1}}],[\"getrequest\",{\"1\":{\"143\":1}}],[\"getresponse\",{\"1\":{\"143\":1}}],[\"get\",{\"1\":{\"37\":1,\"98\":2,\"104\":6,\"107\":4,\"108\":4,\"111\":2,\"112\":2,\"113\":2,\"119\":2,\"121\":2,\"122\":2,\"131\":2,\"137\":1,\"145\":4,\"154\":2,\"155\":2,\"156\":2,\"167\":2,\"174\":2,\"190\":2,\"191\":2}}],[\"git\",{\"0\":{\"254\":1,\"293\":1},\"1\":{\"255\":1,\"256\":2,\"258\":2,\"259\":2,\"260\":2,\"261\":2,\"293\":1},\"2\":{\"263\":1}}],[\"github\",{\"0\":{\"260\":1,\"261\":1},\"1\":{\"31\":2,\"242\":1,\"260\":2,\"261\":2}}],[\"gpioa\",{\"1\":{\"236\":6}}],[\"gpio\",{\"0\":{\"235\":1},\"1\":{\"235\":2,\"236\":26}}],[\"gpu\",{\"1\":{\"97\":22}}],[\"guard\",{\"1\":{\"163\":2,\"165\":2,\"166\":1,\"167\":2}}],[\"guards\",{\"1\":{\"162\":1}}],[\"global\",{\"1\":{\"130\":1,\"256\":2,\"258\":2,\"259\":2,\"260\":2,\"261\":2,\"297\":1}}],[\"go开发环境搭建\",{\"0\":{\"80\":1}}],[\"go\",{\"0\":{\"80\":1,\"86\":1},\"1\":{\"81\":1,\"82\":2,\"83\":1,\"86\":1},\"2\":{\"85\":1}}],[\"grid\",{\"1\":{\"67\":2}}],[\"grow\",{\"1\":{\"50\":1}}],[\"green\",{\"1\":{\"33\":2,\"51\":1}}],[\"gradient\",{\"1\":{\"33\":2}}],[\"g\",{\"1\":{\"17\":3,\"18\":2,\"19\":2,\"23\":3,\"88\":2,\"136\":1,\"143\":1,\"152\":1,\"163\":1,\"172\":1,\"180\":1,\"185\":1}}],[\"gh\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"块的\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"raylink\",{\"0\":{\"296\":1},\"1\":{\"296\":1}}],[\"raw格式\",{\"1\":{\"216\":1}}],[\"rcc\",{\"1\":{\"236\":2}}],[\"rolesguard\",{\"1\":{\"181\":1}}],[\"roles\",{\"1\":{\"181\":3}}],[\"role\",{\"1\":{\"167\":3,\"180\":4,\"181\":1}}],[\"rxjs\",{\"1\":{\"163\":1,\"167\":1,\"172\":1}}],[\"run\",{\"1\":{\"90\":1,\"97\":4,\"244\":1}}],[\"releases\",{\"1\":{\"242\":1}}],[\"registerasync\",{\"1\":{\"186\":1}}],[\"register\",{\"1\":{\"186\":2}}],[\"registry\",{\"1\":{\"37\":1,\"38\":2,\"39\":2}}],[\"req\",{\"1\":{\"111\":7,\"136\":1,\"186\":1}}],[\"requestmethod\",{\"1\":{\"137\":4}}],[\"request\",{\"0\":{\"109\":1,\"110\":1,\"111\":1},\"1\":{\"136\":2,\"143\":2,\"167\":3}}],[\"remove\",{\"1\":{\"104\":2}}],[\"readonly\",{\"1\":{\"98\":1,\"104\":1,\"112\":1,\"113\":1,\"119\":1,\"121\":2,\"122\":2,\"131\":2,\"145\":2,\"154\":1,\"155\":1,\"156\":1,\"158\":1,\"165\":2,\"167\":1,\"174\":1}}],[\"render\",{\"1\":{\"97\":6}}],[\"rendertext\",{\"1\":{\"50\":3}}],[\"reflector\",{\"1\":{\"167\":5}}],[\"ref\",{\"1\":{\"50\":5,\"51\":6}}],[\"ref=\",{\"1\":{\"50\":2}}],[\"return\",{\"1\":{\"45\":2,\"98\":2,\"104\":5,\"107\":2,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"119\":2,\"121\":1,\"122\":1,\"124\":2,\"131\":2,\"145\":2,\"152\":1,\"154\":2,\"155\":2,\"156\":1,\"158\":1,\"163\":1,\"165\":2,\"167\":3,\"172\":1,\"174\":2,\"181\":1,\"186\":1,\"188\":1,\"189\":1}}],[\"reset\",{\"1\":{\"236\":1}}],[\"resetbits\",{\"1\":{\"236\":2}}],[\"response\",{\"1\":{\"136\":2,\"143\":2,\"190\":2,\"191\":2}}],[\"res2\",{\"1\":{\"45\":1}}],[\"res1\",{\"1\":{\"45\":1}}],[\"res\",{\"1\":{\"45\":2,\"136\":1,\"185\":1,\"190\":4,\"191\":6}}],[\"right\",{\"1\":{\"33\":2,\"67\":1}}],[\"rw\",{\"1\":{\"19\":1}}],[\"r\",{\"1\":{\"17\":1,\"18\":2,\"19\":5}}],[\"r2\",{\"1\":{\"17\":2,\"18\":3,\"19\":3}}],[\"blinking\",{\"1\":{\"280\":2}}],[\"bilibili\",{\"1\":{\"265\":2}}],[\"bit\",{\"1\":{\"236\":2}}],[\"behance\",{\"1\":{\"229\":1}}],[\"be\",{\"1\":{\"152\":1}}],[\"bandizip\",{\"0\":{\"290\":1},\"1\":{\"290\":1}}],[\"badrequestexception\",{\"1\":{\"152\":2}}],[\"backgroundcolor\",{\"1\":{\"51\":1}}],[\"background\",{\"1\":{\"33\":3}}],[\"bookmark\",{\"0\":{\"266\":1},\"1\":{\"266\":1}}],[\"boolean\",{\"1\":{\"163\":1,\"167\":1}}],[\"bootstrap\",{\"1\":{\"98\":2,\"105\":2,\"138\":2,\"146\":2,\"157\":2,\"158\":2,\"166\":2,\"176\":2,\"195\":2}}],[\"body\",{\"0\":{\"109\":1},\"1\":{\"104\":3,\"109\":7,\"154\":2,\"155\":2,\"158\":2,\"165\":4,\"174\":2}}],[\"box\",{\"1\":{\"72\":4}}],[\"bottom\",{\"1\":{\"67\":1}}],[\"bold\",{\"1\":{\"51\":1}}],[\"bd\",{\"1\":{\"19\":1}}],[\"bj\",{\"1\":{\"18\":1}}],[\"bf\",{\"1\":{\"18\":1}}],[\"b2\",{\"1\":{\"18\":1,\"19\":2}}],[\"b\",{\"1\":{\"17\":3,\"18\":5,\"19\":4,\"124\":1,\"125\":1}}],[\"family\",{\"1\":{\"277\":2}}],[\"false\",{\"1\":{\"50\":1,\"167\":1}}],[\"f值越大表示光圈较小\",{\"1\":{\"203\":1}}],[\"f值越小表示光圈开得更大\",{\"1\":{\"203\":1}}],[\"flat\",{\"1\":{\"136\":1}}],[\"flex\",{\"1\":{\"50\":4}}],[\"found\",{\"1\":{\"317\":1}}],[\"font\",{\"1\":{\"276\":2,\"277\":2}}],[\"fontweight\",{\"1\":{\"51\":1}}],[\"format\",{\"1\":{\"278\":4,\"283\":1}}],[\"forbiddenexception\",{\"1\":{\"145\":4}}],[\"forroutes\",{\"1\":{\"136\":1,\"137\":4}}],[\"forroot\",{\"1\":{\"131\":3}}],[\"file>\",{\"1\":{\"189\":1}}],[\"files\",{\"1\":{\"189\":5,\"275\":1}}],[\"filesinterceptor\",{\"1\":{\"189\":4}}],[\"fileinterceptor\",{\"1\":{\"188\":4}}],[\"file\",{\"1\":{\"186\":3,\"188\":5}}],[\"filename=$\",{\"1\":{\"191\":1}}],[\"filename\",{\"1\":{\"186\":3,\"190\":3,\"191\":4}}],[\"filter\",{\"1\":{\"143\":2,\"145\":2,\"146\":1}}],[\"filters\",{\"1\":{\"142\":1}}],[\"fill\",{\"1\":{\"33\":1}}],[\"findone\",{\"1\":{\"104\":2,\"145\":4,\"156\":2}}],[\"findall\",{\"1\":{\"104\":2,\"131\":2,\"154\":2,\"155\":2,\"167\":2,\"174\":2}}],[\"fit\",{\"1\":{\"63\":1}}],[\"from\",{\"1\":{\"50\":1,\"51\":2,\"98\":8,\"104\":4,\"105\":2,\"107\":2,\"108\":2,\"109\":3,\"110\":2,\"111\":1,\"112\":2,\"113\":2,\"119\":7,\"121\":5,\"122\":4,\"123\":1,\"124\":1,\"125\":2,\"131\":17,\"136\":6,\"137\":16,\"138\":3,\"143\":1,\"145\":6,\"146\":3,\"152\":1,\"154\":3,\"155\":3,\"156\":2,\"157\":3,\"158\":7,\"163\":2,\"165\":8,\"166\":3,\"167\":7,\"172\":2,\"174\":4,\"175\":5,\"176\":3,\"180\":1,\"181\":1,\"186\":6,\"188\":2,\"189\":2,\"190\":3,\"191\":4,\"195\":3}}],[\"function\",{\"1\":{\"43\":1,\"44\":1,\"45\":2,\"98\":1,\"105\":1,\"138\":1,\"146\":1,\"157\":1,\"158\":1,\"166\":1,\"176\":1,\"181\":1,\"195\":1}}],[\"fw\",{\"1\":{\"17\":1,\"23\":1}}],[\"f\",{\"1\":{\"17\":6,\"18\":5,\"19\":1,\"23\":3,\"247\":1}}],[\"f2\",{\"1\":{\"17\":2,\"18\":2,\"19\":2}}],[\"linked\",{\"1\":{\"281\":2}}],[\"line\",{\"1\":{\"72\":2}}],[\"linear\",{\"1\":{\"33\":2,\"50\":1}}],[\"list\",{\"1\":{\"255\":1}}],[\"listen\",{\"1\":{\"98\":1,\"105\":1,\"138\":1,\"146\":1,\"157\":1,\"158\":1,\"166\":1,\"176\":1,\"195\":1}}],[\"localhost\",{\"1\":{\"90\":1,\"196\":1,\"242\":1,\"248\":1}}],[\"loggingmiddleware\",{\"1\":{\"136\":3,\"137\":6,\"138\":2}}],[\"logging\",{\"1\":{\"136\":3,\"137\":3,\"138\":1}}],[\"log\",{\"1\":{\"43\":1,\"44\":1,\"45\":1,\"97\":4,\"136\":2,\"188\":1,\"189\":1}}],[\"left\",{\"1\":{\"67\":1}}],[\"let\",{\"1\":{\"45\":3}}],[\"l\",{\"1\":{\"19\":1}}],[\"l2\",{\"1\":{\"17\":4,\"18\":1,\"19\":1}}],[\"l6\",{\"1\":{\"0\":1}}],[\"正常情况\",{\"0\":{\"17\":1,\"23\":1}}],[\"第一个参数表示错误\",{\"1\":{\"186\":1}}],[\"第一个参数\",{\"1\":{\"167\":1}}],[\"第一个面称为0位置\",{\"1\":{\"13\":1}}],[\"第三个面称为2位置\",{\"1\":{\"13\":1}}],[\"第二个参数\",{\"1\":{\"167\":1}}],[\"第二个面称为1位置\",{\"1\":{\"13\":1}}],[\"第二个字反映后一个联想词的效果\",{\"1\":{\"5\":1}}],[\"另一个面称为1位置\",{\"1\":{\"13\":1}}],[\"我的电脑必装软件合集\",{\"0\":{\"286\":1}}],[\"我的浏览器插件合集\",{\"0\":{\"264\":1}}],[\"我的联想词\",{\"0\":{\"6\":1}}],[\"我是自定义的异常\",{\"1\":{\"143\":1}}],[\"我是传递的参数\",{\"1\":{\"131\":1}}],[\"我是一段很长的文字\",{\"1\":{\"51\":1}}],[\"我来自山东济南\",{\"1\":{\"27\":1}}],[\"我们点击开发者工具左上角的按钮\",{\"1\":{\"304\":1}}],[\"我们通过给小灯一个高电平\",{\"1\":{\"236\":1}}],[\"我们通过类型注解来声明依赖\",{\"1\":{\"98\":1}}],[\"我们应该使用快门速度较短的快门\",{\"1\":{\"204\":1}}],[\"我们也可以在全局中使用拦截器\",{\"1\":{\"176\":1}}],[\"我们也可以在模块中定义拦截器\",{\"1\":{\"175\":1}}],[\"我们还可以将管道绑定到全局\",{\"1\":{\"157\":1}}],[\"我们还可以将管道绑定到方法参数上\",{\"1\":{\"156\":1}}],[\"我们还可以通过在路由上添加\",{\"1\":{\"155\":1}}],[\"我们还可以创建自定义管道\",{\"1\":{\"152\":1}}],[\"我们来看一下如何使用动态模块\",{\"1\":{\"131\":1}}],[\"我们需要安装\",{\"1\":{\"185\":1}}],[\"我们需要在\",{\"1\":{\"157\":1}}],[\"我们需要动态地创建提供者\",{\"1\":{\"124\":1}}],[\"我们需要修改\",{\"1\":{\"97\":1}}],[\"我们使用以下命令创建一个拦截器\",{\"1\":{\"172\":1}}],[\"我们使用以下命令来创建一个守卫\",{\"1\":{\"163\":1}}],[\"我们使用反射器\",{\"1\":{\"167\":1}}],[\"我们使用命令来创建一个异常过滤器\",{\"1\":{\"143\":1}}],[\"我们使用动态模块实现了之前静态模块的效果\",{\"1\":{\"131\":1}}],[\"我们使用\",{\"1\":{\"123\":1,\"185\":1}}],[\"我们可能需要动态地决定使用哪个类来提供服务\",{\"1\":{\"123\":1}}],[\"我们可以通过后期来减少高感光度带来的噪点\",{\"1\":{\"205\":1}}],[\"我们可以通过在控制器类上添加\",{\"1\":{\"154\":1}}],[\"我们可以通过在模块入口处传递参数\",{\"1\":{\"131\":1}}],[\"我们可以将多个装饰器聚合\",{\"1\":{\"181\":1}}],[\"我们可以将拦截器直接添加到控制器中\",{\"1\":{\"174\":1}}],[\"我们可以直接导入使用\",{\"1\":{\"151\":1}}],[\"我们可以对控制器接收的数据进行转换和验证\",{\"1\":{\"150\":1}}],[\"我们可以在\",{\"1\":{\"131\":1}}],[\"我们可以理解为\",{\"1\":{\"117\":1}}],[\"我们可以根据需要传递不同的实现\",{\"1\":{\"97\":1}}],[\"我们可以使用多种方式来使用拦截器\",{\"1\":{\"173\":1}}],[\"我们可以使用多种方式在\",{\"1\":{\"144\":1}}],[\"我们可以使用工厂函数实现\",{\"1\":{\"124\":1}}],[\"我们可以使用\",{\"1\":{\"123\":1}}],[\"我们可以使用粘性定位来实现\",{\"1\":{\"57\":1}}],[\"我们可以使用以下方式实现\",{\"1\":{\"33\":1}}],[\"我们已经使用了类名作为我们的提供者标记\",{\"1\":{\"122\":1}}],[\"我们启动\",{\"1\":{\"98\":1}}],[\"我们创建一个\",{\"1\":{\"185\":1}}],[\"我们创建一个新的\",{\"1\":{\"131\":1}}],[\"我们创建一个控制器类\",{\"1\":{\"98\":1}}],[\"我们创建一个服务类\",{\"1\":{\"98\":1}}],[\"我们定义一个服务\",{\"1\":{\"98\":1}}],[\"我们传递\",{\"1\":{\"97\":1}}],[\"我们封装一个工具函数\",{\"1\":{\"45\":1}}],[\"我们发现白蓝块需要翻色\",{\"1\":{\"19\":1}}],[\"我们借\",{\"1\":{\"18\":2,\"19\":1}}],[\"我们首选的借位是借\",{\"1\":{\"18\":1,\"19\":1}}],[\"我们不需要读出来\",{\"1\":{\"17\":1,\"23\":1}}],[\"我们将角块上三个面中按编码顺序\",{\"1\":{\"13\":1}}],[\"我们将棱块两个面上颜色中相对高级的面称为0位置\",{\"1\":{\"13\":1}}],[\"色相\",{\"0\":{\"13\":1}}],[\"ublock\",{\"0\":{\"268\":1},\"1\":{\"268\":1}}],[\"uninstaller\",{\"1\":{\"289\":1}}],[\"unset\",{\"1\":{\"259\":2,\"261\":2}}],[\"unauthorized\",{\"1\":{\"181\":1}}],[\"upgrade\",{\"1\":{\"251\":1}}],[\"uploadedfiles\",{\"1\":{\"189\":3}}],[\"uploadedfile\",{\"1\":{\"188\":3}}],[\"uploadmodule\",{\"1\":{\"186\":1}}],[\"uploads\",{\"1\":{\"186\":1,\"190\":1,\"191\":1}}],[\"uploadservice\",{\"1\":{\"186\":2}}],[\"uploadcontroller\",{\"1\":{\"186\":2,\"188\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"upload\",{\"1\":{\"185\":2,\"186\":4,\"188\":5,\"189\":5,\"190\":3,\"191\":3}}],[\"updatetestdto\",{\"1\":{\"104\":4}}],[\"update\",{\"1\":{\"88\":1,\"104\":3,\"248\":1}}],[\"usestaticassets\",{\"1\":{\"195\":2}}],[\"useinterceptors\",{\"1\":{\"174\":2,\"188\":3,\"189\":3}}],[\"useguards\",{\"1\":{\"165\":5,\"167\":2,\"181\":1}}],[\"useglobalinterceptors\",{\"1\":{\"176\":1}}],[\"useglobalguards\",{\"1\":{\"166\":1}}],[\"useglobalpipes\",{\"1\":{\"157\":1,\"158\":1}}],[\"useglobalfilters\",{\"1\":{\"146\":1}}],[\"usepipes\",{\"1\":{\"154\":3,\"155\":3,\"158\":2}}],[\"usefilters\",{\"1\":{\"145\":5}}],[\"usefactory\",{\"0\":{\"124\":1},\"1\":{\"124\":2}}],[\"use\",{\"1\":{\"136\":1,\"138\":2}}],[\"useexisting\",{\"0\":{\"125\":1},\"1\":{\"125\":3}}],[\"usermodule\",{\"1\":{\"175\":2}}],[\"usercontroller\",{\"1\":{\"137\":5,\"154\":1,\"155\":1,\"156\":1,\"158\":1,\"174\":1}}],[\"user\",{\"1\":{\"121\":2,\"125\":1,\"137\":12,\"154\":5,\"155\":5,\"156\":4,\"158\":7,\"174\":5,\"175\":2,\"242\":1,\"248\":1,\"256\":2}}],[\"userservice\",{\"1\":{\"121\":5,\"125\":2,\"137\":4,\"154\":5,\"155\":5,\"156\":4,\"158\":4,\"174\":5}}],[\"usevalue\",{\"0\":{\"121\":1},\"1\":{\"121\":3,\"122\":1,\"131\":1}}],[\"useclass\",{\"0\":{\"123\":1},\"1\":{\"119\":1,\"123\":2,\"175\":1}}],[\"u\",{\"1\":{\"17\":1,\"18\":3}}],[\"u2\",{\"1\":{\"17\":3,\"18\":1,\"19\":2}}],[\"ufr\",{\"1\":{\"12\":1}}],[\"url\",{\"0\":{\"108\":2},\"1\":{\"104\":1,\"108\":1,\"143\":1,\"190\":2,\"191\":2}}],[\"ur\",{\"1\":{\"12\":1,\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"u6\",{\"1\":{\"0\":1}}],[\"棱块\",{\"1\":{\"12\":1,\"13\":1}}],[\"缓冲块的编码是不需要读出来的\",{\"1\":{\"18\":1,\"19\":1}}],[\"缓冲块的编码不需要读出来\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"缓冲\",{\"0\":{\"12\":1}}],[\"缓冲与色相\",{\"0\":{\"9\":1}}],[\"彳亍法角块读码01\",{\"1\":{\"23\":1}}],[\"彳亍法角块读码\",{\"0\":{\"22\":1}}],[\"彳亍法棱块读码03\",{\"1\":{\"19\":1}}],[\"彳亍法棱块读码02\",{\"1\":{\"18\":1}}],[\"彳亍法棱块读码01\",{\"1\":{\"17\":1}}],[\"彳亍法棱块读码\",{\"0\":{\"16\":1}}],[\"彳亍法\",{\"2\":{\"15\":1,\"21\":1,\"25\":1}}],[\"彳亍法编码图02\",{\"1\":{\"11\":1}}],[\"彳亍法编码图01\",{\"1\":{\"11\":1}}],[\"彳亍法的坐标系\",{\"0\":{\"9\":1}}],[\"坐标系\",{\"0\":{\"10\":1}}],[\"三阶魔方盲拧相关公式及技巧\",{\"1\":{\"26\":1}}],[\"三阶魔方盲拧\",{\"0\":{\"26\":1},\"2\":{\"8\":1,\"15\":1,\"21\":1,\"25\":1}}],[\"三阶魔方速拧相关公式及技巧\",{\"1\":{\"3\":1}}],[\"三阶魔方速拧\",{\"0\":{\"3\":1},\"2\":{\"2\":1}}],[\"盲拧记忆\",{\"2\":{\"8\":1}}],[\"这还跟传感器的面积有关\",{\"1\":{\"201\":1}}],[\"这里的数字指的就是焦距\",{\"1\":{\"212\":1}}],[\"这里可以根据具体业务逻辑进行判断\",{\"1\":{\"163\":1}}],[\"这里说明已经回到了缓冲块\",{\"1\":{\"17\":1,\"23\":1}}],[\"这是因为过于密集的像素可能会互相干扰\",{\"1\":{\"201\":1}}],[\"这是一个流行的\",{\"1\":{\"158\":1}}],[\"这是我们的\",{\"1\":{\"97\":1}}],[\"这些装饰器来自\",{\"1\":{\"158\":1}}],[\"这些管道已经预先配置好了\",{\"1\":{\"151\":1}}],[\"这将创建两种访问同一提供者的方法\",{\"1\":{\"125\":1}}],[\"这两个列表应该是相关的\",{\"1\":{\"124\":1}}],[\"这样所有的控制器都会自动应用该管道\",{\"1\":{\"157\":1}}],[\"这样我们就可以在导入一个模块的时候\",{\"1\":{\"131\":1}}],[\"这样\",{\"1\":{\"97\":1,\"98\":1,\"118\":1}}],[\"这种方式的缺点是\",{\"1\":{\"97\":1}}],[\"这显然是不合理的\",{\"1\":{\"45\":1}}],[\"这个动词的第一个字体现前一个联想词的特征\",{\"1\":{\"5\":1}}],[\"这一步的目标是在不考虑\",{\"1\":{\"0\":1}}],[\"桥式\",{\"2\":{\"2\":1}}],[\"魔方\",{\"1\":{\"28\":1},\"2\":{\"1\":1,\"7\":1,\"14\":1,\"20\":1,\"24\":1}}],[\"条公式\",{\"1\":{\"0\":1}}],[\"共有\",{\"1\":{\"0\":1}}],[\"层的情况下完成顶层的角块\",{\"1\":{\"0\":1}}],[\"mkdir\",{\"1\":{\"250\":1}}],[\"m43画幅\",{\"1\":{\"211\":1}}],[\"multermodule\",{\"1\":{\"186\":2}}],[\"multer\",{\"0\":{\"186\":1,\"187\":1},\"1\":{\"185\":3,\"186\":1,\"187\":1,\"189\":1}}],[\"must\",{\"1\":{\"152\":1}}],[\"min\",{\"1\":{\"158\":2}}],[\"middlewareconsumer\",{\"1\":{\"136\":2,\"137\":6}}],[\"middleware\",{\"1\":{\"135\":1,\"136\":3,\"137\":3,\"138\":1}}],[\"myinterceptorinterceptor\",{\"1\":{\"172\":1,\"174\":2,\"175\":2,\"176\":2}}],[\"mypipespipe\",{\"1\":{\"152\":1}}],[\"my\",{\"1\":{\"152\":2,\"172\":2,\"174\":2,\"175\":2,\"176\":2}}],[\"metadata\",{\"1\":{\"152\":3}}],[\"method\",{\"1\":{\"124\":1,\"137\":2}}],[\"message\",{\"1\":{\"143\":1}}],[\"manager\",{\"0\":{\"269\":1}}],[\"make\",{\"1\":{\"124\":3}}],[\"main\",{\"1\":{\"98\":1,\"105\":2,\"146\":1,\"157\":2,\"158\":2,\"166\":2,\"176\":2,\"195\":2,\"236\":2}}],[\"monospace\",{\"1\":{\"277\":1}}],[\"mono\",{\"1\":{\"277\":1}}],[\"mode\",{\"1\":{\"236\":2}}],[\"modules\",{\"1\":{\"129\":1}}],[\"module\",{\"1\":{\"98\":4,\"105\":1,\"119\":6,\"121\":3,\"122\":3,\"123\":3,\"124\":3,\"125\":3,\"129\":2,\"131\":17,\"136\":4,\"137\":9,\"138\":3,\"146\":1,\"157\":1,\"158\":1,\"166\":1,\"175\":4,\"176\":1,\"186\":3,\"195\":1}}],[\"move\",{\"1\":{\"50\":2}}],[\"mo\",{\"1\":{\"18\":1}}],[\"mn\",{\"1\":{\"18\":1}}],[\"m\",{\"1\":{\"0\":1,\"18\":5}}],[\"公式集\",{\"2\":{\"2\":1}}],[\"公式\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
