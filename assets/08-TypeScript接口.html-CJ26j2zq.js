import{_ as s,c as e,d as t,o as a}from"./app-D2yBtrZc.js";const n={};function p(l,i){return a(),e("div",null,i[0]||(i[0]=[t(`<h1 id="typescript-接口" tabindex="-1"><a class="header-anchor" href="#typescript-接口"><span>TypeScript 接口</span></a></h1><h2 id="接口声明" tabindex="-1"><a class="header-anchor" href="#接口声明"><span>接口声明</span></a></h2><p>接口是对象的模板，可以看作是一种类型约定。使用了某个模板的对象，就拥有了指定的类型结构。</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  firstName</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  lastName</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>任何实现这个接口的对象，都必须部署这三个属性，并且必须符合规定的类型。</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> p</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  firstName</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;John&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  lastName</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Smith&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const h=s(n,[["render",p],["__file","08-TypeScript接口.html.vue"]]),c=JSON.parse(`{"path":"/TypeScriptLearningNote/08-TypeScript%E6%8E%A5%E5%8F%A3.html","title":"TypeScript 接口","lang":"zh-CN","frontmatter":{"cover":"https://t.alcy.cc/fj?t=1731483000000","order":8,"date":"2024-11-13 15:30","category":"软件开发","tag":"TypeScript","excerpt":false,"description":"TypeScript 接口 接口声明 接口是对象的模板，可以看作是一种类型约定。使用了某个模板的对象，就拥有了指定的类型结构。 任何实现这个接口的对象，都必须部署这三个属性，并且必须符合规定的类型。","head":[["meta",{"property":"og:url","content":"https://blog.azhf8.top/TypeScriptLearningNote/08-TypeScript%E6%8E%A5%E5%8F%A3.html"}],["meta",{"property":"og:site_name","content":"Happier's Blog"}],["meta",{"property":"og:title","content":"TypeScript 接口"}],["meta",{"property":"og:description","content":"TypeScript 接口 接口声明 接口是对象的模板，可以看作是一种类型约定。使用了某个模板的对象，就拥有了指定的类型结构。 任何实现这个接口的对象，都必须部署这三个属性，并且必须符合规定的类型。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://t.alcy.cc/fj?t=1731483000000"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-13T07:59:47.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://t.alcy.cc/fj?t=1731483000000"}],["meta",{"name":"twitter:image:alt","content":"TypeScript 接口"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:published_time","content":"2024-11-13T15:30:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-13T07:59:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript 接口\\",\\"image\\":[\\"https://t.alcy.cc/fj?t=1731483000000\\"],\\"datePublished\\":\\"2024-11-13T15:30:00.000Z\\",\\"dateModified\\":\\"2024-11-13T07:59:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Happier\\",\\"url\\":\\"/AboutMe/\\"}]}"]]},"headers":[{"level":2,"title":"接口声明","slug":"接口声明","link":"#接口声明","children":[]}],"git":{"createdTime":1731482751000,"updatedTime":1731484787000,"contributors":[{"name":"赵鸿飞","email":"zhaohongfei@vasoyn.com","commits":2}]},"readingTime":{"minutes":0.4,"words":120},"filePathRelative":"TypeScriptLearningNote/08-TypeScript接口.md","localizedDate":"2024年11月13日","excerpt":"","autoDesc":true}`);export{h as comp,c as data};
