import{_ as e,c as i,d as a,o as s}from"./app-p9-QL050.js";const p={};function r(n,t){return s(),i("div",null,t[0]||(t[0]=[a(`<h1 id="typescript-基本用法" tabindex="-1"><a class="header-anchor" href="#typescript-基本用法"><span>TypeScript 基本用法</span></a></h1><h2 id="类型注解" tabindex="-1"><a class="header-anchor" href="#类型注解"><span>类型注解</span></a></h2><p>TypeScript 是 JavaScript 的超集，它为 JavaScript 添加了类型注解的功能。</p><p>语法：<code>: 类型</code>。</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> num</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> str</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;hello&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类型推断" tabindex="-1"><a class="header-anchor" href="#类型推断"><span>类型推断</span></a></h2><p>TypeScript 会根据变量的值自动推断出它的类型。</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> num</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> str</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;hello&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="值与类型" tabindex="-1"><a class="header-anchor" href="#值与类型"><span>值与类型</span></a></h2><p>值是运行时的具体数据，类型是值的集合。</p><p>TypeScript 代码只涉及类型，不涉及值。所有跟 “值” 相关的处理，都由 JavaScript 完成。</p>`,11)]))}const c=e(p,[["render",r],["__file","02-TypeScript基本用法.html.vue"]]),h=JSON.parse(`{"path":"/TypeScriptStudyNotes/02-TypeScript%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95.html","title":"TypeScript 基本用法","lang":"zh-CN","frontmatter":{"cover":"https://t.alcy.cc/fj?t=1730862000000","order":2,"date":"2024-11-06 11:00","category":"软件开发","tag":"TypeScript","excerpt":false,"description":"TypeScript 基本用法 类型注解 TypeScript 是 JavaScript 的超集，它为 JavaScript 添加了类型注解的功能。 语法：: 类型。 类型推断 TypeScript 会根据变量的值自动推断出它的类型。 值与类型 值是运行时的具体数据，类型是值的集合。 TypeScript 代码只涉及类型，不涉及值。所有跟 “值” 相关...","head":[["meta",{"property":"og:url","content":"https://blog.happierx.top/TypeScriptStudyNotes/02-TypeScript%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Happier's Blog"}],["meta",{"property":"og:title","content":"TypeScript 基本用法"}],["meta",{"property":"og:description","content":"TypeScript 基本用法 类型注解 TypeScript 是 JavaScript 的超集，它为 JavaScript 添加了类型注解的功能。 语法：: 类型。 类型推断 TypeScript 会根据变量的值自动推断出它的类型。 值与类型 值是运行时的具体数据，类型是值的集合。 TypeScript 代码只涉及类型，不涉及值。所有跟 “值” 相关..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://t.alcy.cc/fj?t=1730862000000"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T03:18:02.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://t.alcy.cc/fj?t=1730862000000"}],["meta",{"name":"twitter:image:alt","content":"TypeScript 基本用法"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:published_time","content":"2024-11-06T11:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T03:18:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript 基本用法\\",\\"image\\":[\\"https://t.alcy.cc/fj?t=1730862000000\\"],\\"datePublished\\":\\"2024-11-06T11:00:00.000Z\\",\\"dateModified\\":\\"2024-12-02T03:18:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Happier\\",\\"url\\":\\"/AboutMe/\\"}]}"]]},"headers":[{"level":2,"title":"类型注解","slug":"类型注解","link":"#类型注解","children":[]},{"level":2,"title":"类型推断","slug":"类型推断","link":"#类型推断","children":[]},{"level":2,"title":"值与类型","slug":"值与类型","link":"#值与类型","children":[]}],"git":{"createdTime":1730946562000,"updatedTime":1733109482000,"contributors":[{"name":"赵鸿飞","email":"zhaohongfei@vasoyn.com","commits":1}]},"readingTime":{"minutes":0.46,"words":138},"filePathRelative":"TypeScriptStudyNotes/02-TypeScript基本用法.md","localizedDate":"2024年11月6日","excerpt":"","autoDesc":true}`);export{c as comp,h as data};
