const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":373,\"nextId\":373,\"documentIds\":{\"0\":\"1\",\"1\":\"1@0\",\"2\":\"1@1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"3#如何更好地使用联想词记忆\",\"6\":\"3#我的联想词\",\"7\":\"3@0\",\"8\":\"3@1\",\"9\":\"4\",\"10\":\"4#坐标系\",\"11\":\"4#编码\",\"12\":\"4#缓冲\",\"13\":\"4#色相\",\"14\":\"4@0\",\"15\":\"4@1\",\"16\":\"5\",\"17\":\"5#正常情况\",\"18\":\"5#存在小循环\",\"19\":\"5#存在翻色\",\"20\":\"5@0\",\"21\":\"5@1\",\"22\":\"6\",\"23\":\"6#正常情况\",\"24\":\"6@0\",\"25\":\"6@1\",\"26\":\"7\",\"27\":\"8\",\"28\":\"8#爱好\",\"29\":\"8#最近在读\",\"30\":\"8#最近在看\",\"31\":\"8#联系方式\",\"32\":\"9\",\"33\":\"10\",\"34\":\"10@0\",\"35\":\"10@1\",\"36\":\"11\",\"37\":\"11#查看当前镜像源\",\"38\":\"11#更换淘宝镜像源\",\"39\":\"11#切换回官方镜像源\",\"40\":\"11@0\",\"41\":\"11@1\",\"42\":\"12\",\"43\":\"12#使用-try-catch-捕获异常\",\"44\":\"12#使用-promise-catch-捕获异常\",\"45\":\"12#优化异常捕获\",\"46\":\"12@0\",\"47\":\"12@1\",\"48\":\"13\",\"49\":\"13#vue-实现文字跑马灯效果\",\"50\":\"13#组件源码\",\"51\":\"13#组件的使用\",\"52\":\"13#效果展示\",\"53\":\"13@0\",\"54\":\"13@1\",\"55\":\"14\",\"56\":\"14#效果描述\",\"57\":\"14#实现方法\",\"58\":\"14#效果展示\",\"59\":\"14@0\",\"60\":\"14@1\",\"61\":\"15\",\"62\":\"15#效果描述\",\"63\":\"15#实现方法\",\"64\":\"15#效果展示\",\"65\":\"15@0\",\"66\":\"15@1\",\"67\":\"16\",\"68\":\"16@0\",\"69\":\"16@1\",\"70\":\"17\",\"71\":\"17#单行文本溢出显示省略号\",\"72\":\"17#多行文本溢出显示省略号\",\"73\":\"17@0\",\"74\":\"17@1\",\"75\":\"18\",\"76\":\"18@0\",\"77\":\"18@1\",\"78\":\"19\",\"79\":\"20\",\"80\":\"21\",\"81\":\"21#下载并安装go语言环境\",\"82\":\"21#验证安装\",\"83\":\"21#配置-goproxy\",\"84\":\"21#安装代码编辑器\",\"85\":\"21@0\",\"86\":\"21@1\",\"87\":\"22\",\"88\":\"22#hello-world\",\"89\":\"22#go-语言的基础组成\",\"90\":\"22#go-语言命名规范\",\"91\":\"22#go-程序的执行\",\"92\":\"22@0\",\"93\":\"22@1\",\"94\":\"23\",\"95\":\"23#go-标记\",\"96\":\"23#行分隔符\",\"97\":\"23#注释\",\"98\":\"23#标识符\",\"99\":\"23#字符串连接\",\"100\":\"23#关键字\",\"101\":\"23#空格\",\"102\":\"23@0\",\"103\":\"23@1\",\"104\":\"24\",\"105\":\"24#数字类型\",\"106\":\"24#浮点型\",\"107\":\"24#其他数字类型\",\"108\":\"24@0\",\"109\":\"24@1\",\"110\":\"25\",\"111\":\"25#变量声明\",\"112\":\"25#局部变量和全局变量\",\"113\":\"25#值类型和引用类型\",\"114\":\"25@0\",\"115\":\"25@1\",\"116\":\"26\",\"117\":\"26#常量声明\",\"118\":\"26#iota\",\"119\":\"26@0\",\"120\":\"26@1\",\"121\":\"27\",\"122\":\"27#算数运算符\",\"123\":\"27#关系运算符\",\"124\":\"27#逻辑运算符\",\"125\":\"27#位运算符\",\"126\":\"27#赋值运算符\",\"127\":\"27#其他运算符\",\"128\":\"27@0\",\"129\":\"27@1\",\"130\":\"28\",\"131\":\"28#if-语句\",\"132\":\"28#if-else-语句\",\"133\":\"28#if-语句嵌套\",\"134\":\"28#switch-语句\",\"135\":\"28#select-语句\",\"136\":\"28@0\",\"137\":\"28@1\",\"138\":\"29\",\"139\":\"29@0\",\"140\":\"29@1\",\"141\":\"30\",\"142\":\"31\",\"143\":\"31#安装-nest-cli\",\"144\":\"31#创建-nest-项目\",\"145\":\"31#运行项目\",\"146\":\"31@0\",\"147\":\"31@1\",\"148\":\"32\",\"149\":\"32#控制反转-ioc\",\"150\":\"32#依赖注入-di\",\"151\":\"32#两者关系\",\"152\":\"32#依赖注入的实现\",\"153\":\"32#nest-中依赖注入的实现\",\"154\":\"32@0\",\"155\":\"32@1\",\"156\":\"33\",\"157\":\"33#什么是控制器\",\"158\":\"33#路由\",\"159\":\"33#基本使用\",\"160\":\"33#设置路由前缀-prefix\",\"161\":\"33#处理请求参数\",\"162\":\"33#查询字符串-query-string\",\"163\":\"33#url-参数-url-params\",\"164\":\"33#请求体-request-body\",\"165\":\"33#请求头-request-header\",\"166\":\"33#请求对象-request-object\",\"167\":\"33#状态码\",\"168\":\"33#响应头\",\"169\":\"33@0\",\"170\":\"33@1\",\"171\":\"34\",\"172\":\"34#什么是提供者\",\"173\":\"34#定义、注册和使用提供者\",\"174\":\"34#标准提供者\",\"175\":\"34#自定义提供者\",\"176\":\"34#值提供者-usevalue\",\"177\":\"34#非类提供者\",\"178\":\"34#类提供者-useclass\",\"179\":\"34#工厂提供者-usefactory\",\"180\":\"34#别名提供者-useexisting\",\"181\":\"34@0\",\"182\":\"34@1\",\"183\":\"35\",\"184\":\"35#什么是模块\",\"185\":\"35#全局模块\",\"186\":\"35#动态模块\",\"187\":\"35@0\",\"188\":\"35@1\",\"189\":\"36\",\"190\":\"36#什么是中间件\",\"191\":\"36#普通中间件\",\"192\":\"36#局部中间件\",\"193\":\"36#全局中间件\",\"194\":\"36@0\",\"195\":\"36@1\",\"196\":\"37\",\"197\":\"37#什么是异常过滤器\",\"198\":\"37#创建异常过滤器\",\"199\":\"37#使用异常过滤器\",\"200\":\"37#局部使用\",\"201\":\"37#全局使用\",\"202\":\"37@0\",\"203\":\"37@1\",\"204\":\"38\",\"205\":\"38#什么是管道\",\"206\":\"38#内置管道\",\"207\":\"38#自定义管道\",\"208\":\"38#管道的绑定方式\",\"209\":\"38#控制器绑定\",\"210\":\"38#路由绑定\",\"211\":\"38#方法参数绑定\",\"212\":\"38#全局绑定\",\"213\":\"38#类验证器\",\"214\":\"38@0\",\"215\":\"38@1\",\"216\":\"39\",\"217\":\"39#什么是守卫\",\"218\":\"39#创建守卫\",\"219\":\"39#应用守卫\",\"220\":\"39#应用于控制器或单个路由\",\"221\":\"39#应用于全局\",\"222\":\"39#反射器实现角色控制守卫\",\"223\":\"39@0\",\"224\":\"39@1\",\"225\":\"40\",\"226\":\"40#什么是拦截器\",\"227\":\"40#创建拦截器\",\"228\":\"40#使用拦截器\",\"229\":\"40#控制器中使用\",\"230\":\"40#模块中定义\",\"231\":\"40#全局使用\",\"232\":\"40@0\",\"233\":\"40@1\",\"234\":\"41\",\"235\":\"41#创建自定义装饰器\",\"236\":\"41#装饰器聚合\",\"237\":\"41@0\",\"238\":\"41@1\",\"239\":\"42\",\"240\":\"42#安装需要的库\",\"241\":\"42#在模块中引入-multer\",\"242\":\"42#在控制器中使用-multer\",\"243\":\"42#单文件上传\",\"244\":\"42#多文件上传\",\"245\":\"42#文件直接下载\",\"246\":\"42#使用文件流下载\",\"247\":\"42@0\",\"248\":\"42@1\",\"249\":\"43\",\"250\":\"43#配置\",\"251\":\"43#访问\",\"252\":\"43@0\",\"253\":\"43@1\",\"254\":\"44\",\"255\":\"45\",\"256\":\"45#相机的成像原理\",\"257\":\"45#曝光三要素\",\"258\":\"45#光圈\",\"259\":\"45#快门\",\"260\":\"45#感光度\",\"261\":\"45#安全快门\",\"262\":\"45@0\",\"263\":\"45@1\",\"264\":\"46\",\"265\":\"46#相机分类\",\"266\":\"46#画幅分类\",\"267\":\"46#焦距和焦段\",\"268\":\"46@0\",\"269\":\"46@1\",\"270\":\"47\",\"271\":\"47#风光摄影\",\"272\":\"47#扫街-活动-摄影\",\"273\":\"47#人像摄影\",\"274\":\"47#参数设定整体思路\",\"275\":\"47#关于光比\",\"276\":\"47@0\",\"277\":\"47@1\",\"278\":\"48\",\"279\":\"48#构图的底层逻辑\",\"280\":\"48#如何学习\",\"281\":\"48@0\",\"282\":\"48@1\",\"283\":\"49\",\"284\":\"49#搜集好照片\",\"285\":\"49#学会分析\",\"286\":\"49@0\",\"287\":\"49@1\",\"288\":\"50\",\"289\":\"51\",\"290\":\"51#如何使用-gpio\",\"291\":\"51#点亮一颗小灯\",\"292\":\"51@0\",\"293\":\"51@1\",\"294\":\"52\",\"295\":\"53\",\"296\":\"53#windows-平台\",\"297\":\"53#下载安装包并安装\",\"298\":\"53#添加存储\",\"299\":\"53#设置开机自启\",\"300\":\"53#软件更新\",\"301\":\"53#android-平台\",\"302\":\"53#安装-termux\",\"303\":\"53#安装-alist\",\"304\":\"53#添加存储-1\",\"305\":\"53#设置一键启动脚本\",\"306\":\"53#更新-alist\",\"307\":\"53@0\",\"308\":\"53@1\",\"309\":\"54\",\"310\":\"54#查看配置信息\",\"311\":\"54#配置用户信息\",\"312\":\"54#配置代理\",\"313\":\"54#设置全局代理\",\"314\":\"54#取消设置全局代理\",\"315\":\"54#设置对-github-代理\",\"316\":\"54#取消设置对-github-代理\",\"317\":\"54@0\",\"318\":\"54@1\",\"319\":\"55\",\"320\":\"55#acg助手-专为bilibili定制的综合辅助扩展\",\"321\":\"55#bookmark-cleaner-一键清理失效书签\",\"322\":\"55#proxy-switchyomega\",\"323\":\"55#ublock-origin\",\"324\":\"55#扩展管理器-extension-manager\",\"325\":\"55#篡改猴\",\"326\":\"55#青柠起始页\",\"327\":\"55@0\",\"328\":\"55@1\",\"329\":\"56\",\"330\":\"56#自动保存\",\"331\":\"56#设置字体大小\",\"332\":\"56#设置字体系列\",\"333\":\"56#设置自动格式化\",\"334\":\"56#设置对话框样式\",\"335\":\"56#设置光标动画样式\",\"336\":\"56#设置-html-标签关联编辑\",\"337\":\"56#设置-javascript-语义检查\",\"338\":\"56#设置-javascript、typescript-格式化时添加分号\",\"339\":\"56@0\",\"340\":\"56@1\",\"341\":\"57\",\"342\":\"57#微信\",\"343\":\"57#qq\",\"344\":\"57#geek\",\"345\":\"57#bandizip\",\"346\":\"57#clash-verge\",\"347\":\"57#pixpin\",\"348\":\"57#git\",\"349\":\"57#vscode\",\"350\":\"57#alist\",\"351\":\"57#raylink\",\"352\":\"57#potplayer\",\"353\":\"57#apifox\",\"354\":\"57@0\",\"355\":\"57@1\",\"356\":\"58\",\"357\":\"58#登录抖音网页版\",\"358\":\"58#打开私信页面\",\"359\":\"58#通过浏览器开发者工具审查元素\",\"360\":\"58#下载并保存\",\"361\":\"58#发送到微信并保存\",\"362\":\"58@0\",\"363\":\"58@1\",\"364\":\"59\",\"365\":\"60\",\"366\":\"60#登山路线\",\"367\":\"60#旅行建议\",\"368\":\"60#美食推荐\",\"369\":\"60@0\",\"370\":\"60@1\",\"371\":\"61\",\"372\":\"62\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[3,19],\"1\":[null,null,1],\"2\":[null,null,4],\"3\":[1,1],\"4\":[2],\"5\":[1,4],\"6\":[1,2],\"7\":[null,null,1],\"8\":[null,null,2],\"9\":[4],\"10\":[1,1],\"11\":[1,2],\"12\":[1,4],\"13\":[1,11],\"14\":[null,null,1],\"15\":[null,null,2],\"16\":[2,1],\"17\":[1,67],\"18\":[1,101],\"19\":[1,96],\"20\":[null,null,1],\"21\":[null,null,2],\"22\":[2,1],\"23\":[1,60],\"24\":[null,null,1],\"25\":[null,null,2],\"26\":[1,1],\"27\":[1,6],\"28\":[1,4],\"29\":[1,3],\"30\":[1,5],\"31\":[1,14],\"32\":[1],\"33\":[2,19],\"34\":[null,null,1],\"35\":[null,null,1],\"36\":[2],\"37\":[1,3],\"38\":[1,8],\"39\":[1,8],\"40\":[null,null,1],\"41\":[null,null,1],\"42\":[2],\"43\":[4,11],\"44\":[4,11],\"45\":[1,33],\"46\":[null,null,1],\"47\":[null,null,1],\"48\":[1],\"49\":[2,3],\"50\":[1,106],\"51\":[1,44],\"52\":[1],\"53\":[null,null,1],\"54\":[null,null,1],\"55\":[2],\"56\":[1,3],\"57\":[1,6],\"58\":[1],\"59\":[null,null,1],\"60\":[null,null,1],\"61\":[1],\"62\":[1,3],\"63\":[1,4],\"64\":[1],\"65\":[null,null,1],\"66\":[null,null,1],\"67\":[2,9],\"68\":[null,null,1],\"69\":[null,null,1],\"70\":[1],\"71\":[1,23],\"72\":[1,26],\"73\":[null,null,1],\"74\":[null,null,1],\"75\":[2,16],\"76\":[null,null,1],\"77\":[null,null,1],\"78\":[1,2],\"79\":[1],\"80\":[2],\"81\":[1,4],\"82\":[1,6],\"83\":[2,11],\"84\":[1,5],\"85\":[null,null,1],\"86\":[null,null,1],\"87\":[2],\"88\":[3,32],\"89\":[2,7],\"90\":[2,19],\"91\":[2,6],\"92\":[null,null,1],\"93\":[null,null,1],\"94\":[2],\"95\":[2,14],\"96\":[1,3],\"97\":[1,4],\"98\":[1,7],\"99\":[1,13],\"100\":[1,78],\"101\":[1,12],\"102\":[null,null,1],\"103\":[null,null,1],\"104\":[2,46],\"105\":[1,32],\"106\":[1,13],\"107\":[1,18],\"108\":[null,null,1],\"109\":[null,null,1],\"110\":[2,8],\"111\":[1,41],\"112\":[1,6],\"113\":[1,13],\"114\":[null,null,1],\"115\":[null,null,1],\"116\":[2,9],\"117\":[1,11],\"118\":[1,29],\"119\":[null,null,1],\"120\":[null,null,1],\"121\":[2,9],\"122\":[1,26],\"123\":[1,27],\"124\":[1,21],\"125\":[1,49],\"126\":[1,33],\"127\":[1,8],\"128\":[null,null,1],\"129\":[null,null,1],\"130\":[2,7],\"131\":[2,8],\"132\":[3,12],\"133\":[2,15],\"134\":[2,35],\"135\":[2,53],\"136\":[null,null,1],\"137\":[null,null,1],\"138\":[2],\"139\":[null,null,1],\"140\":[null,null,1],\"141\":[2,4],\"142\":[3],\"143\":[3,15],\"144\":[3,3],\"145\":[1,12],\"146\":[null,null,1],\"147\":[null,null,1],\"148\":[1],\"149\":[3,19],\"150\":[3,20],\"151\":[1,4],\"152\":[1,63],\"153\":[2,95],\"154\":[null,null,1],\"155\":[null,null,1],\"156\":[1],\"157\":[1,10],\"158\":[1],\"159\":[1,62],\"160\":[3,30],\"161\":[1],\"162\":[4,27],\"163\":[4,29],\"164\":[4,29],\"165\":[4,26],\"166\":[4,24],\"167\":[1,28],\"168\":[1,32],\"169\":[null,null,1],\"170\":[null,null,1],\"171\":[1],\"172\":[1,10],\"173\":[2,10],\"174\":[1,41],\"175\":[1],\"176\":[3,45],\"177\":[1,49],\"178\":[3,31],\"179\":[3,45],\"180\":[3,30],\"181\":[null,null,1],\"182\":[null,null,1],\"183\":[1],\"184\":[1,31],\"185\":[1,6],\"186\":[1,66],\"187\":[null,null,1],\"188\":[null,null,1],\"189\":[1],\"190\":[1,19],\"191\":[1,54],\"192\":[1,47],\"193\":[1,28],\"194\":[null,null,1],\"195\":[null,null,1],\"196\":[1],\"197\":[1,10],\"198\":[1,48],\"199\":[1,4],\"200\":[1,38],\"201\":[1,30],\"202\":[null,null,1],\"203\":[null,null,1],\"204\":[1],\"205\":[1,9],\"206\":[1,15],\"207\":[1,49],\"208\":[1,2],\"209\":[1,33],\"210\":[1,33],\"211\":[1,28],\"212\":[1,30],\"213\":[1,95],\"214\":[null,null,1],\"215\":[null,null,1],\"216\":[1],\"217\":[1,11],\"218\":[1,39],\"219\":[1],\"220\":[1,34],\"221\":[1,28],\"222\":[1,74],\"223\":[null,null,1],\"224\":[null,null,1],\"225\":[1],\"226\":[1,7],\"227\":[1,34],\"228\":[1,2],\"229\":[1,35],\"230\":[1,30],\"231\":[1,29],\"232\":[null,null,1],\"233\":[null,null,1],\"234\":[1],\"235\":[1,24],\"236\":[1,25],\"237\":[null,null,1],\"238\":[null,null,1],\"239\":[1],\"240\":[1,15],\"241\":[2,65],\"242\":[2,4],\"243\":[1,30],\"244\":[1,33],\"245\":[1,31],\"246\":[1,53],\"247\":[null,null,1],\"248\":[null,null,1],\"249\":[1],\"250\":[1,32],\"251\":[1,6],\"252\":[null,null,1],\"253\":[null,null,1],\"254\":[2,4],\"255\":[1],\"256\":[1,14],\"257\":[1,4],\"258\":[1,27],\"259\":[1,21],\"260\":[1,13],\"261\":[1,5],\"262\":[null,null,1],\"263\":[null,null,4],\"264\":[1],\"265\":[1,14],\"266\":[1,10],\"267\":[1,14],\"268\":[null,null,1],\"269\":[null,null,4],\"270\":[1],\"271\":[1,27],\"272\":[3,21],\"273\":[1,3],\"274\":[1,26],\"275\":[1,22],\"276\":[null,null,1],\"277\":[null,null,1],\"278\":[1],\"279\":[1,12],\"280\":[1,5],\"281\":[null,null,1],\"282\":[null,null,1],\"283\":[1],\"284\":[1,5],\"285\":[1,4],\"286\":[null,null,1],\"287\":[null,null,1],\"288\":[1,4],\"289\":[1],\"290\":[2,12],\"291\":[1,55],\"292\":[null,null,1],\"293\":[null,null,1],\"294\":[2,4],\"295\":[3],\"296\":[2],\"297\":[1,41],\"298\":[1,3],\"299\":[1,21],\"300\":[1,5],\"301\":[2],\"302\":[2,12],\"303\":[2,32],\"304\":[1,3],\"305\":[1,28],\"306\":[2,6],\"307\":[null,null,1],\"308\":[null,null,3],\"309\":[2],\"310\":[1,3],\"311\":[1,11],\"312\":[1],\"313\":[1,10],\"314\":[1,7],\"315\":[3,12],\"316\":[3,9],\"317\":[null,null,1],\"318\":[null,null,1],\"319\":[1],\"320\":[2,7],\"321\":[3,7],\"322\":[2,5],\"323\":[2,8],\"324\":[4,4],\"325\":[1,4],\"326\":[1,6],\"327\":[null,null,1],\"328\":[null,null,1],\"329\":[2,3],\"330\":[1,8],\"331\":[1,8],\"332\":[1,13],\"333\":[1,10],\"334\":[1,7],\"335\":[1,7],\"336\":[3,8],\"337\":[3,10],\"338\":[4,7],\"339\":[null,null,1],\"340\":[null,null,1],\"341\":[1],\"342\":[1,5],\"343\":[1,5],\"344\":[1,8],\"345\":[1,5],\"346\":[2,5],\"347\":[1,6],\"348\":[1,4],\"349\":[1,7],\"350\":[1,9],\"351\":[1,4],\"352\":[1,5],\"353\":[1,7],\"354\":[null,null,1],\"355\":[null,null,1],\"356\":[1,4],\"357\":[1,2],\"358\":[1,2],\"359\":[1,7],\"360\":[1,3],\"361\":[1,2],\"362\":[null,null,1],\"363\":[null,null,3],\"364\":[1,2],\"365\":[1,4],\"366\":[1,4],\"367\":[1,11],\"368\":[1,14],\"369\":[null,null,1],\"370\":[null,null,1],\"371\":[1,1],\"372\":[1,3]},\"averageFieldLength\":[1.4673428797935146,19.34348834588531,1.3258622749195264],\"storedFields\":{\"0\":{\"h\":\"三速-CMLL 公式\",\"t\":[\"CMLL 是桥式方法的第三步，在完成左右桥之后。这一步的目标是在不考虑 M 层的情况下完成顶层的角块（包括位置和色相）\",\"CMLL 共有 42 条公式，建议学习顺序：O2 H4 Pi6 U6 T6 L6 S6 As6\"]},\"1\":{\"c\":[\"魔方\"]},\"2\":{\"c\":[\"桥式\",\"公式集\",\"三阶魔方速拧\",\"CMLL\"]},\"3\":{\"h\":\"三阶魔方速拧\",\"t\":[\"三阶魔方速拧相关公式及技巧\"]},\"4\":{\"h\":\"三盲-联想词\"},\"5\":{\"h\":\"如何更好地使用联想词记忆\",\"t\":[\"一个联想词通常是两个字\",\"两个联想词之间用某个动词连接\",\"这个动词的第一个字体现前一个联想词的特征，第二个字反映后一个联想词的效果\"]},\"6\":{\"h\":\"我的联想词\",\"t\":[\"编码\",\"联想词\"]},\"7\":{\"c\":[\"魔方\"]},\"8\":{\"c\":[\"盲拧记忆\",\"三阶魔方盲拧\"]},\"9\":{\"h\":\"三盲-彳亍法的坐标系、编码、缓冲与色相\"},\"10\":{\"h\":\"坐标系\",\"t\":[\"黄顶红前\"]},\"11\":{\"h\":\"编码\",\"t\":[\"彳亍法编码图01\",\"彳亍法编码图02\"]},\"12\":{\"h\":\"缓冲\",\"t\":[\"棱块：UR\",\"角块：UFR\"]},\"13\":{\"h\":\"色相\",\"t\":[\"棱块：我们将棱块两个面上颜色中相对高级的面称为0位置，另一个面称为1位置（高级排名：白黄>红橙>蓝绿）。\",\"角块：我们将角块上三个面中按编码顺序，第一个面称为0位置，第二个面称为1位置，第三个面称为2位置。\"]},\"14\":{\"c\":[\"魔方\"]},\"15\":{\"c\":[\"彳亍法\",\"三阶魔方盲拧\"]},\"16\":{\"h\":\"三盲-彳亍法棱块读码\",\"t\":[\"以下打乱均采用黄顶红前的坐标打乱\"]},\"17\":{\"h\":\"正常情况\",\"t\":[\"打乱如下：\",\"F2 L2 U2 L2 F2 U2 F R2 F D2 L2 U' L2 B F' U2 R' B D2 B R2\",\"彳亍法棱块读码01\",\"打乱完成后，先按坐标（黄顶红前）将魔方调整好\",\"从缓冲块位置（UR）开始读码，也就是从编码的 GH 块的 G 开始读（缓冲块的编码不需要读出来）\",\"G 位置是黄红块的黄，它的编码是 A，那么第一个编码就是 A\",\"然后看 A 位置，是白红块的白，它的编码是 I，那么第二个编码就是 I\",\"然后看 I 位置，是白绿块的白，它的编码是 O，那么第三个编码就是 O\",\"然后看 O 位置，是橙绿块的橙，它的编码是 Y，那么第四个编码就是 Y\",\"然后看 Y 位置，是白蓝块的白，它的编码是 K，那么第五个编码就是 K\",\"然后看 K 位置，是白橙块的橙，它的编码是 N，那么第六个编码就是 N\",\"然后看 N 位置，是红蓝块的红，它的编码是 S，那么第七个编码就是 S\",\"然后看 S 位置，是黄蓝块的蓝，它的编码是 D，那么第八个编码就是 D\",\"然后看 D 位置，是黄橙块的橙，它的编码是 F，那么第九个编码就是 F\",\"然后看 F 位置，是橙蓝块的橙，它的编码是 W，那么第十个编码就是 W\",\"然后看 W 位置，是黄绿块的黄，它的编码是 G，这里说明已经回到了缓冲块，我们不需要读出来\",\"所有棱块都读到了，编码完成\",\"最终的编码如下：AI OY KN SD FW\"]},\"18\":{\"h\":\"存在小循环\",\"t\":[\"打乱如下：\",\"F R2 D B2 F2 L2 D' R2 U R2 B U' F U2 R F2 D2 U' R\",\"彳亍法棱块读码02\",\"打乱完成后，先按坐标（黄顶红前）将魔方调整好\",\"从缓冲块块（UR）开始读码，也就是从编码的 GH 块的 G 开始读（缓冲块的编码不需要读出来）\",\"G 位置是红绿块的红，它的编码是 Q，那么第一个编码就是 Q\",\"然后看 Q 位置，是红蓝块的蓝，它的编码是 T，那么第二个编码就是 T\",\"然后看 T 位置，是黄绿块的绿，它是我们的缓冲块（缓冲块的编码是不需要读出来的），此时读码明显没有结束，还有很多棱块没有读到，此时我们需要借位\",\"借位的原则是按色相借位，黄绿块的绿色是“1”位置，那么我们需要借一个“1”位置的，我们首选的借位是借 AB 位置（如果 AB 位置已还原或已读码，则需要借其他位置），那么第三个编码就是 B\",\"然后看 B 位置，是黄橙块的橙，它的编码是 F，那么第四个编码就是 F\",\"然后看 F 位置，是白蓝块的白，它的编码是 K，那么第五个编码就是 K\",\"然后看 K 位置，是黄蓝块的蓝，它的编码是 D，那么第六个编码就是 D\",\"然后看 D 位置，是黄红块的红，它的编码是 B，那么第七个编码就是 B\",\"此时我们发现回到了刚才借的位置，但还有未读的棱块，所以我们需要继续按色相借位，我们借 IJ 位置的 J，那么我们的第八个编码就是 J\",\"然后看 J 位置，是橙绿块的橙，它的编码是 Y，那么第九个编码就是 Y\",\"然后看 Y 位置，是白红块的白，它的编码是 I，那么第十个编码就是 I\",\"此时我们发现回到了刚才借的位置（虽然不是 J，但是 IJ 在同一块上），但还有未读的棱块，所以我们需要继续按色相借位，我们借 MN 位置的 M，那么第十一个编码就是 M\",\"然后看 M 位置，是白绿块的白，它的编码是 O，那么第十二个编码就是 O\",\"然后看 O 位置，是橙蓝块的蓝，它的编码是 X，那么第十三个编码就是 X\",\"然后看 X 位置，是白橙块的白，它的编码是 M，那么第十四个编码就是 M\",\"此时我们发现回到了刚才借的位置，并且最后一个是以“0”位置结束，所有棱块都读到了，编码完成\",\"最终的编码如下：QT BF KD BJ YI MO XM\"]},\"19\":{\"h\":\"存在翻色\",\"t\":[\"打乱如下：\",\"F2 L2 D' F2 D R2 B2 R2 D' R2 U2 B' R' F L B2 D' U2 B R\",\"彳亍法棱块读码03\",\"打乱完成后，先按坐标（黄顶红前）将魔方调整好\",\"从缓冲块块（UR）开始读码，也就是从编码的 GH 块的 G 开始读（缓冲块的编码不需要读出来）\",\"G 位置是白橙块的橙，它的编码是 N，那么第一个编码就是 N\",\"然后看 N 位置，是黄绿块的黄，它是我们的缓冲块（缓冲块的编码是不需要读出来的），此时读码明显没有结束，还有很多棱块没有读到，此时我们需要借位\",\"借位的原则是按色相借位，黄绿块的黄色是“0”位置，那么我们需要借一个“0”位置的，我们首选的借位是借 AB 位置（如果 AB 位置已还原或已读码，则需要借其他位置），那么第二个编码就是 A\",\"然后看 A 位置，是红绿块的绿，它的编码是 R，那么第三个编码就是 R\",\"然后看 R 位置，是橙蓝块的橙，它的编码是 W，那么第四个编码就是 W\",\"然后看 W 位置，是红蓝块的红，它的编码是 S，那么第五个编码就是 S\",\"然后看 S 位置，是黄橙块的黄，它的编码是 E，那么第六个编码就是 E\",\"然后看 E 位置，是黄红块的红，它的编码是 B，那么第七个编码就是 B\",\"此时我们发现回到了刚才借的位置（虽然不是 A，但是 AB 在同一块上），但还有未读的棱块，所以我们需要继续按色相借位，我们借 CD 位置的 D，那么第八个编码就是 D\",\"然后看 D 位置，是白绿块的白，它的编码是 O，那么第九个编码就是 O\",\"然后看 O 位置，是白红块的白，它的编码是 I，那么第十个编码就是 I\",\"然后看 I 位置，是橙绿块的橙，它的编码是 Y，那么第十一个编码就是 Y\",\"然后看 Y 位置，是黄蓝块的蓝，它的编码是 D，那么第十二个编码就是 D\",\"此时我们发现回到了刚才借的位置，但是最后一个编码是以“1”位置结束，所以出现了翻色的情况，我们发现白蓝块需要翻色，所有棱块都读到了，编码完成\",\"最终的编码如下：NA RW SE BD OI YD\"]},\"20\":{\"c\":[\"魔方\"]},\"21\":{\"c\":[\"彳亍法\",\"三阶魔方盲拧\"]},\"22\":{\"h\":\"三盲-彳亍法角块读码\",\"t\":[\"以下打乱均采用黄顶红前的坐标打乱\"]},\"23\":{\"h\":\"正常情况\",\"t\":[\"打乱如下：\",\"``\",\"彳亍法角块读码01\",\"打乱完成后，先按坐标（黄顶红前）将魔方调整好\",\"从缓冲块位置（UR）开始读码，也就是从编码的 GH 块的 G 开始读（缓冲块的编码不需要读出来）\",\"G 位置是黄红块的黄，它的编码是 A，那么第一个编码就是 A\",\"然后看 A 位置，是白红块的白，它的编码是 I，那么第二个编码就是 I\",\"然后看 I 位置，是白绿块的白，它的编码是 O，那么第三个编码就是 O\",\"然后看 O 位置，是橙绿块的橙，它的编码是 Y，那么第四个编码就是 Y\",\"然后看 Y 位置，是白蓝块的白，它的编码是 K，那么第五个编码就是 K\",\"然后看 K 位置，是白橙块的橙，它的编码是 N，那么第六个编码就是 N\",\"然后看 N 位置，是红蓝块的红，它的编码是 S，那么第七个编码就是 S\",\"然后看 S 位置，是黄蓝块的蓝，它的编码是 D，那么第八个编码就是 D\",\"然后看 D 位置，是黄橙块的橙，它的编码是 F，那么第九个编码就是 F\",\"然后看 F 位置，是橙蓝块的橙，它的编码是 W，那么第十个编码就是 W\",\"然后看 W 位置，是黄绿块的黄，它的编码是 G，这里说明已经回到了缓冲块，我们不需要读出来\",\"所有棱块都读到了，编码完成\",\"最终的编码如下：AI OY KN SD FW\"]},\"24\":{\"c\":[\"魔方\"]},\"25\":{\"c\":[\"彳亍法\",\"三阶魔方盲拧\"]},\"26\":{\"h\":\"三阶魔方盲拧\",\"t\":[\"三阶魔方盲拧相关公式及技巧\"]},\"27\":{\"h\":\"关于我\",\"t\":[\"你好，我来自山东济南，毕业于曲阜师范大学，喜欢编程，热爱技术，热爱生活\"]},\"28\":{\"h\":\"爱好\",\"t\":[\"魔方、摄影、键盘客制化、数码产品\"]},\"29\":{\"h\":\"最近在读\",\"t\":[\"《鳄鱼》-莫言\"]},\"30\":{\"h\":\"最近在看\",\"t\":[\"《无耻之徒》-2024.07.09\"]},\"31\":{\"h\":\"联系方式\",\"t\":[\"QQ：3407085928\",\"微信：Pisces12013\",\"邮箱：zhf5256@qq.com\",\"博客：茕茕の博客\",\"GitHub：https://github.com/zhf521\"]},\"32\":{\"h\":\"合集\"},\"33\":{\"h\":\"CSS 实现文字渐变\",\"t\":[\"如果给文字直接设置渐变色会不生效：\",\"color: linear-gradient(to right, yellow, green);\",\"我们可以使用以下方式实现：\",\"background: linear-gradient(to right, yellow, green); /*设置渐变*/ background-clip: text; /*将设置的背景颜色限制在文字中*/ -webkit-background-clip: text; /*将设置的背景颜色限制在文字中*/ -webkit-text-fill-color: transparent; /*将文字设置为透明*/\"]},\"34\":{\"c\":[\"软件开发\"]},\"35\":{\"c\":[\"CSS\"]},\"36\":{\"h\":\"npm 换源\"},\"37\":{\"h\":\"查看当前镜像源\",\"t\":[\"npm get registry\"]},\"38\":{\"h\":\"更换淘宝镜像源\",\"t\":[\"npm config set registry https://registry.npmmirror.com/\"]},\"39\":{\"h\":\"切换回官方镜像源\",\"t\":[\"npm config set registry https://registry.npmjs.org/\"]},\"40\":{\"c\":[\"软件开发\"]},\"41\":{\"c\":[\"npm\"]},\"42\":{\"h\":\"async 异常捕获\"},\"43\":{\"h\":\"使用 try-catch 捕获异常\",\"t\":[\"async function async1() { try { await async2(); } catch (error) { console.log(error); }\"]},\"44\":{\"h\":\"使用 Promise.catch 捕获异常\",\"t\":[\"async function async1() { await async2().catch(error => { console.log(error); }); }\"]},\"45\":{\"h\":\"优化异常捕获\",\"t\":[\"当有多个异步操作时，要为每个异步操作后面都加上 try-catch 代码块，这显然是不合理的，如果只写一次 try-catch 代码块，就会导致不知道哪一个异步操作出现了问题，所以我们可以自己写一个工具函数来优化异常捕获。\",\"原来的代码：\",\"async function async1() { try { await asyncFn1(); await asyncFn2(); } catch (error) { console.log(error); } }\",\"我们封装一个工具函数：\",\"async tryCatch(asyncFn) { try { let res = await asyncFn; return [null,res]; } catch (error) { return [error,null]; } }\",\"现在我们使用封装好的工具函数：\",\"async function async1() { let [error1,res1] = await tryCatch(asyncFn1); let [error2,res2] = await tryCatch(asyncFn2); }\"]},\"46\":{\"c\":[\"软件开发\"]},\"47\":{\"c\":[\"JavaScript\"]},\"48\":{\"h\":\"文字跑马灯效果的实现\"},\"49\":{\"h\":\"Vue 实现文字跑马灯效果\",\"t\":[\"封装了一个组件，用于实现文字跑马灯效果。\"]},\"50\":{\"h\":\"组件源码\",\"t\":[\"<!-- Carousel.vue --> <template> <!-- 跑马灯容器 --> <div class=\\\"container\\\" ref=\\\"containerRef\\\"> <!-- 跑马灯 --> <div :class=\\\"textOverflow && 'content'\\\" :style=\\\"{ animationDuration: `${duration}s`, animationDelay: `${props.scrollDelay}s` }\\\"> <!-- 文本内容 --> <div :style=\\\"[{ paddingRight: `${props.textGap}px`, whiteSpace: 'nowrap' }, props.textStyle]\\\" ref=\\\"textContentRef\\\">{{ props.textContent }}</div> <!-- 文本溢出时追加的文本内容 --> <div :style=\\\"[{ paddingRight: `${props.textGap}px`, whiteSpace: 'nowrap' }, props.textStyle]\\\" v-show=\\\"textOverflow\\\">{{ props.textContent }}</div> </div> </div> </template> <script setup> import { ref, watch, nextTick, onMounted } from 'vue'; // 获取跑马灯容器元素 const containerRef = ref(null); // 获取文本内容元素 const textContentRef = ref(null); // 判断文本内容是否溢出 const textOverflow = ref(true); // 动画持续时间 const duration = ref(0); // 接收参数 const props = defineProps({ // 文本内容 textContent: { type: String, default: '', }, // 文本间隔 textGap: { type: Number, default: 50, }, // 文本滚动速度 scrollSpeed: { type: Number, default: 10, }, // 文本开始滚动的延迟时间 scrollDelay: { type: Number, default: 0.5, }, // 文本内容样式 textStyle: { type: Object, default: null, } }); // 监听文本内容变化 watch(() => props.textContent, () => { nextTick(() => { renderText(); }); }); // 挂载时执行 onMounted(() => { nextTick(() => { renderText(); }); }); // 渲染文本内容 const renderText = () => { // 获取容器宽度和文本内容宽度 const containerWidth = containerRef.value.offsetWidth; const textWidth = textContentRef.value.offsetWidth; // 计算动画持续时间 duration.value = textWidth / props.scrollSpeed; // 判断文本内容是否溢出 if ((textWidth - props.textGap) > containerWidth) { textOverflow.value = true; } else { textOverflow.value = false; } }; </script> <style scoped> .container { width: 100%; display: flex; flex-grow: 1; overflow: hidden; } .content { flex: none; display: flex; align-items: center; animation: move linear infinite; } @keyframes move { 0% { transform: translateX(0); } to { transform: translateX(-50%); } } </style>\"]},\"51\":{\"h\":\"组件的使用\",\"t\":[\"注意：组件外的容器必须设置宽度。\",\"<!-- App.vue --> <template> <div :style=\\\"{ width: '100px', backgroundColor: 'pink' }\\\"> <Carousel :textContent=\\\"textContent\\\" :textGap=\\\"textGap\\\" :scrollDelay=\\\"textStartScrollDelay\\\" :scrollSpeed=\\\"textScrollSpeed\\\" :textStyle=\\\"textStyle\\\"> </Carousel> </div> </template> <script setup> import { ref } from 'vue'; import Carousel from '@/components/Carousel.vue'; const textContent = ref('我是一段很长的文字'); const textGap = ref(20); const textStartScrollDelay = ref(1); const textScrollSpeed = ref(20); const textStyle = ref({ color: 'green', fontWeight: 'bold', }); </script>\"]},\"52\":{\"h\":\"效果展示\"},\"53\":{\"c\":[\"软件开发\"]},\"54\":{\"c\":[\"Vue\"]},\"55\":{\"h\":\"CSS 实现导航栏固定效果\"},\"56\":{\"h\":\"效果描述\",\"t\":[\"当页面滚动时，导航栏固定在顶部。\"]},\"57\":{\"h\":\"实现方法\",\"t\":[\"我们可以使用粘性定位来实现。\",\"将导航栏的position属性设置为sticky，并设置top属性将其固定在顶部。\",\"设置z-index属性以确保导航栏在页面其他元素之上显示。\"]},\"58\":{\"h\":\"效果展示\"},\"59\":{\"c\":[\"软件开发\"]},\"60\":{\"c\":[\"CSS\"]},\"61\":{\"h\":\"盒子宽度自适应文字内容\"},\"62\":{\"h\":\"效果描述\",\"t\":[\"当文字多少不确定时，让盒子宽度自适应文字内容。\"]},\"63\":{\"h\":\"实现方法\",\"t\":[\"为盒子设置width:fit-content;\"]},\"64\":{\"h\":\"效果展示\"},\"65\":{\"c\":[\"软件开发\"]},\"66\":{\"c\":[\"CSS\"]},\"67\":{\"h\":\"echarts 图表占满整个容器\",\"t\":[\"通过 grid 属性调整。\",\"grid:{ top:'0px', left:'0px', right:'0px', bottom:'0px }\"]},\"68\":{\"c\":[\"软件开发\"]},\"69\":{\"c\":[\"echarts\"]},\"70\":{\"h\":\"文本溢出的处理\"},\"71\":{\"h\":\"单行文本溢出显示省略号\",\"t\":[\"使用 white-space 属性来指定文本的处理方式，将其设置为 nowrap，表示不允许换行。\",\"使用 text-overflow 属性来指定溢出文本的处理方式，将其设置为 ellipsis，表示使用省略号来代替溢出的文本。\",\"为了让 text-overflow 属性生效，还需要将 overflow 属性设置为 hidden 或 clip。\",\"综上，可以这样写：\",\"div { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }\"]},\"72\":{\"h\":\"多行文本溢出显示省略号\",\"t\":[\"使用-webkit-line-clamp来限制在一个块元素显示的文本的行数。\",\"使用display: -webkit-box;设置该盒子作为弹性伸缩盒子模型显示。\",\"使用-webkit-box-orient属性设置伸缩盒对象的子元素的排列方式。\",\"使用text-overflow: ellipsis;属性设置省略号来代替溢出的文本。\",\"适用于 WebKit 浏览器或移动端（绝大部分是 WebKit 内核的）浏览器\",\".ellipsis { overflow: hidden; display: -webkit-box; text-overflow: ellipsis; -webkit-line-clamp: 2; -webkit-box-orient: vertical; }\"]},\"73\":{\"c\":[\"软件开发\"]},\"74\":{\"c\":[\"CSS\"]},\"75\":{\"h\":\"CSS 实现三角形\",\"t\":[\"网页中常见一些三角形，使用 CSS 边框可以 直接画出来，不必做成图片或者字体图标\",\"盒子宽度高度为 0\",\"4 个边框都要写，只保留需要的边框颜色，其余的不能省略，都改为 transparent （透明）\"]},\"76\":{\"c\":[\"软件开发\"]},\"77\":{\"c\":[\"CSS\"]},\"78\":{\"h\":\"开发技巧\",\"t\":[\"分享一下我在开发中遇到的问题以及开发中使用到的技巧。\"]},\"79\":{\"h\":\"友链\"},\"80\":{\"h\":\"Go-开发环境搭建\"},\"81\":{\"h\":\"下载并安装Go语言环境\",\"t\":[\"访问 Go 语言的官方网站，选择适合操作系统的安装包进行下载并按提示安装\"]},\"82\":{\"h\":\"验证安装\",\"t\":[\"在终端中输入 go version 来验证 Go 是否安装成功\"]},\"83\":{\"h\":\"配置 GOPROXY\",\"t\":[\"由于国内访问不到默认的 GOPROXY 配置链接，我们需要配置成可访问的\",\"go env -w GOPROXY=https://goproxy.cn,direct\"]},\"84\":{\"h\":\"安装代码编辑器\",\"t\":[\"使用 VSCode 安装 Go 插件即可\"]},\"85\":{\"c\":[\"软件开发\"]},\"86\":{\"c\":[\"Go\"]},\"87\":{\"h\":\"Go-语言结构\"},\"88\":{\"h\":\"Hello World!\",\"t\":[\"我们使用 Go 语言输出 Hello World!\",\"package main // 定义包名，必须在源文件中非注释的第一行指明这个文件属于哪个包，每个 Go 应用程序都包含一个名为 main 的包 import \\\"fmt\\\" // 告诉编译器这个程序需要使用 fmt 包，这个包实现了格式化输入/输出的函数 func main() { // 程序开始执行的函数，main 函数是每一个可执行程序所必须包含的，一般来说都是在启动后第一个执行的函数（如果有 init() 函数则会先执行该函数） // 这是我的第一个 Go 程序，我是单行注释 /* 我是多行注释 */ fmt.Println(\\\"Hello World!\\\") // 用于将字符串输出到控制台 }\"]},\"89\":{\"h\":\"Go 语言的基础组成\",\"t\":[\"包声明\",\"引入包\",\"函数\",\"变量\",\"语句 & 表达式\",\"注释\"]},\"90\":{\"h\":\"Go 语言命名规范\",\"t\":[\"当标识符（包括常量、变量、类型、函数名、结构字段等等）以一个大写字母开头，如：Group，那么使用这种形式的标识符的对象就可以被外部包的代码所使用（客户端程序需要先导入这个包），这被称为导出（类似面向对象语言中的 public）；标识符如果以小写字母开头，则对包外是不可见的，但是他们在整个包的内部是可见并且可用的（类似面向对象语言中的 private ）\"]},\"91\":{\"h\":\"Go 程序的执行\",\"t\":[\"我们将以上代码放入 Hello.go 文件中，在该文件目录下执行以下命令即可：\",\"go run Hello.go\"]},\"92\":{\"c\":[\"软件开发\"]},\"93\":{\"c\":[\"Go\"]},\"94\":{\"h\":\"Go-基础语法\"},\"95\":{\"h\":\"Go 标记\",\"t\":[\"Go 程序可以由多个标记组成，可以是关键字，标识符，常量，字符串，符号\",\"如下语句：\",\"fmt.Println(\\\"Hello, World!\\\")\",\"它的六个标记分别为：\",\"fmt . Println ( \\\"Hello, World!\\\" )\"]},\"96\":{\"h\":\"行分隔符\",\"t\":[\"不需要;分隔，一行代表一个语句结束\"]},\"97\":{\"h\":\"注释\",\"t\":[\"单行注释：//注释内容 多行注释：/*注释内容*/\"]},\"98\":{\"h\":\"标识符\",\"t\":[\"标识符用来命名变量、类型等程序实体。它由数字、字母、下划线组成，但是第一个字符必须是字母或下划线而不能是数字。\"]},\"99\":{\"h\":\"字符串连接\",\"t\":[\"Go 语言的字符串连接可以通过 + 实现：\",\"package main import \\\"fmt\\\" func main() { fmt.Println(\\\"你好!\\\" + \\\"小赵\\\") }\",\"输出结果为：\",\"你好!小赵\"]},\"100\":{\"h\":\"关键字\",\"t\":[\"Go 中使用到的25个关键字或保留字：\",\"关键字\",\"关键字\",\"关键字\",\"关键字\",\"关键字\",\"break\",\"default\",\"func\",\"interface\",\"select\",\"case\",\"defer\",\"go\",\"map\",\"struct\",\"chan\",\"else\",\"goto\",\"package\",\"switch\",\"const\",\"fallthrough\",\"if\",\"range\",\"type\",\"continue\",\"for\",\"import\",\"return\",\"var\",\"Go 中还有36个预定义标识符：\",\"标识符\",\"标识符\",\"标识符\",\"标识符\",\"标识符\",\"标识符\",\"append\",\"bool\",\"byte\",\"cap\",\"close\",\"complex\",\"complex64\",\"complex128\",\"uint16\",\"copy\",\"false\",\"float32\",\"float64\",\"imag\",\"int\",\"int8\",\"int16\",\"uint32\",\"int32\",\"int64\",\"iota\",\"len\",\"make\",\"new\",\"nil\",\"panic\",\"uint64\",\"print\",\"println\",\"real\",\"recover\",\"string\",\"true\",\"uint\",\"uint8\",\"uintptr\",\"程序一般由关键字、常量、变量、运算符、类型和函数组成。\",\"程序中可能会使用到这些分隔符：括号()，中括号[]和大括号{}。\",\"程序中可能会使用到这些标点符号：.、,、;、: 和 …。\"]},\"101\":{\"h\":\"空格\",\"t\":[\"在 Go 语言中，空格通常用于分隔标识符、关键字、运算符和表达式，以提高代码的可读性。\",\"Go 语言中变量的声明必须使用空格隔开，如：\",\"var age int\"]},\"102\":{\"c\":[\"软件开发\"]},\"103\":{\"c\":[\"Go\"]},\"104\":{\"h\":\"Go-数据类型\",\"t\":[\"在 Go 中，数据类型用于声明函数和变量。数据类型的出现是为了把数据分成所需内存大小不同的数据，编程的时候需要用大数据的时候才需要申请大内存，就可以充分利用内存。\",\"按类别划分有以下几种数据类型：\",\"类型\",\"描述\",\"布尔型\",\"布尔型的值只可以是常量 true 或者 false\",\"数字类型\",\"整型 int 和浮点型 float32、float64，Go 支持整型和浮点型数字，并且支持复数，其中位的运算采用补码\",\"字符串类型\",\"字符串就是一串固定长度的字符连接起来的字符序列。Go 的字符串是由单个字节连接起来的。Go 的字符串的字节使用 UTF-8 编码标识 Unicode 文本\",\"派生类型\",\"包括：指针类型（Pointer）、数组类型、结构化类型(struct)、Channel 类型、函数类型、切片类型、接口类型（interface）、Map 类型\"]},\"105\":{\"h\":\"数字类型\",\"t\":[\"类型\",\"描述\",\"uint8\",\"无符号 8 位整型 (0 到 255)\",\"uint16\",\"无符号 16 位整型 (0 到 65535)\",\"uint32\",\"无符号 32 位整型 (0 到 4294967295)\",\"uint64\",\"无符号 64 位整型 (0 到 18446744073709551615)\",\"int8\",\"有符号 8 位整型 (-128 到 127)\",\"int16\",\"有符号 16 位整型 (-32768 到 32767)\",\"int32\",\"有符号 32 位整型 (-2147483648 到 2147483647)\",\"int64\",\"有符号 64 位整型 (-9223372036854775808 到 9223372036854775807)\"]},\"106\":{\"h\":\"浮点型\",\"t\":[\"类型\",\"描述\",\"float32\",\"IEEE-754 32位浮点型数\",\"float64\",\"IEEE-754 64位浮点型数\",\"complex64\",\"32 位实数和虚数\",\"complex128\",\"64 位实数和虚数\"]},\"107\":{\"h\":\"其他数字类型\",\"t\":[\"类型\",\"描述\",\"byte\",\"类似 uint8\",\"rune\",\"类似 int32\",\"uint\",\"32 或 64 位\",\"int\",\"与 uint 一样大小\",\"uintptr\",\"无符号整型，用于存放一个指针\"]},\"108\":{\"c\":[\"软件开发\"]},\"109\":{\"c\":[\"Go\"]},\"110\":{\"h\":\"Go-变量\",\"t\":[\"变量是计算机语言中能储存计算结果或能表示值的抽象概念。变量可以通过变量名访问。\",\"Go 中变量名由数字、字母、下划线组成，首字母不能是数字。\"]},\"111\":{\"h\":\"变量声明\",\"t\":[\"声明并赋值，如果提供了初始值，则类型可以省略，变量会从初始值中推断出类型\",\"var 变量名 类型 = 值\",\"如果没有提供初始值，则需要填写类型，变量默认为零值（变量没有初始化时系统默认设置的值）\",\"var 变量名 类型\",\"数值类型的零值是0\",\"布尔类型的零值是false\",\"字符串类型的零值是\\\"\\\"\",\"以下几种类型的零值是nil\",\"*int\",\"[]int\",\"map[string]int\",\"chan int\",\"func(string) int\",\"error 这里的error是接口\",\"短变量声明:=，不能在函数外使用\",\"变量名 := 值\",\"多变量声明 \",\"类型相同的多个变量，非全局变量\",\"var 变量名1,变量名2,变量名3 类型 变量名1,变量名2,变量名3 = 值1,值2,值3\",\"或使用短声明\",\"变量名1,变量名2,变量名3 := 值1,值2,值3\",\"类型不同的多个变量，全局变量\",\"var( 变量名1 类型1 变量名2 类型2 )\"]},\"112\":{\"h\":\"局部变量和全局变量\",\"t\":[\"定义在函数体（包括main函数）内的变量都是局部变量，定义了就必须使用\",\"定义在函数体外部的变量就是全局变量，可以只定义不使用\"]},\"113\":{\"h\":\"值类型和引用类型\",\"t\":[\"值类型包括基本数据类型和一些复合数据类型，它们存储在栈上。当你将值类型的变量赋值给另一个变量时，会进行复制操作，新变量将拥有原始值的副本。使用&符号来获取内存地址。\",\"引用类型在内存中的表示是一个指向实际数据的指针，它们存储在堆上。当你将引用类型的变量赋值给另一个变量时，两个变量将指向相同的数据，因此它们是引用相同的内存地址。\"]},\"114\":{\"c\":[\"软件开发\"]},\"115\":{\"c\":[\"Go\"]},\"116\":{\"h\":\"Go-常量\",\"t\":[\"常量是一个简单值的标识符，在程序运行时，不会被修改的量。\",\"常量中的数据类型只可以是布尔型、数字型（整数型、浮点型和复数）和字符串型。\"]},\"117\":{\"h\":\"常量声明\",\"t\":[\"const 常量名 [类型] = 值\",\"可以省略类型\",\"多个相同类型的声明可以简写为：\",\"const 常量名1,常量名2 = 值1,值2\"]},\"118\":{\"h\":\"iota\",\"t\":[\"iota，特殊常量，可以认为是一个可以被编译器修改的常量。\",\"iota 在 const 关键字出现时将被重置为 0(const 内部的第一行之前)，const 中每新增一行常量声明将使 iota 计数一次(iota 可理解为 const 语句块中的行索引)。\",\"iota 可以被用作枚举值：\",\"const ( a = iota b = iota c = iota )\",\"第一个 iota 等于 0，每当 iota 在新的一行被使用时，它的值都会自动加 1；所以 a=0, b=1, c=2 可以简写为如下形式：\",\"const ( a = iota b c )\"]},\"119\":{\"c\":[\"软件开发\"]},\"120\":{\"c\":[\"Go\"]},\"121\":{\"h\":\"Go-运算符\",\"t\":[\"运算符用于在程序运行时执行数学或逻辑运算。\",\"Go 内置的运算符有：\",\"算术运算符\",\"关系运算符\",\"逻辑运算符\",\"位运算符\",\"赋值运算符\",\"其他运算符\"]},\"122\":{\"h\":\"算数运算符\",\"t\":[\"假设 A 为 10，B 为 20\",\"运算符\",\"描述\",\"实例\",\"+\",\"相加\",\"A + B 输出结果为 30\",\"-\",\"相减\",\"A - B 输出结果为 -10\",\"*\",\"相乘\",\"A * B 输出结果为 200\",\"/\",\"相除\",\"B / A 输出结果为 2\",\"%\",\"求余\",\"B % A 输出结果为 0\",\"++\",\"自增\",\"A++ 输出结果为 11\",\"--\",\"自减\",\"A-- 输出结果为 9\"]},\"123\":{\"h\":\"关系运算符\",\"t\":[\"假设 A 为 10，B 为 20\",\"运算符\",\"描述\",\"实例\",\"==\",\"检查两个值是否相等，如果相等返回 True，否则返回 False\",\"(A == B) 为 False\",\"!=\",\"检查两个值是否不相等，如果不相等返回 True 否则返回 False\",\"(A != B) 为 True\",\">\",\"检查左边值是否大于右边值，如果是返回 True 否则返回 False\",\"(A > B) 为 False\",\"<\",\"检查左边值是否小于右边值，如果是返回 True 否则返回 False\",\"(A < B) 为 True\",\">=\",\"检查左边值是否大于等于右边值，如果是返回 True 否则返回 False\",\"(A >= B) 为 False\",\"<=\",\"检查左边值是否小于等于右边值，如果是返回 True 否则返回 False\",\"(A <= B) 为 True\"]},\"124\":{\"h\":\"逻辑运算符\",\"t\":[\"假设 A 为 True,B 为 False\",\"运算符\",\"描述\",\"实例\",\"&&\",\"逻辑 AND 运算符。 如果两边的操作数都是 True，则条件 True，否则为 False\",\"(A && B) 为 False\",\"||\",\"逻辑 OR 运算符。 如果两边的操作数有一个 True，则条件 True，否则为 False\",\"(A || B) 为 True\",\"!\",\"逻辑 NOT 运算符。 如果条件为 True，则逻辑 NOT 条件 False，否则为 True\",\"!(A && B) 为 True\"]},\"125\":{\"h\":\"位运算符\",\"t\":[\"位运算符对整数在内存中的二进制位进行操作\",\"假设 A 为 60，B 为 13\",\"运算符\",\"描述\",\"实例\",\"&\",\"按位与运算符\\\"&\\\"是双目运算符。 其功能是参与运算的两数各对应的二进位相与\",\"(A & B) 结果为 12, 二进制为 0000 1100(A & B) 结果为 12, 二进制为 0000 1100\",\"|\",\"按位或运算符\\\"|\\\"是双目运算符。 其功能是参与运算的两数各对应的二进位相或\",\"(A | B) 结果为 61, 二进制为 0011 1101\",\"^\",\"按位异或运算符\\\"^\\\"是双目运算符。 其功能是参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为1\",\"(A ^ B) 结果为 49, 二进制为 0011 0001\",\"<<\",\"左移运算符\\\"<<\\\"是双目运算符。左移n位就是乘以2的n次方。 其功能把\\\"<<\\\"左边的运算数的各二进位全部左移若干位，由\\\"<<\\\"右边的数指定移动的位数，高位丢弃，低位补0\",\"A << 2 结果为 240 ，二进制为 1111 0000\",\">>\",\"右移运算符\\\">>\\\"是双目运算符。右移n位就是除以2的n次方。 其功能是把\\\">>\\\"左边的运算数的各二进位全部右移若干位，\\\">>\\\"右边的数指定移动的位数\",\"A >> 2 结果为 15 ，二进制为 0000 1111\"]},\"126\":{\"h\":\"赋值运算符\",\"t\":[\"运算符\",\"描述\",\"实例\",\"=\",\"简单的赋值运算符，将一个表达式的值赋给一个左值\",\"C = A + B 将 A + B 表达式结果赋值给 C\",\"+=\",\"相加后再赋值\",\"C += A 等于 C = C + A\",\"-=\",\"相减后再赋值\",\"C -= A 等于 C = C - A\",\"*=\",\"相乘后再赋值\",\"C *= A 等于 C = C * A\",\"/=\",\"相除后再赋值\",\"C /= A 等于 C = C / A\",\"%=\",\"求余后再赋值\",\"C %= A 等于 C = C % A\",\"<<=\",\"左移后赋值\",\"C <<= 2 等于 C = C << 2\",\">>=\",\"右移后赋值\",\"C >>= 2 等于 C = C >> 2\",\"&=\",\"按位与后赋值\",\"C &= 2 等于 C = C & 2\",\"^=\",\"按位异或后赋值\",\"C ^= 2 等于 C = C ^ 2\",\"|=\",\"按位或后赋值\",\"C |= 2 等于 C = C | 2\"]},\"127\":{\"h\":\"其他运算符\",\"t\":[\"运算符\",\"描述\",\"实例\",\"&\",\"返回变量存储地址\",\"&a; 将给出变量的实际地址\",\"*\",\"指针变量\",\"*a; 是一个指针变量\"]},\"128\":{\"c\":[\"软件开发\"]},\"129\":{\"c\":[\"Go\"]},\"130\":{\"h\":\"Go-条件语句\",\"t\":[\"条件语句需要开发者通过指定一个或多个条件，并通过测试条件是否为 true 来决定是否执行指定语句，并在条件为 false 的情况在执行另外的语句\"]},\"131\":{\"h\":\"if 语句\",\"t\":[\"if 语句由布尔表达式后紧跟一个或多个语句组成\",\"语法：\",\"if 布尔表达式 { /* 在布尔表达式为 true 时执行 */ }\"]},\"132\":{\"h\":\"if…else 语句\",\"t\":[\"if 语句后可以使用可选的 else 语句, else 语句中的表达式在布尔表达式为 false 时执行\",\"语法：\",\"if 布尔表达式 { /* 在布尔表达式为 true 时执行 */ } else { /* 在布尔表达式为 false 时执行 */ }\"]},\"133\":{\"h\":\"if 语句嵌套\",\"t\":[\"可以在 if 或 else if 语句中嵌入一个或多个 if 或 else if 语句\",\"语法：\",\"if 布尔表达式 1 { /* 在布尔表达式 1 为 true 时执行 */ if 布尔表达式 2 { /* 在布尔表达式 2 为 true 时执行 */ } }\"]},\"134\":{\"h\":\"switch 语句\",\"t\":[\"switch 语句用于基于不同条件执行不同动作，每一个 case 分支都是唯一的，从上至下逐一测试，直到匹配为止\",\"switch 默认情况下 case 最后自带 break 语句，匹配成功后就不会执行其他 case，如果我们需要执行后面的 case，可以使用 fallthrough，fallthrough 不会判断下一条 case 的表达式结果是否为 true\",\"语法：\",\"switch var1 { case val1: ... case val2: ... default: ... }\",\"变量 var1 可以是任何类型，而 val1 和 val2 可以是同类型的任意值。类型不被局限于常量或整数，但必须是相同的类型，或者最终结果为相同类型的表达式\",\"还可以同时测试多个可能符合条件的值，使用逗号分割它们，例如：case val1, val2, val3\"]},\"135\":{\"h\":\"select 语句\",\"t\":[\"select 是 Go 中的一个控制结构，类似于 switch 语句。\",\"select 语句只能用于通道操作，每个 case 必须是一个通道操作，要么是发送要么是接收。\",\"select 语句会监听所有指定的通道上的操作，一旦其中一个通道准备好就会执行相应的代码块。\",\"如果多个通道都准备好，那么 select 语句会随机选择一个通道执行。如果所有通道都没有准备好，那么执行 default 块中的代码。\",\"语法：\",\"select { case <- channel1: // 执行的代码 case value := <- channel2: // 执行的代码 case channel3 <- value: // 执行的代码 // 你可以定义任意数量的 case default: // 所有通道都没有准备好，执行的代码 }\",\"每个 case 都必须是一个通道\",\"所有 channel 表达式都会被求值\",\"所有被发送的表达式都会被求值\",\"如果任意某个通道可以进行，它就执行，其他被忽略。\",\"如果有多个 case 都可以运行，select 会随机公平地选出一个执行，其他不会执行。 否则： \",\"如果有 default 子句，则执行该语句。\",\"如果没有 default 子句，select 将阻塞，直到某个通道可以运行；Go 不会重新对 channel 或值进行求值。\"]},\"136\":{\"c\":[\"软件开发\"]},\"137\":{\"c\":[\"Go\"]},\"138\":{\"h\":\"Go-循环语句\"},\"139\":{\"c\":[\"软件开发\"]},\"140\":{\"c\":[\"Go\"]},\"141\":{\"h\":\"Go 学习记录\",\"t\":[\"分享我学习 Go 过程中的笔记。\"]},\"142\":{\"h\":\"创建 Nest 项目\"},\"143\":{\"h\":\"安装 Nest CLI\",\"t\":[\"Nest CLI 是官方提供的脚手架工具，用于帮助我们创建、开发和维护 Nest 应用程序\",\"建议全局安装：\",\"npm install -g @nestjs/cli\",\"更新（有新版本时可以执行以下命令）：\",\"npm update -g @nestjs/cli\"]},\"144\":{\"h\":\"创建 Nest 项目\",\"t\":[\"nest new 你的项目名\"]},\"145\":{\"h\":\"运行项目\",\"t\":[\"cd 你的项目文件夹\",\"npm run start:dev\",\"在浏览器中，打开 localhost:3000 查看运行情况。\"]},\"146\":{\"c\":[\"软件开发\"]},\"147\":{\"c\":[\"Nest\"]},\"148\":{\"h\":\"控制反转与依赖注入\"},\"149\":{\"h\":\"控制反转（IoC）\",\"t\":[\"控制反转（Inversion of Control，IoC）是一种软件设计思想，旨在将对象的创建和管理交给外部容器（如 IoC 容器），而不是在代码中硬编码。通过 IoC，对象之间的依赖关系由容器管理，而不是在代码中显式地创建和配置。可以降低计算机代码之间的耦合度。\",\"在 Nest 中，IoC 容器负责管理对象的生命周期和依赖关系。\"]},\"150\":{\"h\":\"依赖注入（DI）\",\"t\":[\"依赖注入（Dependency Injection，DI）是 IoC 的一种实现方式，通过将依赖项（即对象之间的依赖关系）注入到目标对象中，实现控制反转。\",\"在 Nest 中，依赖注入主要是通过装饰器（Decorators）实现的，通过在目标对象上添加装饰器，将依赖项注入到目标对象中。\"]},\"151\":{\"h\":\"两者关系\",\"t\":[\"控制反转是一种设计思想（设计模式），而依赖注入是控制反转的一种实现方式。\"]},\"152\":{\"h\":\"依赖注入的实现\",\"t\":[\"首先我们来看一下传统的开发方式，在传统的开发模式中，对象之间的依赖关系由代码中显式地创建和配置。\",\"// 假设这是我们的 CPU 和 GPU 类 class IntelCPU { process(): void { console.log('Intel CPU 运行中...'); } } class NvidiaGPU { render(): void { console.log('Nvidia GPU 渲染中...'); } } interface CPU { process(): void; } interface GPU { render(): void; } // 这是我们的 Computer 类，它直接创建 CPU 和 GPU 的实例 class Computer { cpu: CPU; gpu: GPU; constructor() { this.cpu = new IntelCPU(); // 硬编码依赖 this.gpu = new NvidiaGPU(); // 硬编码依赖 } run(): void { this.cpu.process(); this.gpu.render(); } } // 使用 Computer 类 const computer = new Computer(); computer.run();\",\"在这个例子中，Computer 类在构造函数中直接创建了 IntelCPU 和 NvidiaGPU 的实例。这种方式的缺点是，如果我们需要更换 CPU 或 GPU 的实现，我们需要修改 Computer 类的代码。\",\"在依赖注入中，组件不直接创建依赖项，而是在创建时通过构造函数、属性或方法参数接收依赖项。\",\"现在我们来看一下使用依赖注入后的代码。\",\"// CPU 和 GPU 接口 interface CPU { process(): void; } interface GPU { render(): void; } // 实现类 class IntelCPU implements CPU { process(): void { console.log('Intel CPU 运行中...'); } } class NvidiaGPU implements GPU { render(): void { console.log('Nvidia GPU 渲染中...'); } } // Computer 类，使用依赖注入 class Computer { cpu: CPU; gpu: GPU; constructor(cpu: CPU, gpu: GPU) { this.cpu = cpu; this.gpu = gpu; } run(): void { this.cpu.process(); this.gpu.render(); } } // 创建 Computer 实例时，我们传递 CPU 和 GPU 的实例 const intelCpu = new IntelCPU(); const nvidiaGpu = new NvidiaGPU(); const computer = new Computer(intelCpu, nvidiaGpu); computer.run();\",\"在这个例子中，Computer 类通过构造函数接收 CPU 和 GPU 的实例。这样，我们可以根据需要传递不同的实现，而不需要修改 Computer 类的代码。\"]},\"153\":{\"h\":\"Nest 中依赖注入的实现\",\"t\":[\"在 Nest 中，依赖注入（DI）是通过装饰器和 IoC 容器实现的。以下是一个简单的例子，展示了如何在 Nest 应用程序中使用依赖注入：\",\"我们定义一个服务（Service）和一个控制器（Controllers），然后使用 Nest 的装饰器来标记它们。\",\"首先，我们创建一个服务类，使用 @Injectable() 装饰器来标记它为可注入的服务。\",\"// src/app.service.ts import { Injectable } from '@nestjs/common'; @Injectable() export class AppService { getHello(): string { return 'Hello World!'; } }\",\"然后，我们创建一个控制器类，它将依赖于 AppService。在控制器的构造函数中，我们通过类型注解来声明依赖，并让 Nest 的 IoC 容器自动注入它。\",\"// src/app.controller.ts import { Controller, Get } from '@nestjs/common'; import { AppService } from './app.service'; @Controller() export class AppController { constructor(private readonly appService: AppService) {} @Get() getHello(): string { return this.appService.getHello(); } }\",\"此时，AppService 作为一个提供者（Providers），需要在模块中进行注册。\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; @Module({ imports: [], controllers: [AppController], providers: [AppService], }) export class AppModule {}\",\"最后，我们启动 Nest 应用程序，Nest 会自动处理依赖注入。\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; async function bootstrap() { const app = await NestFactory.create(AppModule); await app.listen(3000); } bootstrap();\",\"在这个例子中，当 AppController 被创建时，NestJS 的 IoC 容器会查找 AppService 的提供者，并将其实例注入到 AppController 的构造函数中。这样， AppController 就可以使用 AppService 的方法，而不需要自己创建 AppService 的实例。\"]},\"154\":{\"c\":[\"软件开发\"]},\"155\":{\"c\":[\"Nest\"]},\"156\":{\"h\":\"控制器\"},\"157\":{\"h\":\"什么是控制器\",\"t\":[\"控制器（Controllers）负责处理传入的请求和向客户端返回响应。在 Nest 中，使用 @Controller 装饰器来定义控制器。\"]},\"158\":{\"h\":\"路由\"},\"159\":{\"h\":\"基本使用\",\"t\":[\"Nest 中的路由是指定义请求 URL 和处理函数之间的映射关系。\",\"在 Nest 中，使用 @Get()、@Post()、@Put()、@Patch()、@Delete() 等装饰器来定义路由。\",\"例如：\",\"// src/test/test.controller.ts import { Controller, Get, Post, Body, Patch, Param, Delete, } from '@nestjs/common'; import { TestService } from './test.service'; import { CreateTestDto } from './dto/create-test.dto'; import { UpdateTestDto } from './dto/update-test.dto'; @Controller('test') export class TestController { constructor(private readonly testService: TestService) {} // 使用 POST 方法，通过 /test 路径来创建数据 @Post() create(@Body() createTestDto: CreateTestDto) { return this.testService.create(createTestDto); } // 使用 GET 方法，通过 /test 路径来访问 @Get() findAll() { return this.testService.findAll(); } // 使用 GET 方法，通过 /test/:id 路径来访问，如：/test/1 @Get(':id') findOne(@Param('id') id: string) { return this.testService.findOne(+id); } // 使用 PATCH 方法，通过 /test/:id 路径来更新数据，如：/test/1 @Patch(':id') update(@Param('id') id: string, @Body() updateTestDto: UpdateTestDto) { return this.testService.update(+id, updateTestDto); } // 使用 DELETE 方法，通过 /test/:id 路径来删除数据，如：/test/1 @Delete(':id') remove(@Param('id') id: string) { return this.testService.remove(+id); } }\"]},\"160\":{\"h\":\"设置路由前缀（Prefix）\",\"t\":[\"在 main.ts 中设置路由前缀：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; async function bootstrap() { const app = await NestFactory.create(AppModule); // 设置路由以 /api 为前缀，但是直接通过域名访问的 / 根路由排除 app.setGlobalPrefix('api', { exclude: ['/'], }); await app.listen(3000); } bootstrap();\"]},\"161\":{\"h\":\"处理请求参数\"},\"162\":{\"h\":\"查询字符串（Query String）\",\"t\":[\"使用 @Query() 装饰器来获取查询字符串参数：\",\"// src/test/test.controller.ts import { Controller, Get, Query } from '@nestjs/common'; @Controller('test') export class TestController { @Get('query') query(@Query() query) { return `获取到的数据为：${query.name}、${query.age}`; } }\",\"或：\",\"// src/test/test.controller.ts import { Controller, Get, Query } from '@nestjs/common'; @Controller('test') export class TestController { @Get('query') query(@Query('name') name: string, @Query('age') age: number) { return `获取到的数据为：${name}、${age}`; } }\"]},\"163\":{\"h\":\"URL 参数（URL Params）\",\"t\":[\"使用 @Param() 装饰器和 :参数名 路径来获取 URL 参数：\",\"// src/test/test.controller.ts import { Controller, Get, Param } from '@nestjs/common'; @Controller('test') export class TestController { @Get(':name') params(@Param() params) { return `获取到的数据为：${params.name}`; } }\",\"或：\",\"// src/test/test.controller.ts import { Controller, Get, Param } from '@nestjs/common'; @Controller('test') export class TestController { @Get(':name') params(@Param('name') name: string) { return `获取到的数据为：${name}`; } }\"]},\"164\":{\"h\":\"请求体（Request Body）\",\"t\":[\"使用 @Body() 装饰器来获取请求头：\",\"// src/test/test.controller.ts import { Body, Controller, Post } from '@nestjs/common'; import { CreateTestDto } from './dto/create-test.dto'; @Controller('test') export class TestController { @Post() body(@Body() createTestDto: CreateTestDto) { return `获取到的数据为：${createTestDto.name}`; } }\",\"或：\",\"// src/test/test.controller.ts import { Body, Controller, Post } from '@nestjs/common'; @Controller('test') export class TestController { @Post() body(@Body('name') name: string) { return `获取到的数据为：${name}`; } }\"]},\"165\":{\"h\":\"请求头（Request Header）\",\"t\":[\"使用 @Headers() 装饰器来获取请求头：\",\"// src/test/test.controller.ts import { Headers, Controller, Post } from '@nestjs/common'; @Controller('test') export class TestController { @Post() head(@Headers() header) { return `获取到的数据为：${header.name}`; } }\",\"或：\",\"// src/test/test.controller.ts import { Headers, Controller, Post } from '@nestjs/common'; @Controller('test') export class TestController { @Post() head(@Headers('name') name: string) { return `获取到的数据为：${name}`; } }\"]},\"166\":{\"h\":\"请求对象（Request Object）\",\"t\":[\"使用 @Req() 装饰器来获取请求对象：\",\"// src/test/test.controller.ts import { Controller, Get, Req } from '@nestjs/common'; @Controller('test') export class TestController { @Get('req') req(@Req() req) { return `获取到的数据为：${req.query.name}`; } }\"]},\"167\":{\"h\":\"状态码\",\"t\":[\"使用 @HttpCode() 装饰器来设置状态码：\",\"// src/app.controller.ts import { Controller, Get, HttpCode } from '@nestjs/common'; import { AppService } from './app.service'; @Controller() export class AppController { constructor(private readonly appService: AppService) {} @HttpCode(202) @Get() getHello(): string { return this.appService.getHello(); } }\"]},\"168\":{\"h\":\"响应头\",\"t\":[\"使用 @Header() 装饰器来设置响应头：\",\"// src/app.controller.ts import { Controller, Get, HttpCode, Header } from '@nestjs/common'; import { AppService } from './app.service'; @Controller() export class AppController { constructor(private readonly appService: AppService) {} @HttpCode(202) @Header('Cache-Control', 'none') @Get() getHello(): string { return this.appService.getHello(); } }\"]},\"169\":{\"c\":[\"软件开发\"]},\"170\":{\"c\":[\"Nest\"]},\"171\":{\"h\":\"提供者\"},\"172\":{\"h\":\"什么是提供者\",\"t\":[\"Nest 中的提供者（Providers）是用于管理应用程序的依赖项和服务。提供者可以是任何类，并且可以被注入到其他类中，以便在需要时使用。我们可以理解为：为控制器提供服务的就可以被称作提供者（Providers）。\"]},\"173\":{\"h\":\"定义、注册和使用提供者\",\"t\":[\"在 Nest 中，有多种方式来定义提供者。提供者可以在模块的 providers 数组中进行注册。这样，Nest 就会自动将该提供者注入到需要它的类中。\"]},\"174\":{\"h\":\"标准提供者\",\"t\":[\"标准提供者是使用 @Injectable() 装饰器来定义的。\",\"// src/app.service.ts import { Injectable } from '@nestjs/common'; @Injectable() export class AppService { getHello(): string { return 'Hello World!'; } }\",\"在模块的 providers 数组中注册提供者：\",\"// src/app.module.ts // 简写方式 import { Module } from '@nestjs/common'; import { AppService } from './app.service'; @Module({ providers: [AppService], }) export class AppModule {}\",\"// src/app.module.ts // 完整方式 import { Module } from '@nestjs/common'; import { AppService } from './app.service'; @Module({ providers: [ { provide: AppService, useClass: AppService, }, ], }) export class AppModule {}\",\"在需要使用的类中，在构造函数中注入提供者：\",\"// src/app.controller.ts import { Controller, Get } from '@nestjs/common'; import { AppService } from './app.service'; @Controller('app') export class AppController { constructor(private readonly appService: AppService) {} @Get() getHello(): string { return this.appService.getHello(); } }\"]},\"175\":{\"h\":\"自定义提供者\"},\"176\":{\"h\":\"值提供者（useValue）\",\"t\":[\"useValue 语法对于注入常量值、将外部库放入 Nest 容器或使用模拟对象替换实际实现非常有用。\",\"在模块中，使用 useValue 语法来提供值：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { UserService } from './user.service'; @Module({ providers: [ { provide: UserService, useValue: 'Hello user!', }, ], }) export class AppModule {}\",\"在需要使用的类中，在构造函数中注入提供者：\",\"// src/app.controller.ts import { Controller, Get } from '@nestjs/common'; import { AppService } from './app.service'; import { Inject } from '@nestjs/common'; @Controller('app') export class AppController { constructor( private readonly appService: AppService, private readonly userService: UserService ) {} @Get() getHello(): string { return this.appService.getHello() + ' ' + this.userService; } }\"]},\"177\":{\"h\":\"非类提供者\",\"t\":[\"我们已经使用了类名作为我们的提供者标记（providers 数组中列出的提供者中的 Provide 属性的值），有时我们希望灵活使用字符串作为提供者标记（token）。\",\"在模块中注册提供者时，使用字符串标记提供者：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; @Module({ providers: [ { provide: 'TOKEN_KEY', useValue: 'This is a token', }, ], }) export class AppModule {}\",\"在需要使用的地方，使用 @Inject() 装饰器注入标记为 'TOKEN_KEY' 的提供者：\",\"// src/app.controller.ts import { Controller, Get } from '@nestjs/common'; import { AppService } from './app.service'; import { Inject } from '@nestjs/common'; @Controller('app') export class AppController { constructor( private readonly appService: AppService, @Inject('TOKEN_KEY') private readonly token: string ) {} @Get() getHello(): string { return this.appService.getHello() + ' ' + this.token; } }\"]},\"178\":{\"h\":\"类提供者 (useClass)\",\"t\":[\"在某些情况下，我们可能需要动态地决定使用哪个类来提供服务。我们可以使用 useClass 选项来指定一个类，该类将被实例化并用作提供者。\",\"// src/app.module.ts import { Module } from '@nestjs/common'; @Module({ providers: [ { provide: ConfigService, useClass: environment === 'development' ? DevelopmentConfigService : ProductionConfigService, }, ], }) export class AppModule {}\",\"我们使用 environment 变量来决定使用哪个配置服务类。\",\"在需要使用的类中，在构造函数中注入提供者即可。\"]},\"179\":{\"h\":\"工厂提供者 (useFactory)\",\"t\":[\"有时候，我们需要动态地创建提供者。我们可以使用工厂函数实现。\",\"工厂函数可以接受（可选）参数。\",\"inject 属性接受一个提供者数组，在实例化过程中，Nest 将解析该数组并将其作为参数传递给工厂函数。这两个列表应该是相关的：Nest 将从 inject 列表中以相同的顺序将实例作为参数传递给工厂函数。\",\"在模块中，使用 useFactory 选项来指定一个工厂函数，该函数将返回一个提供者实例。\",\"// src/app.module.ts import { Module } from '@nestjs/common'; class AClass { make() { return 'A make method'; } } @Module({ providers: [ AClass, { provide: 'B', inject: [AClass], useFactory: (a: AClass) => { return a.make(); }, }, ], }) export class AppModule {}\",\"在需要使用的类中，使用 @Inject() 装饰器注入提供者即可。\"]},\"180\":{\"h\":\"别名提供者 (useExisting)\",\"t\":[\"useExisting 语法允许您为现有的提供程序创建别名。这将创建两种访问同一提供者的方法。如果你想要重用一个已经存在的提供者\",\"在模块中，使用 useExisting 来指定别名。\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { UserService } from './user.service'; @Module({ providers: [ AClass, { provide: 'B', useExisting: UserService, }, ], }) export class AppModule {}\",\"在需要使用的类中，使用 @Inject() 装饰器注入提供者即可。\"]},\"181\":{\"c\":[\"软件开发\"]},\"182\":{\"c\":[\"Nest\"]},\"183\":{\"h\":\"模块\"},\"184\":{\"h\":\"什么是模块\",\"t\":[\"模块（Modules）是应用程序的基本构建块，它封装了一组相关的功能和服务。\",\"在 Nest 中，模块是一个类，它使用 @Module() 装饰器进行装饰。在模块中，你可以定义控制器（Controllers）、提供者（Providers）和其他模块，以便将它们组织在一起。\",\"@module() 装饰器接受一个描述模块属性的对象，它有如下几个属性：\",\"imports：导入其他模块，以允许模块之间共享 Providers\",\"exports：导出其他模块需要共享的 Providers\",\"providers：注册模块中所有用到的 Providers，模块内共享使用\",\"controllers：声明模块的控制器\"]},\"185\":{\"h\":\"全局模块\",\"t\":[\"使用 @Global() 装饰器定义的模块为全局模块，其他模块在使用全局模块时不需要在 imports 中导入该模块\"]},\"186\":{\"h\":\"动态模块\",\"t\":[\"动态模块是指在运行时动态创建的模块。主要用于给模块传递参数。\",\"例如，我们创建一个新的 test 模块，默认是使用静态模块创建的：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { TestModule } from './test/test.module'; @Module({ imports: [TestModule], controllers: [AppController], providers: [AppService], }) export class AppModule {}\",\"我们来看一下如何使用动态模块：\",\"定义动态模块：\",\"// src/test/test.module.ts import { DynamicModule, Module } from '@nestjs/common'; import { TestService } from './test.service'; import { TestController } from './test.controller'; @Module({}) export class TestModule { static forRoot(options: string): DynamicModule { return { module: TestModule, controllers: [TestController], providers: [ { provide: 'TEST_CONFIG', useValue: options, }, TestService, ], }; } }\",\"在 app.module.ts 中使用动态模块：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { TestModule } from './test/test.module'; @Module({ imports: [TestModule.forRoot('')], controllers: [AppController], providers: [AppService], }) export class AppModule {}\",\"此时，我们使用动态模块实现了之前静态模块的效果。如果我们需要传递参数该怎么做呢？\",\"我们可以在 test.controller.ts 中使用 @Inject() 装饰器来进行依赖注入：\",\"// src/test/test.controller.ts import { Controller, Get, Inject } from '@nestjs/common'; import { TestService } from './test.service'; @Controller('test') export class TestController { constructor( private readonly testService: TestService, @Inject('TEST_CONFIG') private readonly testConfig: string ) {} @Get() findAll() { return this.testService.findAll() + ' ' + this.testConfig; } }\",\"此时，我们可以通过在模块入口处传递参数：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { TestModule } from './test/test.module'; @Module({ imports: [TestModule.forRoot('我是传递的参数')], controllers: [AppController], providers: [AppService], }) export class AppModule {}\",\"这样我们就可以在导入一个模块的时候，传入参数，然后动态生成模块的内容。\"]},\"187\":{\"c\":[\"软件开发\"]},\"188\":{\"c\":[\"Nest\"]},\"189\":{\"h\":\"中间件\"},\"190\":{\"h\":\"什么是中间件\",\"t\":[\"中间件（Middleware）是在路由处理程序之前调用的函数。中间件函数可以访问请求和响应对象，以及应用程序请求响应周期中的 next() 中间件函数。\",\"中间件函数可以执行以下任务：\",\"执行任何代码\",\"对请求和响应对象进行更改\",\"结束请求 - 响应周期\",\"调用堆栈中的下一个中间件函数\",\"如果当前的中间件函数没有结束请求 - 响应周期，它必须调用 next() 将控制传递给下一个中间件函数。否则，请求将被挂起。\"]},\"191\":{\"h\":\"普通中间件\",\"t\":[\"让我们创建一个简单的普通中间件，它只是记录进入和离开中间件函数的日志消息。\",\"使用下面的命令创建一个中间件：\",\"nest g middleware logging --flat\",\"中间件内容如下：\",\"// src/logging.middleware.ts import { Injectable, NestMiddleware } from '@nestjs/common'; import { Request, Response } from 'express'; @Injectable() export class LoggingMiddleware implements NestMiddleware { use(req: Request, res: Response, next: () => void) { console.log('请求前'); next(); console.log('请求后'); } }\",\"在 app.module.ts 中注册中间件：\",\"// src/app.module.ts import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { LoggingMiddleware } from './logging.middleware'; @Module({ imports: [], controllers: [AppController], providers: [AppService], }) export class AppModule implements NestModule { configure(consumer: MiddlewareConsumer) { consumer.apply(LoggingMiddleware).forRoutes('*'); } }\"]},\"192\":{\"h\":\"局部中间件\",\"t\":[\"在 forRoutes 中设置中间件的路由路径、控制器、请求路径和方法，在 exclude 中设置排除的路径、请求路径：\",\"// src/app.module.ts import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { LoggingMiddleware } from './logging.middleware'; import { UserController } from './user/user.controller'; import { UserService } from './user/user.service'; @Module({ imports: [], controllers: [AppController, UserController], providers: [AppService, UserService], }) export class AppModule implements NestModule { configure(consumer: MiddlewareConsumer) { consumer .apply(LoggingMiddleware) .exclude('/user/test') .forRoutes('/user'); } }\",\"或：\",\"// src/app.module.ts import { MiddlewareConsumer, Module, NestModule, RequestMethod, } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { LoggingMiddleware } from './logging.middleware'; import { UserController } from './user/user.controller'; import { UserService } from './user/user.service'; @Module({ imports: [], controllers: [AppController, UserController], providers: [AppService, UserService], }) export class AppModule implements NestModule { configure(consumer: MiddlewareConsumer) { consumer .apply(LoggingMiddleware) .exclude({ path: 'user', method: RequestMethod.POST }) .forRoutes(UserController); } }\",\"或：\",\"// src/app.module.ts import { MiddlewareConsumer, Module, NestModule, RequestMethod, } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { LoggingMiddleware } from './logging.middleware'; @Module({ imports: [], controllers: [AppController], providers: [AppService], }) export class AppModule implements NestModule { configure(consumer: MiddlewareConsumer) { consumer .apply(LoggingMiddleware) .forRoutes({ path: 'user', method: RequestMethod.GET }); } }\"]},\"193\":{\"h\":\"全局中间件\",\"t\":[\"全局中间件是应用到每个路由的处理程序。\",\"在 app.module.ts 中注册全局中间件：\",\"// src/app.module.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { LoggingMiddleware } from './logging.middleware'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.use(new LoggingMiddleware().use); await app.listen(3000); } bootstrap();\"]},\"194\":{\"c\":[\"软件开发\"]},\"195\":{\"c\":[\"Nest\"]},\"196\":{\"h\":\"异常过滤器\"},\"197\":{\"h\":\"什么是异常过滤器\",\"t\":[\"异常过滤器（Exception Filters）在 Nest 中用于捕获和处理应用程序中的异常情况。当异常发生时，过滤器会捕获并处理该异常，以提供更好的用户体验或记录错误日志。\"]},\"198\":{\"h\":\"创建异常过滤器\",\"t\":[\"我们使用命令来创建一个异常过滤器：\",\"nest g filter http-exception\",\"过滤器内容如下：\",\"// src/http-exception.filter.ts import { ArgumentsHost, Catch, ExceptionFilter, HttpException, } from '@nestjs/common'; @Catch(HttpException) export class HttpExceptionFilter<T> implements ExceptionFilter { catch(exception: HttpException, host: ArgumentsHost) { const ctx = host.switchToHttp(); // 获取请求上下文 const response = ctx.getResponse(); // 获取响应对象 const request = ctx.getRequest(); // 获取请求对象 const status = exception.getStatus(); // 获取异常状态码 response.status(status).json({ statusCode: status, timestamp: new Date().toISOString(), path: request.url, message: '我是自定义的异常', }); } }\"]},\"199\":{\"h\":\"使用异常过滤器\",\"t\":[\"我们可以使用多种方式在 Nest 中使用异常过滤器。\"]},\"200\":{\"h\":\"局部使用\",\"t\":[\"使用 @UseFilters 装饰器将异常过滤器应用于路由或控制器：\",\"// src/test/test.controller.ts import { Controller, Get, Param, UseFilters, ForbiddenException, } from '@nestjs/common'; import { TestService } from './test.service'; import { HttpExceptionFilter } from 'src/http-exception.filter'; @Controller('test') export class TestController { constructor(private readonly testService: TestService) {} @Get(':id') @UseFilters(HttpExceptionFilter) findOne(@Param('id') id: string) { throw new ForbiddenException(); return this.testService.findOne(+id); } }\",\"或：\",\"// src/test/test.controller.ts import { Controller, Get, Param, UseFilters, ForbiddenException, } from '@nestjs/common'; import { TestService } from './test.service'; import { HttpExceptionFilter } from 'src/http-exception.filter'; @Controller('test') @UseFilters(HttpExceptionFilter) export class TestController { constructor(private readonly testService: TestService) {} @Get(':id') findOne(@Param('id') id: string) { throw new ForbiddenException(); return this.testService.findOne(+id); } }\"]},\"201\":{\"h\":\"全局使用\",\"t\":[\"使用 ExceptionFilter 装饰器将异常过滤器应用于整个应用程序：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { HttpExceptionFilter } from './http-exception.filter'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalFilters(new HttpExceptionFilter()); await app.listen(3000); } bootstrap();\"]},\"202\":{\"c\":[\"软件开发\"]},\"203\":{\"c\":[\"Nest\"]},\"204\":{\"h\":\"管道\"},\"205\":{\"h\":\"什么是管道\",\"t\":[\"管道（Pipes）是 Nest 提供的一种用于数据转换和验证的功能。通过使用管道，我们可以对控制器接收的数据进行转换和验证，然后再将其传递给服务层。\"]},\"206\":{\"h\":\"内置管道\",\"t\":[\"Nest 内置了一些常用的管道，包括 ValidationPipe、ParseIntPipe、ParseFloatPipe、ParseBoolPipe、ParseArrayPipe、ParseUUIDPipe、 ParseEnumPipe、 DefaultValuePipe、 ParseFilePipe。这些管道已经预先配置好了，我们可以直接导入使用。\"]},\"207\":{\"h\":\"自定义管道\",\"t\":[\"我们还可以创建自定义管道，只需要继承 PipeTransform 接口，并实现 transform 方法即可。\",\"使用如下命令创建一个自定义管道：\",\"nest g pipe 管道名称\",\"管道内容如下：\",\"// src/my-pipes/my-pipes.pipes.ts import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform, } from '@nestjs/common'; @Injectable() export class MyPipesPipe implements PipeTransform { transform(value: any, metadata: ArgumentMetadata) { // value 是传过来的数据 // metadata 是关于数据的元数据信息 if (metadata.type === 'query' && typeof value !== 'string') { throw new BadRequestException('Query parameter must be a string'); } return value; } }\"]},\"208\":{\"h\":\"管道的绑定方式\",\"t\":[\"管道有多种绑定方式。\"]},\"209\":{\"h\":\"控制器绑定\",\"t\":[\"我们可以通过在控制器类上添加 @UsePipes() 装饰器来将管道绑定到控制器上：\",\"// src/user/user.controller.ts import { Controller, Get, Post, Body, UsePipes, ParseIntPipe, } from '@nestjs/common'; import { UserService } from './user.service'; import { CreateUserDto } from './dto/create-user.dto'; @Controller('user') @UsePipes(ParseIntPipe) export class UserController { constructor(private readonly userService: UserService) {} @Post() create(@Body() createUserDto: CreateUserDto) { return this.userService.create(createUserDto); } @Get() findAll() { return this.userService.findAll(); } }\"]},\"210\":{\"h\":\"路由绑定\",\"t\":[\"我们还可以通过在路由上添加 @UsePipes() 装饰器来将管道绑定到路由上：\",\"// src/user/user.controller.ts import { Controller, Get, Post, Body, UsePipes, ParseIntPipe, } from '@nestjs/common'; import { UserService } from './user.service'; import { CreateUserDto } from './dto/create-user.dto'; @Controller('user') export class UserController { constructor(private readonly userService: UserService) {} @Post() create(@Body() createUserDto: CreateUserDto) { return this.userService.create(createUserDto); } @Get() @UsePipes(ParseIntPipe) findAll() { return this.userService.findAll(); } }\"]},\"211\":{\"h\":\"方法参数绑定\",\"t\":[\"我们还可以将管道绑定到方法参数上：\",\"// src/user/user.controller.ts import { Controller, Get, Param, ParseIntPipe } from '@nestjs/common'; import { UserService } from './user.service'; @Controller('user') export class UserController { constructor(private readonly userService: UserService) {} @Get(':id') findOne(@Param('id', ParseIntPipe) id: number) { return this.userService.findOne(id); } }\"]},\"212\":{\"h\":\"全局绑定\",\"t\":[\"我们还可以将管道绑定到全局，这样所有的控制器都会自动应用该管道。要实现全局绑定，我们需要在 main.ts 中添加以下代码：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { ParseIntPipe } from '@nestjs/common'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalPipes(new ParseIntPipe()); await app.listen(3000); } bootstrap();\"]},\"213\":{\"h\":\"类验证器\",\"t\":[\"在 Nest 中，类验证器（Class Validator）是一种基于装饰器的验证机制，它允许你在类属性上使用装饰器来指定验证规则。这些装饰器来自 class-validator 库，这是一个流行的 Node.js 库，用于对象和值的验证。类验证器与 Nest 的管道（Pipe）功能结合使用时，可以提供强大的数据验证能力。\",\"以下是使用类验证器的基本步骤：\",\"安装 class-validator 和 class-transformer 库，它们提供了类验证器所需的功能：\",\"npm install class-validator class-transformer\",\"创建数据传输对象（DTO）：创建一个类，使用装饰器来定义验证规则。例如，你可以使用 IsString、 IsInt、 IsNotEmpty 等装饰器来指定属性的类型和验证条件。\",\"// src/user/dto/create-user.dto.ts import { IsInt, IsNotEmpty, IsString, Min } from 'class-validator'; export class CreateUserDto { @IsString() @IsNotEmpty() name: string; @IsInt() @Min(0) age: number; }\",\"在控制器中使用类验证器：在控制器方法中，你可以使用 ValidationPipe 来验证请求体。ValidationPipe 会自动使用 class-validator来验证传入的 DTO。\",\"// src/user/user.controller.ts import { Controller, Post, Body, UsePipes, ValidationPipe, } from '@nestjs/common'; import { UserService } from './user.service'; import { CreateUserDto } from './dto/create-user.dto'; @Controller('user') export class UserController { constructor(private readonly userService: UserService) {} @Post() @UsePipes(new ValidationPipe()) create(@Body() createUserDto: CreateUserDto) { return this.userService.create(createUserDto); } }\",\"还可以在 main.ts 中注册全局验证管道：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { ValidationPipe } from '@nestjs/common'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalPipes(new ValidationPipe()); await app.listen(3000); } bootstrap();\"]},\"214\":{\"c\":[\"软件开发\"]},\"215\":{\"c\":[\"Nest\"]},\"216\":{\"h\":\"守卫\"},\"217\":{\"h\":\"什么是守卫\",\"t\":[\"守卫（Guards）是用于对 Nest 应用中的路由进行验证的。守卫根据运行时出现的某些条件（例如权限，角色，访问控制列表等）来确定给定的请求是否由路由处理程序处理。\"]},\"218\":{\"h\":\"创建守卫\",\"t\":[\"我们使用以下命令来创建一个守卫：\",\"nest g guard 守卫名称\",\"守卫是一个使用 @Injectable() 装饰器装饰的类。守卫应该实现 CanActivate 接口。它的内容如下：\",\"// src/auth/auth.guard.ts import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'; import { Observable } from 'rxjs'; @Injectable() export class AuthGuard implements CanActivate { // 如果返回为 true，则放行，否则拦截 // 这里可以根据具体业务逻辑进行判断 canActivate( context: ExecutionContext ): boolean | Promise<boolean> | Observable<boolean> { return true; } }\"]},\"219\":{\"h\":\"应用守卫\"},\"220\":{\"h\":\"应用于控制器或单个路由\",\"t\":[\"使用 @UseGuards() 装饰器来应用守卫：\",\"// src/article/article.controller.ts import { Controller, Post, Body, UseGuards } from '@nestjs/common'; import { ArticleService } from './article.service'; import { CreateArticleDto } from './dto/create-article.dto'; import { AuthGuard } from 'src/auth/auth.guard'; @Controller('article') @UseGuards(AuthGuard) export class ArticleController { constructor(private readonly articleService: ArticleService) {} @Post() create(@Body() createArticleDto: CreateArticleDto) { return this.articleService.create(createArticleDto); } }\",\"或：\",\"// src/article/article.controller.ts import { Controller, Post, Body, UseGuards } from '@nestjs/common'; import { ArticleService } from './article.service'; import { CreateArticleDto } from './dto/create-article.dto'; import { AuthGuard } from 'src/auth/auth.guard'; @Controller('article') export class ArticleController { constructor(private readonly articleService: ArticleService) {} @Post() @UseGuards(AuthGuard) create(@Body() createArticleDto: CreateArticleDto) { return this.articleService.create(createArticleDto); } }\"]},\"221\":{\"h\":\"应用于全局\",\"t\":[\"在 main.ts 中应用于全局：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { AuthGuard } from './auth/auth.guard'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalGuards(new AuthGuard()); await app.listen(3000); } bootstrap();\"]},\"222\":{\"h\":\"反射器实现角色控制守卫\",\"t\":[\"Nest 提供了 @SetMetadata() 装饰器将定制元数据附加到路由处理程序。\",\"// src/article/article.controller.ts import { Controller, Get, SetMetadata, UseGuards } from '@nestjs/common'; import { ArticleService } from './article.service'; import { AuthGuard } from 'src/auth/auth.guard'; @Controller('article') @UseGuards(AuthGuard) export class ArticleController { constructor(private readonly articleService: ArticleService) {} @Get() @SetMetadata('role', ['admin']) // 第一个参数：key，第二个参数：自定义我们存放的权限 findAll() { return this.articleService.findAll(); } }\",\"在守卫中，我们使用反射器（Reflector）读取元数据，并检查当前用户是否具有所需的权限。\",\"// src/auth/auth.guard.ts import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'; import { Reflector } from '@nestjs/core'; import { Observable } from 'rxjs'; import type { Request } from 'express'; @Injectable() export class AuthGuard implements CanActivate { constructor(private Reflector: Reflector) {} canActivate( context: ExecutionContext ): boolean | Promise<boolean> | Observable<boolean> { const admin = this.Reflector.get<string[]>( 'role', context.getHandler() ); const request = context.switchToHttp().getRequest<Request>(); if (admin.includes(request.query.role as string)) { return true; } else { return false; } } }\"]},\"223\":{\"c\":[\"软件开发\"]},\"224\":{\"c\":[\"Nest\"]},\"225\":{\"h\":\"拦截器\"},\"226\":{\"h\":\"什么是拦截器\",\"t\":[\"拦截器（Interceptors）是 Nest 提供的一种中间件机制，用于在请求前后对数据进行拦截处理。\"]},\"227\":{\"h\":\"创建拦截器\",\"t\":[\"我们使用以下命令创建一个拦截器：\",\"nest g interceptor 拦截器名称\",\"拦截器是一个使用 @Injectable() 装饰器装饰的类。拦截器应该实现 NestInterceptor 接口。它的内容如下：\",\"// src/my-interceptor/my-interceptor.interceptor.ts import { CallHandler, ExecutionContext, Injectable, NestInterceptor, } from '@nestjs/common'; import { Observable } from 'rxjs'; @Injectable() export class MyInterceptorInterceptor implements NestInterceptor { intercept(context: ExecutionContext, next: CallHandler): Observable<any> { return next.handle(); } }\"]},\"228\":{\"h\":\"使用拦截器\",\"t\":[\"我们可以使用多种方式来使用拦截器。\"]},\"229\":{\"h\":\"控制器中使用\",\"t\":[\"我们可以将拦截器直接添加到控制器中：\",\"// src/user/user.controller.ts import { Controller, Get, Post, Body, UseInterceptors } from '@nestjs/common'; import { UserService } from './user.service'; import { CreateUserDto } from './dto/create-user.dto'; import { MyInterceptorInterceptor } from 'src/my-interceptor/my-interceptor.interceptor'; @Controller('user') @UseInterceptors(new MyInterceptorInterceptor()) export class UserController { constructor(private readonly userService: UserService) {} @Post() create(@Body() createUserDto: CreateUserDto) { return this.userService.create(createUserDto); } @Get() findAll() { return this.userService.findAll(); } }\"]},\"230\":{\"h\":\"模块中定义\",\"t\":[\"我们也可以在模块中定义拦截器：\",\"// src/app.module.ts import { Module } from '@nestjs/common'; import { AppController } from './app.controller'; import { AppService } from './app.service'; import { UserModule } from './user/user.module'; import { MyInterceptorInterceptor } from './my-interceptor/my-interceptor.interceptor'; @Module({ imports: [UserModule], controllers: [AppController], providers: [ AppService, { provide: 'APP_INTERCEPTOR', useClass: MyInterceptorInterceptor, }, ], }) export class AppModule {}\"]},\"231\":{\"h\":\"全局使用\",\"t\":[\"我们也可以在全局中使用拦截器，只需要在 main.ts 中进行配置：\",\"// src/main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { MyInterceptorInterceptor } from './my-interceptor/my-interceptor.interceptor'; async function bootstrap() { const app = await NestFactory.create(AppModule); app.useGlobalInterceptors(new MyInterceptorInterceptor()); await app.listen(3000); } bootstrap();\"]},\"232\":{\"c\":[\"软件开发\"]},\"233\":{\"c\":[\"Nest\"]},\"234\":{\"h\":\"自定义装饰器\"},\"235\":{\"h\":\"创建自定义装饰器\",\"t\":[\"Nest 允许我们创建自定义装饰器。\",\"使用以下命令来创建一个装饰器：\",\"nest g decorator 装饰器名称\",\"它的内容如下：\",\"// src/role/role.decorator.ts import { SetMetadata } from '@nestjs/common'; export const Role = (...args: string[]) => SetMetadata('role', args);\"]},\"236\":{\"h\":\"装饰器聚合\",\"t\":[\"我们可以将多个装饰器聚合。\",\"// src/auth/auth.decorator.ts import { applyDecorators } from '@nestjs/common'; export function Auth(...roles: Role[]) { return applyDecorators( SetMetadata('roles', roles), UseGuards(AuthGuard, RolesGuard), ApiBearerAuth(), ApiUnauthorizedResponse({ description: 'Unauthorized\\\"' }) ); }\"]},\"237\":{\"c\":[\"软件开发\"]},\"238\":{\"c\":[\"Nest\"]},\"239\":{\"h\":\"文件上传与下载\"},\"240\":{\"h\":\"安装需要的库\",\"t\":[\"我们使用 multer 库来实现，为了获取更好的类型提示，我们需要安装 multer 的类型支持库\",\"npm install @types/multer\",\"我们创建一个 upload 模块来演示：\",\"nest g res upload\"]},\"241\":{\"h\":\"在模块中引入 multer\",\"t\":[\"// src/upload/upload.module.ts import { Module } from '@nestjs/common'; import { UploadService } from './upload.service'; import { UploadController } from './upload.controller'; import { MulterModule } from '@nestjs/platform-express'; import { diskStorage } from 'multer'; import { extname, join } from 'path'; @Module({ // 有 register 和 registerAsync 两个方法，前者是同步的，后者是异步的 imports: [ MulterModule.register({ // 文件上传完要存放的位置 storage: diskStorage({ destination: join(__dirname, '../uploads'), // 存放文件的路径 filename: (req, file, callback) => { // 重新定义文件名，file.originalname 文件的原始名称 // extname 获取文件后缀 const fileName = `${ new Date().getTime() + extname(file.originalname) }`; // 返回新的名称，第一个参数表示错误，用 null 即可 return callback(null, fileName); }, }), }), ], controllers: [UploadController], providers: [UploadService], }) export class UploadModule {}\"]},\"242\":{\"h\":\"在控制器中使用 multer\",\"t\":[\"在控制器中使用 multer 即可实现文件的上传与下载。\"]},\"243\":{\"h\":\"单文件上传\",\"t\":[\"// src/upload/upload.controller.ts import { Controller, Post, UseInterceptors, UploadedFile, } from '@nestjs/common'; // FileInterceptor 用于单文件上传 import { FileInterceptor } from '@nestjs/platform-express'; @Controller('upload') export class UploadController { @Post('upload') // 使用 @UseInterceptors 装饰器，拦截器为 FileInterceptor，参数为 'file' @UseInterceptors(FileInterceptor('file')) // UploadedFile 装饰器用于上传单文件 upload(@UploadedFile() file) { console.log('file:', file); return true; } }\"]},\"244\":{\"h\":\"多文件上传\",\"t\":[\"// src/upload/upload.controller.ts import { Controller, Post, UseInterceptors, UploadedFiles, } from '@nestjs/common'; // FilesInterceptor 用于多文件上传 import { FilesInterceptor } from '@nestjs/platform-express'; @Controller('upload') export class UploadController { @Post('upload') // 使用 @UseInterceptors 装饰器，拦截器为 FilesInterceptor，参数为：'files' @UseInterceptors(FilesInterceptor('files')) // UploadedFiles 装饰器用于上传多文件 upload(@UploadedFiles() files: Array<Express.Multer.File>) { console.log('files:', files); return true; } }\"]},\"245\":{\"h\":\"文件直接下载\",\"t\":[\"// src/upload/upload.controller.ts import { Controller, Get, Query, Res } from '@nestjs/common'; import { join } from 'path'; import { Response } from 'express'; @Controller('upload') export class UploadController { @Get('download') download(@Res() res: Response, @Query('filename') filename: string) { const url = join(__dirname, `../uploads/${filename}`); res.download(url); } }\"]},\"246\":{\"h\":\"使用文件流下载\",\"t\":[\"需要安装 compressing 包：\",\"npm install compressing\",\"// src/upload/upload.controller.ts import { Controller, Get, Query, Res } from '@nestjs/common'; import { join } from 'path'; import { Response } from 'express'; import { zip } from 'compressing'; @Controller('upload') export class UploadController { @Get('streamDownload') async streamDownload( @Res() res: Response, @Query('filename') filename: string ) { const url = join(__dirname, `../uploads/${filename}`); const tarStream = new zip.Stream(); await tarStream.addEntry(url); res.setHeader('Content-Type', 'application/octet-stream'); res.setHeader( 'Content-Disposition', `attachment; filename=${filename}` ); tarStream.pipe(res); } }\"]},\"247\":{\"c\":[\"软件开发\"]},\"248\":{\"c\":[\"Nest\"]},\"249\":{\"h\":\"静态资源访问\"},\"250\":{\"h\":\"配置\",\"t\":[\"创建一个 public 文件夹用来存放静态资源\",\"在 main.ts 文件中调用 useStaticAssets 来实现静态资源访问：\",\"// main.ts import { NestFactory } from '@nestjs/core'; import { AppModule } from './app.module'; import { NestExpressApplication } from '@nestjs/platform-express'; async function bootstrap() { const app = await NestFactory.create<NestExpressApplication>(AppModule); app.useStaticAssets('public', { prefix: '/static' }); await app.listen(3000); } bootstrap();\"]},\"251\":{\"h\":\"访问\",\"t\":[\"在浏览器中访问 localhost:3000/static/文件 即可\"]},\"252\":{\"c\":[\"软件开发\"]},\"253\":{\"c\":[\"Nest\"]},\"254\":{\"h\":\"Nest 学习记录\",\"t\":[\"分享我学习 Nest 过程中的笔记。\"]},\"255\":{\"h\":\"理解曝光三要素\"},\"256\":{\"h\":\"相机的成像原理\",\"t\":[\"光穿过镜头到达传感器（CCD或CMOS），传感器把光记录下来，通过处理器转化成图片。\",\"传感器是由一个一个的像素点组成\",\"并不是像素越多越好，这还跟传感器的面积有关。虽然增加像素数量可以提高图像的分辨率，但如果像素密度过高，而传感器面积没有相应增加，可能会导致图像质量下降。这是因为过于密集的像素可能会互相干扰，导致图像噪点增加。\"]},\"257\":{\"h\":\"曝光三要素\",\"t\":[\"曝光三要素：光圈、快门、感光度\"]},\"258\":{\"h\":\"光圈\",\"t\":[\"光圈是相机镜头的一个孔，用于控制进光量。\",\"光圈大小：通常用f+数字来表示。f值越小表示光圈开得更大，允许更多光线进入；f值越大表示光圈较小，进入的光线较少。\",\"光圈除了能够控制进光量，还影响景深（即照片中前后物体的清晰度范围）。大光圈（低f值）产生浅景深，使得主体清晰而背景模糊，适合肖像和特定物体的特写；小光圈（高f值）产生深景深，使得前景和背景都相对清晰，适合风景摄影和需要广泛清晰度的场景。\",\"景深还与焦距、拍摄距离有关 拍摄距离越近，景深越浅，背景越模糊 焦距越长，景深越浅，背景越模糊\"]},\"259\":{\"h\":\"快门\",\"t\":[\"快门用于控制光线照射到传感器的时间长度。\",\"快门速度（Shutter Speed）表示快门打开的时间长度，通常以秒为单位。例如，1/1000秒的快门速度意味着快门每次只打开1/1000秒，而1秒的快门速度表示快门将持续打开1秒钟。它可以控制进光量从而影响曝光时间。\",\"快门速度还可以影响对动态物体的捕捉能力。较快的快门速度可以冻结运动并捕捉快速的动作，而较慢的快门速度可以模糊移动的物体，创造出动感效果。\",\"如果想抓拍，我们应该使用快门速度较短的快门。\",\"慢快门可以拍摄出镜面般的水面，绸缎般的水流。\"]},\"260\":{\"h\":\"感光度\",\"t\":[\"感光度（ISO）是相机传感器对光线的敏感程度。\",\"感光度越高，传感器对光线的敏感度就越高，图像越亮。而提高感光度会增加图像的噪点。\",\"使用感光度时需要权衡，因为虽然高感光度可以在低光环境下提供更好的曝光，但也可能引入噪点。\",\"感光度的作用就是牺牲，我们可以通过后期来减少高感光度带来的噪点。\"]},\"261\":{\"h\":\"安全快门\",\"t\":[\"安全快门指的是在手持相机拍摄时，能够避免因手抖引起的模糊的最慢快门速度。\",\"安全快门的经验值是：1/焦距\"]},\"262\":{\"c\":[\"摄影\"]},\"263\":{\"c\":[\"曝光\",\"光圈\",\"快门\",\"感光度\"]},\"264\":{\"h\":\"相机与镜头\"},\"265\":{\"h\":\"相机分类\",\"t\":[\"单反相机：可换镜头，机身偏重，续航及稳定性好\",\"微单相机（无反相机）：可换镜头，机身轻巧，操作比单反简单，续航没单反好，所见即所得\",\"卡片机：不可换镜头，便于随身携带，画质一般\"]},\"266\":{\"h\":\"画幅分类\",\"t\":[\"相机画幅指的是相机的传感器尺寸\",\"全画幅：主流画幅，画质优异\",\"半画幅：也称为APS-C画幅，主流画幅\",\"M43画幅：部分品牌使用，画幅大小小于半画幅\"]},\"267\":{\"h\":\"焦距和焦段\",\"t\":[\"镜头上一般有一串数字，单位为毫米，这里的数字指的就是焦距。数字的范围指的是焦段。\",\"焦距是指从镜头光学中心到相机传感器的距离。焦距决定了镜头的视角宽度和成像的远近。焦距的数值越小，视角越宽；数值越大，视角越窄。\",\"焦距还影响景深，焦距越长，景深越浅，背景越模糊\"]},\"268\":{\"c\":[\"摄影\"]},\"269\":{\"c\":[\"相机\",\"镜头\",\"焦距\",\"焦段\"]},\"270\":{\"h\":\"如何设定相机参数\"},\"271\":{\"h\":\"风光摄影\",\"t\":[\"清晰为主，对对焦要求不高\",\"光圈：白天建议光圈优先，此时快门速度不必担心，一定够快，如果近处有景物时，要缩小光圈（一般取f7.1以上），近处无景物而对焦点较远时，光圈可大可小。\",\"快门：夜晚建议快门优先，光线不足且手持时首先保证充足的安全快门，如果有三脚架时，可选慢快门，可以使水、云等呈现丝绸状。\",\"其他：RAW格式、ISO自动、白平衡自动、单次对焦、单点对焦、如果没有快门线，设置2秒的延迟快门\"]},\"272\":{\"h\":\"扫街（活动）摄影\",\"t\":[\"多运动的物体，对对焦要求高\",\"光线不稳定时，快门优先：1/200以上，保证移动的主体也清晰。\",\"在光照很强时，可以光圈优先，设置大光圈，快门速度自然会很高。\",\"对焦：区域选广域，来不及调整对焦点；模式选AFC连续对焦，锁住移动主体。\",\"其他：光圈与ISO自动、曝光补偿控制亮度、白平衡自动。\"]},\"273\":{\"h\":\"人像摄影\",\"t\":[\"最关心的参数是光圈，其最能影响背景虚化的效果。\"]},\"274\":{\"h\":\"参数设定整体思路\",\"t\":[\"白天光线充足时，安全快门不必担心，可光圈优先：风光f8左右，人像开到最大。\",\"光线不足时，安全快门压力大，可选快门优先，根据不同情况，设置不同的安全快门。\",\"一般快门速度越快越安全，但需要拍摄丝绸状流水时，须设置慢快门，用三脚架固定，别忘记使用ND镜。\",\"拍摄移动、随机主体时，对焦选择广域+AFC连续对焦，把对焦交给相机；拍摄风光、产品时，可选单点对焦+单次对焦。\",\"测光模式保持默认即可，白平衡可前期设置好，也可设置自动后使用后期调整。\"]},\"275\":{\"h\":\"关于光比\",\"t\":[\"光比就是背光面亮度/受光面亮度。\",\"以下问题，都与光比有关：\",\"逆光时，人脸是黑的\",\"演唱会时，艺人的脸过曝\",\"窗外过曝\",\"背景太亮/太暗\",\"解决方法：\",\"后期法：拍摄RAW格式的照片，争取更高宽容度，通过后期来调整。\",\"合成法：将两张照片合成一张。\",\"补光法：用补光灯补光。\",\"亮部或暗部放弃其一。\"]},\"276\":{\"c\":[\"摄影\"]},\"277\":{\"c\":[\"摄影技巧\"]},\"278\":{\"h\":\"如何提高构图能力\"},\"279\":{\"h\":\"构图的底层逻辑\",\"t\":[\"要学会分析画面：\",\"分析一个画面时一般有两个维度：抽象几何特征和内容。\",\"抽象几何特征：把画面的元素抽象成几何图形（点、线、面）\",\"内容：画面主题、主体、在什么环境下拍摄\"]},\"280\":{\"h\":\"如何学习\",\"t\":[\"抄绘法：拿出一张图片，把它的线条画出来。让它的秩序慢慢体现出来。然后思考我该如何拍出相似的图片\"]},\"281\":{\"c\":[\"摄影\"]},\"282\":{\"c\":[\"构图\"]},\"283\":{\"h\":\"没有摄影思路怎么办\"},\"284\":{\"h\":\"搜集好照片\",\"t\":[\"Behance\",\"Pinterest\",\"500px\",\"1px\",\"CNU\"]},\"285\":{\"h\":\"学会分析\",\"t\":[\"把图片存下来，然后分好类，再进行抄绘学习。\"]},\"286\":{\"c\":[\"摄影\"]},\"287\":{\"c\":[\"摄影思路\"]},\"288\":{\"h\":\"摄影学习记录\",\"t\":[\"强烈推荐B站UP主：摄影师泰罗，以下笔记为我观看其视频教程后所记录的笔记。\"]},\"289\":{\"h\":\"点灯大师\"},\"290\":{\"h\":\"如何使用 GPIO\",\"t\":[\"先打开时钟，然后定义一个 GPIO 类型的结构体，配置参数：引脚、模式、速率，最后调用 GPIO_Init 函数进行初始化。\"]},\"291\":{\"h\":\"点亮一颗小灯\",\"t\":[\"我们通过给小灯一个高电平，使其发光。\",\"可以使用 GPIO_SetBits 函数来给引脚赋值高电平，使用 GPIO_ResetBits 函数来给引脚赋值低电平。\",\"也可以使用 GPIO_WriteBit 函数来给引脚赋值，参数为：引脚、赋值状态。\",\"// main.c #include \\\"stm32f10x.h\\\" int main(){ // 打开时钟 RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE); // 定义一个 GPIO 类型的结构体 GPIO_InitTypeDef GPIO_Initstructure; // 配置参数：模式 GPIO_Initstructure.GPIO_Mode = GPIO_Mode_Out_PP; // 配置参数：引脚 GPIO_Initstructure.GPIO_Pin = GPIO_Pin_0; // 配置参数：速率 GPIO_Initstructure.GPIO_Speed = GPIO_Speed_50MHz; // 用 GPIO_Init 函数将结构体存储 GPIO_Init(GPIOA,&GPIO_Initstructure); while (1) { // 给 PA0 引脚低电平 // GPIO_ResetBits(GPIOA,GPIO_Pin_0); // GPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_RESET); // 给 PA0 引脚高电平 // GPIO_SetBits(GPIOA,GPIO_Pin_0); // GPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_SET); } }\"]},\"292\":{\"c\":[\"嵌入式开发\"]},\"293\":{\"c\":[\"STM32\"]},\"294\":{\"h\":\"STM32 学习记录\",\"t\":[\"分享我学习 STM32 过程中的笔记。\"]},\"295\":{\"h\":\"网盘管理神器 Alist 的安装\"},\"296\":{\"h\":\"Windows 平台\"},\"297\":{\"h\":\"下载安装包并安装\",\"t\":[\"Github 地址：Alist\",\"去 releases 里下载最新版 Windows 安装包\",\"下载完成后解压即可\",\"然后在文件资源管理器中找到 alist.exe 文件，在地址栏输入 cmd 后回车\",\"进入命令提示符后输入 alist server 运行\",\"在输出的 INFO 中可以看到密码：\",\"INFO[2023-12-02 02:21:36] Successfully created the admin user and the initial password is: 此处为密码\",\"从浏览器进入 localhost:5244 访问即可配置\"]},\"298\":{\"h\":\"添加存储\",\"t\":[\"查看官方文档即可：AList 文档\"]},\"299\":{\"h\":\"设置开机自启\",\"t\":[\"在 alist.exe 文件的目录里新建一个文件名为 alist.vbs\",\"文件内容为：\",\"Set ws = CreateObject(\\\"Wscript.Shell\\\") ws.run \\\"alist.exe server\\\",vbhide\",\"然后右键该文件创建快捷方式，将快捷方式剪切，在地址栏输入 shell:startup\",\"将快捷方式粘贴进来即可\"]},\"300\":{\"h\":\"软件更新\",\"t\":[\"去官网下载最新安装包，将 alist.exe 文件替换为最新的即可\"]},\"301\":{\"h\":\"Android 平台\"},\"302\":{\"h\":\"安装 termux\",\"t\":[\"从 F-Droid 下载 termux 和 Termux:Widget\",\"更换清华源：termux | 镜像站使用帮助 | 清华大学开源软件镜像站\"]},\"303\":{\"h\":\"安装 Alist\",\"t\":[\"在 termux 中输入如下命令：\",\"apt update && apt install alist\",\"启动 Alist：\",\"alist server\",\"在输出的 INFO 中可以看到密码：\",\"INFO[2023-12-02 02:21:36] Successfully created the admin user and the initial password is: 此处为密码\",\"进入 localhost:5244 访问即可\"]},\"304\":{\"h\":\"添加存储\",\"t\":[\"查看官方文档即可：AList 文档\"]},\"305\":{\"h\":\"设置一键启动脚本\",\"t\":[\"下载 vim：\",\"pkg install vim\",\"建立文件夹：\",\"mkdir .shortcuts\",\"进入文件夹：\",\"cd .shortcuts\",\"编辑脚本：\",\"vim start_alist.sh\",\"进入脚本编辑界面，按 i 进入编辑模式，输入以下内容：\",\"alist server\",\"输入完成后，按 esc 退出，输入 :wq 保存\",\"进入桌面，添加安卓小部件，将脚本添加到桌面即可\"]},\"306\":{\"h\":\"更新 Alist\",\"t\":[\"在 termux 中输入以下命令即可：\",\"pkg upgrade alist\"]},\"307\":{\"c\":[\"软件工具\"]},\"308\":{\"c\":[\"Alist\",\"网盘\",\"termux\"]},\"309\":{\"h\":\"Git 配置指南\"},\"310\":{\"h\":\"查看配置信息\",\"t\":[\"git config --list\"]},\"311\":{\"h\":\"配置用户信息\",\"t\":[\"git config --global user.name \\\"Your Name\\\" git config --global user.email \\\"email@example.com\\\"\"]},\"312\":{\"h\":\"配置代理\"},\"313\":{\"h\":\"设置全局代理\",\"t\":[\"git config --global http.proxy http://127.0.0.1:7890\",\"git config --global https.proxy https://127.0.0.1:7890\"]},\"314\":{\"h\":\"取消设置全局代理\",\"t\":[\"git config --global --unset http.proxy\",\"git config --global --unset https.proxy\"]},\"315\":{\"h\":\"设置对 GitHub 代理\",\"t\":[\"git config --global http.https://github.com.proxy http://127.0.0.1:7890\",\"git config --global https.https://github.com.proxy https://127.0.0.1:7890\"]},\"316\":{\"h\":\"取消设置对 GitHub 代理\",\"t\":[\"git config --global --unset http.https://github.com.proxy\",\"git config --global --unset https.https://github.com.proxy\"]},\"317\":{\"c\":[\"软件工具\"]},\"318\":{\"c\":[\"Git\"]},\"319\":{\"h\":\"我的浏览器插件合集\"},\"320\":{\"h\":\"ACG助手：专为bilibili定制的综合辅助扩展\",\"t\":[\"简介：专为 bilibili 定制的综合辅助扩展\",\"链接：ACG 助手：专为 bilibili 定制的综合辅助扩展\"]},\"321\":{\"h\":\"Bookmark Cleaner 一键清理失效书签\",\"t\":[\"简介：自动检测失效书签链接，一键清理\",\"链接：Bookmark Cleaner 一键清理失效书签\"]},\"322\":{\"h\":\"Proxy SwitchyOmega\",\"t\":[\"简介：轻松快捷地管理和切换多个代理设置\",\"链接：Proxy SwitchyOmega\"]},\"323\":{\"h\":\"uBlock Origin\",\"t\":[\"简介：一款高效的网络请求过滤工具（可以过滤网站广告），占用极低的内存和 CPU\",\"链接：uBlock Origin\"]},\"324\":{\"h\":\"扩展管理器（Extension Manager）\",\"t\":[\"简介：一键管理所有扩展\",\"链接：扩展管理器\"]},\"325\":{\"h\":\"篡改猴\",\"t\":[\"简介：使用用户脚本自由地改变网络\",\"链接：篡改猴\"]},\"326\":{\"h\":\"青柠起始页\",\"t\":[\"简介：一个简洁、美观、实用的浏览器起始页\",\"链接：青柠起始页\"]},\"327\":{\"c\":[\"软件工具\"]},\"328\":{\"c\":[\"浏览器插件\"]},\"329\":{\"h\":\"VSCode 配置指南\",\"t\":[\"记录我常用的 VSCode 基础配置\"]},\"330\":{\"h\":\"自动保存\",\"t\":[\"在设置中搜索 Auto Save，找到 Files:Auto Save 并设置为 afterDelay。\"]},\"331\":{\"h\":\"设置字体大小\",\"t\":[\"在设置中搜索 Font Size，找到 Editor:Font Size 并设置为 20。\"]},\"332\":{\"h\":\"设置字体系列\",\"t\":[\"在设置中搜索 Font Family，找到 Editor:Font Family 并设置为：JetBrains Mono,Consolas,'Courier New',monospace。\"]},\"333\":{\"h\":\"设置自动格式化\",\"t\":[\"在设置中搜索 Format On Save，找到 Editor:Format On Save 并设置为 true。\",\"在设置中搜索 Format On Type，找到 Editor:Format On Type 并设置为 true。\"]},\"334\":{\"h\":\"设置对话框样式\",\"t\":[\"在设置中搜索 Dialog Style，找到 Dialog Style 并设置为 custom。\"]},\"335\":{\"h\":\"设置光标动画样式\",\"t\":[\"在设置中搜索 Cursor Blinking，找到 Cursor Blinking 并设置为 smooth。\"]},\"336\":{\"h\":\"设置 HTML 标签关联编辑\",\"t\":[\"在设置中搜索 Linked Editing，找到 Editor:Linked Editing 并设置为 true。\"]},\"337\":{\"h\":\"设置 JavaScript 语义检查\",\"t\":[\"在设置中搜索 Check JS，找到 Implicit Project Config:Check JS 并设置为 true。\"]},\"338\":{\"h\":\"设置 JavaScript、TypeScript 格式化时添加分号\",\"t\":[\"在设置中搜索 Semicolons，找到 Format:Semicolons 并设置为 insert。\"]},\"339\":{\"c\":[\"软件工具\"]},\"340\":{\"c\":[\"VSCode\"]},\"341\":{\"h\":\"我的电脑必装软件合集\"},\"342\":{\"h\":\"微信\",\"t\":[\"简介：社交软件\",\"链接：微信，是一个生活方式\"]},\"343\":{\"h\":\"QQ\",\"t\":[\"简介：社交软件\",\"链接：QQ-轻松做自己\"]},\"344\":{\"h\":\"Geek\",\"t\":[\"简介：高效、免费、小巧的软件卸载工具\",\"链接：Geek Uninstaller - 最好的免费卸载程序\"]},\"345\":{\"h\":\"Bandizip\",\"t\":[\"简介：面向专业人士的压缩软件\",\"链接：Bandizip · 业内领先的压缩文件解决方案\"]},\"346\":{\"h\":\"Clash Verge\",\"t\":[\"简介：代理工具\",\"链接：Clash Verge\"]},\"347\":{\"h\":\"PixPin\",\"t\":[\"简介：功能强大使用简单的截图/贴图工具，帮助你提高效率\",\"链接：PixPin\"]},\"348\":{\"h\":\"Git\",\"t\":[\"简介：免费的开源分布式版本控制系统\",\"链接：Git\"]},\"349\":{\"h\":\"VSCode\",\"t\":[\"简介：免费、开源的代码编辑器\",\"链接：Visual Studio Code\"]},\"350\":{\"h\":\"Alist\",\"t\":[\"简介：支持多种存储的文件列表程序\",\"链接：AList 文档\",\"相关文章：网盘管理神器 Alist 的安装\"]},\"351\":{\"h\":\"RayLink\",\"t\":[\"简介：免费远程控制软件\",\"链接：RayLink\"]},\"352\":{\"h\":\"PotPlayer\",\"t\":[\"简介：强大的视频播放器\",\"链接：Global Potplayer\"]},\"353\":{\"h\":\"Apifox\",\"t\":[\"简介：API 设计、开发、测试一体化协作平台\",\"链接：Apifox - API 设计、开发、测试一体化协作平台\"]},\"354\":{\"c\":[\"软件工具\"]},\"355\":{\"c\":[\"电脑\"]},\"356\":{\"h\":\"如何将抖音表情包保存到微信\",\"t\":[\"抖音有很多我们喜欢的表情包，如果我们想把它们保存到微信上，该怎么操作呢？\"]},\"357\":{\"h\":\"登录抖音网页版\",\"t\":[\"在电脑浏览器中登录抖音网页版，然后将我们喜欢的表情包通过私信发送给抖音好友\"]},\"358\":{\"h\":\"打开私信页面\",\"t\":[\"在私信页面找到我们发送的表情包\",\"如何将抖音表情包保存到微信01\"]},\"359\":{\"h\":\"通过浏览器开发者工具审查元素\",\"t\":[\"按F12打开开发者工具，我们点击开发者工具左上角的按钮，然后此时我们鼠标选中要保存的表情包，即可在右面开发者工具中找到该元素，将鼠标放到右侧审查出的元素上即可获取到表情包的网络地址\",\"如何将抖音表情包保存到微信02\",\"如何将抖音表情包保存到微信03\"]},\"360\":{\"h\":\"下载并保存\",\"t\":[\"将网络地址在浏览器打开，然后右键选择另存为，即可保存表情包到本地\"]},\"361\":{\"h\":\"发送到微信并保存\",\"t\":[\"在微信中将下载的表情包发送给好友，然后将其添加到表情即可\"]},\"362\":{\"c\":[\"软件工具\"]},\"363\":{\"c\":[\"抖音\",\"微信\",\"表情包\"]},\"364\":{\"h\":\"软件工具\",\"t\":[\"分享我常用的软件工具以及一些软件工具的使用技巧。\"]},\"365\":{\"h\":\"泰山\",\"t\":[\"2024年5月21日，与好友一起夜爬泰山，幸运地在5月22日凌晨看到了日出。\"]},\"366\":{\"h\":\"登山路线\",\"t\":[\"红门上山然后乘桃花峪索道下山，如果体力好的话可以先去岱庙游览一番然后再登山（购买泰山门票可免费游览岱庙）\"]},\"367\":{\"h\":\"旅行建议\",\"t\":[\"建议轻装上阵，水可以少带，因为上面也不是很贵，厚衣服可以带一件，但是建议去南天门租大衣（30元，押金100元），可以带手电筒、登山杖。\",\"租大衣最好是找有摊位的，不然可能会有商家跑路的风险\"]},\"368\":{\"h\":\"美食推荐\",\"t\":[\"伊顺康羊蝎子馆（灵山大街店） \",\"地址：山东省泰安市泰山区财源街道肿瘤医院对面新灵山大街369-9号\",\"价格：人均40元\",\"推荐菜：羊蝎子、凉拌羊脸\",\"推荐理由：味道特别好，分量足，价格便宜\"]},\"369\":{\"c\":[\"旅行\"]},\"370\":{\"c\":[\"泰山\"]},\"371\":{\"h\":\"旅行记录\",\"t\":[\"分享旅行过程中的美好记忆\"]},\"372\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"旅行记录\",{\"0\":{\"371\":1}}],[\"旅行\",{\"2\":{\"369\":1}}],[\"旅行建议\",{\"0\":{\"367\":1}}],[\"味道特别好\",{\"1\":{\"368\":1}}],[\"推荐理由\",{\"1\":{\"368\":1}}],[\"推荐菜\",{\"1\":{\"368\":1}}],[\"凉拌羊脸\",{\"1\":{\"368\":1}}],[\"羊蝎子\",{\"1\":{\"368\":1}}],[\"价格便宜\",{\"1\":{\"368\":1}}],[\"价格\",{\"1\":{\"368\":1}}],[\"山东省泰安市泰山区财源街道肿瘤医院对面新灵山大街369\",{\"1\":{\"368\":1}}],[\"灵山大街店\",{\"1\":{\"368\":1}}],[\"伊顺康羊蝎子馆\",{\"1\":{\"368\":1}}],[\"美食推荐\",{\"0\":{\"368\":1}}],[\"美观\",{\"1\":{\"326\":1}}],[\"租大衣最好是找有摊位的\",{\"1\":{\"367\":1}}],[\"押金100元\",{\"1\":{\"367\":1}}],[\"厚衣服可以带一件\",{\"1\":{\"367\":1}}],[\"水可以少带\",{\"1\":{\"367\":1}}],[\"购买泰山门票可免费游览岱庙\",{\"1\":{\"366\":1}}],[\"红门上山然后乘桃花峪索道下山\",{\"1\":{\"366\":1}}],[\"登山杖\",{\"1\":{\"367\":1}}],[\"登山路线\",{\"0\":{\"366\":1}}],[\"登录抖音网页版\",{\"0\":{\"357\":1}}],[\"幸运地在5月22日凌晨看到了日出\",{\"1\":{\"365\":1}}],[\"泰山\",{\"0\":{\"365\":1},\"2\":{\"370\":1}}],[\"抖音\",{\"2\":{\"363\":1}}],[\"抖音有很多我们喜欢的表情包\",{\"1\":{\"356\":1}}],[\"发送到微信并保存\",{\"0\":{\"361\":1}}],[\"电脑\",{\"2\":{\"355\":1}}],[\"测试一体化协作平台\",{\"1\":{\"353\":2}}],[\"测光模式保持默认即可\",{\"1\":{\"274\":1}}],[\"强大的视频播放器\",{\"1\":{\"352\":1}}],[\"强烈推荐b站up主\",{\"1\":{\"288\":1}}],[\"支持多种存储的文件列表程序\",{\"1\":{\"350\":1}}],[\"支持整型和浮点型数字\",{\"1\":{\"104\":1}}],[\"帮助你提高效率\",{\"1\":{\"347\":1}}],[\"贴图工具\",{\"1\":{\"347\":1}}],[\"功能强大使用简单的截图\",{\"1\":{\"347\":1}}],[\"功能结合使用时\",{\"1\":{\"213\":1}}],[\"业内领先的压缩文件解决方案\",{\"1\":{\"345\":1}}],[\"免费远程控制软件\",{\"1\":{\"351\":1}}],[\"免费的开源分布式版本控制系统\",{\"1\":{\"348\":1}}],[\"免费\",{\"1\":{\"344\":1,\"349\":1}}],[\"轻松做自己\",{\"1\":{\"343\":1}}],[\"轻松快捷地管理和切换多个代理设置\",{\"1\":{\"322\":1}}],[\"社交软件\",{\"1\":{\"342\":1,\"343\":1}}],[\"格式化时添加分号\",{\"0\":{\"338\":1}}],[\"找到\",{\"1\":{\"330\":1,\"331\":1,\"332\":1,\"333\":2,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":1}}],[\"记录我常用的\",{\"1\":{\"329\":1}}],[\"青柠起始页\",{\"0\":{\"326\":1},\"1\":{\"326\":1}}],[\"篡改猴\",{\"0\":{\"325\":1},\"1\":{\"325\":1}}],[\"扩展管理器\",{\"0\":{\"324\":1},\"1\":{\"324\":1}}],[\"占用极低的内存和\",{\"1\":{\"323\":1}}],[\"助手\",{\"1\":{\"320\":1}}],[\"链接\",{\"1\":{\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"348\":1,\"349\":1,\"350\":1,\"351\":1,\"352\":1,\"353\":1}}],[\"定制的综合辅助扩展\",{\"1\":{\"320\":2}}],[\"定义一个\",{\"1\":{\"291\":1}}],[\"定义动态模块\",{\"1\":{\"186\":1}}],[\"定义\",{\"0\":{\"173\":1}}],[\"定义了就必须使用\",{\"1\":{\"112\":1}}],[\"定义在函数体外部的变量就是全局变量\",{\"1\":{\"112\":1}}],[\"定义在函数体\",{\"1\":{\"112\":1}}],[\"定义包名\",{\"1\":{\"88\":1}}],[\"专为\",{\"1\":{\"320\":2}}],[\"专为bilibili定制的综合辅助扩展\",{\"0\":{\"320\":1}}],[\"取消设置对\",{\"0\":{\"316\":1}}],[\"取消设置全局代理\",{\"0\":{\"314\":1}}],[\"代理工具\",{\"1\":{\"346\":1}}],[\"代理\",{\"0\":{\"315\":1,\"316\":1}}],[\"代码块\",{\"1\":{\"45\":2}}],[\"7890\",{\"1\":{\"313\":2,\"315\":2}}],[\"754\",{\"1\":{\"106\":2}}],[\"添加安卓小部件\",{\"1\":{\"305\":1}}],[\"添加存储\",{\"0\":{\"298\":1,\"304\":1}}],[\"保存\",{\"1\":{\"305\":1}}],[\"保证移动的主体也清晰\",{\"1\":{\"272\":1}}],[\"退出\",{\"1\":{\"305\":1}}],[\"输入\",{\"1\":{\"305\":1}}],[\"输入完成后\",{\"1\":{\"305\":1}}],[\"输入以下内容\",{\"1\":{\"305\":1}}],[\"输出结果为\",{\"1\":{\"99\":1,\"122\":7}}],[\"输出的函数\",{\"1\":{\"88\":1}}],[\"建立文件夹\",{\"1\":{\"305\":1}}],[\"建议轻装上阵\",{\"1\":{\"367\":1}}],[\"建议全局安装\",{\"1\":{\"143\":1}}],[\"建议学习顺序\",{\"1\":{\"0\":1}}],[\"启动\",{\"1\":{\"303\":1}}],[\"清华大学开源软件镜像站\",{\"1\":{\"302\":1}}],[\"清晰为主\",{\"1\":{\"271\":1}}],[\"镜像站使用帮助\",{\"1\":{\"302\":1}}],[\"镜头\",{\"2\":{\"269\":1}}],[\"镜头上一般有一串数字\",{\"1\":{\"267\":1}}],[\"软件工具\",{\"0\":{\"364\":1},\"2\":{\"307\":1,\"317\":1,\"327\":1,\"339\":1,\"354\":1,\"362\":1}}],[\"软件更新\",{\"0\":{\"300\":1}}],[\"软件开发\",{\"2\":{\"34\":1,\"40\":1,\"46\":1,\"53\":1,\"59\":1,\"65\":1,\"68\":1,\"73\":1,\"76\":1,\"85\":1,\"92\":1,\"102\":1,\"108\":1,\"114\":1,\"119\":1,\"128\":1,\"136\":1,\"139\":1,\"146\":1,\"154\":1,\"169\":1,\"181\":1,\"187\":1,\"194\":1,\"202\":1,\"214\":1,\"223\":1,\"232\":1,\"237\":1,\"247\":1,\"252\":1}}],[\"此处为密码\",{\"1\":{\"297\":1,\"303\":1}}],[\"此时快门速度不必担心\",{\"1\":{\"271\":1}}],[\"此时\",{\"1\":{\"153\":1,\"186\":2}}],[\"此时我们发现回到了刚才借的位置\",{\"1\":{\"18\":3,\"19\":2}}],[\"此时我们需要借位\",{\"1\":{\"18\":1,\"19\":1}}],[\"此时读码明显没有结束\",{\"1\":{\"18\":1,\"19\":1}}],[\"进入桌面\",{\"1\":{\"305\":1}}],[\"进入编辑模式\",{\"1\":{\"305\":1}}],[\"进入脚本编辑界面\",{\"1\":{\"305\":1}}],[\"进入文件夹\",{\"1\":{\"305\":1}}],[\"进入\",{\"1\":{\"303\":1}}],[\"进入命令提示符后输入\",{\"1\":{\"297\":1}}],[\"进入的光线较少\",{\"1\":{\"258\":1}}],[\"里下载最新版\",{\"1\":{\"297\":1}}],[\"去官网下载最新安装包\",{\"1\":{\"300\":1}}],[\"去\",{\"1\":{\"297\":1}}],[\"地址\",{\"1\":{\"297\":1,\"368\":1}}],[\"平台\",{\"0\":{\"296\":1,\"301\":1}}],[\"网盘\",{\"2\":{\"308\":1}}],[\"网盘管理神器\",{\"0\":{\"295\":1},\"1\":{\"350\":1}}],[\"网页中常见一些三角形\",{\"1\":{\"75\":1}}],[\"嵌入式开发\",{\"2\":{\"292\":1}}],[\"给\",{\"1\":{\"291\":2}}],[\"赋值状态\",{\"1\":{\"291\":1}}],[\"赋值运算符\",{\"0\":{\"126\":1},\"1\":{\"121\":1}}],[\"速率\",{\"1\":{\"290\":1,\"291\":1}}],[\"先打开时钟\",{\"1\":{\"290\":1}}],[\"先按坐标\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"再进行抄绘学习\",{\"1\":{\"285\":1}}],[\"学会分析\",{\"0\":{\"285\":1}}],[\"学习记录\",{\"0\":{\"141\":1,\"254\":1,\"294\":1}}],[\"搜集好照片\",{\"0\":{\"284\":1}}],[\"没有摄影思路怎么办\",{\"0\":{\"283\":1}}],[\"构图\",{\"2\":{\"282\":1}}],[\"构图的底层逻辑\",{\"0\":{\"279\":1}}],[\"拿出一张图片\",{\"1\":{\"280\":1}}],[\"抄绘法\",{\"1\":{\"280\":1}}],[\"面向专业人士的压缩软件\",{\"1\":{\"345\":1}}],[\"面\",{\"1\":{\"279\":1}}],[\"线\",{\"1\":{\"279\":1}}],[\"点亮一颗小灯\",{\"0\":{\"291\":1}}],[\"点灯大师\",{\"0\":{\"289\":1}}],[\"点\",{\"1\":{\"279\":1}}],[\"把图片存下来\",{\"1\":{\"285\":1}}],[\"把它的线条画出来\",{\"1\":{\"280\":1}}],[\"把画面的元素抽象成几何图形\",{\"1\":{\"279\":1}}],[\"把对焦交给相机\",{\"1\":{\"274\":1}}],[\"抽象几何特征\",{\"1\":{\"279\":1}}],[\"抽象几何特征和内容\",{\"1\":{\"279\":1}}],[\"亮部或暗部放弃其一\",{\"1\":{\"275\":1}}],[\"补光法\",{\"1\":{\"275\":1}}],[\"合成法\",{\"1\":{\"275\":1}}],[\"合集\",{\"0\":{\"32\":1}}],[\"争取更高宽容度\",{\"1\":{\"275\":1}}],[\"后回车\",{\"1\":{\"297\":1}}],[\"后期法\",{\"1\":{\"275\":1}}],[\"后者是异步的\",{\"1\":{\"241\":1}}],[\"解决方法\",{\"1\":{\"275\":1}}],[\"太暗\",{\"1\":{\"275\":1}}],[\"背景太亮\",{\"1\":{\"275\":1}}],[\"背景越模糊\",{\"1\":{\"258\":2,\"267\":1}}],[\"窗外过曝\",{\"1\":{\"275\":1}}],[\"艺人的脸过曝\",{\"1\":{\"275\":1}}],[\"演唱会时\",{\"1\":{\"275\":1}}],[\"人均40元\",{\"1\":{\"368\":1}}],[\"人脸是黑的\",{\"1\":{\"275\":1}}],[\"人像开到最大\",{\"1\":{\"274\":1}}],[\"人像摄影\",{\"0\":{\"273\":1}}],[\"逆光时\",{\"1\":{\"275\":1}}],[\"受光面亮度\",{\"1\":{\"275\":1}}],[\"产品时\",{\"1\":{\"274\":1}}],[\"产生深景深\",{\"1\":{\"258\":1}}],[\"产生浅景深\",{\"1\":{\"258\":1}}],[\"随机主体时\",{\"1\":{\"274\":1}}],[\"拍摄raw格式的照片\",{\"1\":{\"275\":1}}],[\"拍摄风光\",{\"1\":{\"274\":1}}],[\"拍摄移动\",{\"1\":{\"274\":1}}],[\"拍摄距离越近\",{\"1\":{\"258\":1}}],[\"拍摄距离有关\",{\"1\":{\"258\":1}}],[\"别忘记使用nd镜\",{\"1\":{\"274\":1}}],[\"别名提供者\",{\"0\":{\"180\":1}}],[\"须设置慢快门\",{\"1\":{\"274\":1}}],[\"根据不同情况\",{\"1\":{\"274\":1}}],[\"根路由排除\",{\"1\":{\"160\":1}}],[\"风光f8左右\",{\"1\":{\"274\":1}}],[\"风光摄影\",{\"0\":{\"271\":1}}],[\"锁住移动主体\",{\"1\":{\"272\":1}}],[\"模式\",{\"1\":{\"290\":1,\"291\":1}}],[\"模式选afc连续对焦\",{\"1\":{\"272\":1}}],[\"模块来演示\",{\"1\":{\"240\":1}}],[\"模块中定义\",{\"0\":{\"230\":1}}],[\"模块内共享使用\",{\"1\":{\"184\":1}}],[\"模块是一个类\",{\"1\":{\"184\":1}}],[\"模块\",{\"0\":{\"183\":1},\"1\":{\"184\":1,\"186\":1}}],[\"区域选广域\",{\"1\":{\"272\":1}}],[\"活动\",{\"0\":{\"272\":1}}],[\"扫街\",{\"0\":{\"272\":1}}],[\"云等呈现丝绸状\",{\"1\":{\"271\":1}}],[\"夜晚建议快门优先\",{\"1\":{\"271\":1}}],[\"近处无景物而对焦点较远时\",{\"1\":{\"271\":1}}],[\"白平衡可前期设置好\",{\"1\":{\"274\":1}}],[\"白平衡自动\",{\"1\":{\"271\":1,\"272\":1}}],[\"白天光线充足时\",{\"1\":{\"274\":1}}],[\"白天建议光圈优先\",{\"1\":{\"271\":1}}],[\"白黄>红橙>蓝绿\",{\"1\":{\"13\":1}}],[\"焦段\",{\"2\":{\"269\":1}}],[\"焦距还影响景深\",{\"1\":{\"267\":1}}],[\"焦距的数值越小\",{\"1\":{\"267\":1}}],[\"焦距决定了镜头的视角宽度和成像的远近\",{\"1\":{\"267\":1}}],[\"焦距是指从镜头光学中心到相机传感器的距离\",{\"1\":{\"267\":1}}],[\"焦距和焦段\",{\"0\":{\"267\":1}}],[\"焦距\",{\"1\":{\"261\":1},\"2\":{\"269\":1}}],[\"焦距越长\",{\"1\":{\"258\":1,\"267\":1}}],[\"视角越窄\",{\"1\":{\"267\":1}}],[\"视角越宽\",{\"1\":{\"267\":1}}],[\"部分品牌使用\",{\"1\":{\"266\":1}}],[\"也可以使用\",{\"1\":{\"291\":1}}],[\"也可设置自动后使用后期调整\",{\"1\":{\"274\":1}}],[\"也称为aps\",{\"1\":{\"266\":1}}],[\"也就是从编码的\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"半画幅\",{\"1\":{\"266\":1}}],[\"主体\",{\"1\":{\"279\":1}}],[\"主流画幅\",{\"1\":{\"266\":2}}],[\"主要用于给模块传递参数\",{\"1\":{\"186\":1}}],[\"全画幅\",{\"1\":{\"266\":1}}],[\"全局绑定\",{\"0\":{\"212\":1}}],[\"全局使用\",{\"0\":{\"201\":1,\"231\":1}}],[\"全局中间件是应用到每个路由的处理程序\",{\"1\":{\"193\":1}}],[\"全局中间件\",{\"0\":{\"193\":1}}],[\"全局模块\",{\"0\":{\"185\":1}}],[\"全局变量\",{\"1\":{\"111\":1}}],[\"画面主题\",{\"1\":{\"279\":1}}],[\"画幅大小小于半画幅\",{\"1\":{\"266\":1}}],[\"画幅分类\",{\"0\":{\"266\":1}}],[\"画质优异\",{\"1\":{\"266\":1}}],[\"画质一般\",{\"1\":{\"265\":1}}],[\"便于随身携带\",{\"1\":{\"265\":1}}],[\"卡片机\",{\"1\":{\"265\":1}}],[\"续航没单反好\",{\"1\":{\"265\":1}}],[\"续航及稳定性好\",{\"1\":{\"265\":1}}],[\"操作比单反简单\",{\"1\":{\"265\":1}}],[\"机身轻巧\",{\"1\":{\"265\":1}}],[\"机身偏重\",{\"1\":{\"265\":1}}],[\"微单相机\",{\"1\":{\"265\":1}}],[\"微信\",{\"0\":{\"342\":1},\"1\":{\"31\":1,\"342\":1},\"2\":{\"363\":1}}],[\"曝光补偿控制亮度\",{\"1\":{\"272\":1}}],[\"曝光\",{\"2\":{\"263\":1}}],[\"曝光三要素\",{\"0\":{\"257\":1},\"1\":{\"257\":1}}],[\"能够避免因手抖引起的模糊的最慢快门速度\",{\"1\":{\"261\":1}}],[\"安全快门压力大\",{\"1\":{\"274\":1}}],[\"安全快门不必担心\",{\"1\":{\"274\":1}}],[\"安全快门的经验值是\",{\"1\":{\"261\":1}}],[\"安全快门指的是在手持相机拍摄时\",{\"1\":{\"261\":1}}],[\"安全快门\",{\"0\":{\"261\":1}}],[\"安装包\",{\"1\":{\"297\":1}}],[\"安装需要的库\",{\"0\":{\"240\":1}}],[\"安装\",{\"0\":{\"143\":1,\"302\":1,\"303\":1},\"1\":{\"84\":1,\"213\":1}}],[\"安装代码编辑器\",{\"0\":{\"84\":1}}],[\"因为上面也不是很贵\",{\"1\":{\"367\":1}}],[\"因为虽然高感光度可以在低光环境下提供更好的曝光\",{\"1\":{\"260\":1}}],[\"因此它们是引用相同的内存地址\",{\"1\":{\"113\":1}}],[\"图像越亮\",{\"1\":{\"260\":1}}],[\"图表占满整个容器\",{\"0\":{\"67\":1}}],[\"绸缎般的水流\",{\"1\":{\"259\":1}}],[\"慢快门可以拍摄出镜面般的水面\",{\"1\":{\"259\":1}}],[\"创造出动感效果\",{\"1\":{\"259\":1}}],[\"创建一个\",{\"1\":{\"250\":1}}],[\"创建一个类\",{\"1\":{\"213\":1}}],[\"创建自定义装饰器\",{\"0\":{\"235\":1}}],[\"创建拦截器\",{\"0\":{\"227\":1}}],[\"创建守卫\",{\"0\":{\"218\":1}}],[\"创建数据传输对象\",{\"1\":{\"213\":1}}],[\"创建异常过滤器\",{\"0\":{\"198\":1}}],[\"创建\",{\"0\":{\"142\":1,\"144\":1},\"1\":{\"152\":1}}],[\"较快的快门速度可以冻结运动并捕捉快速的动作\",{\"1\":{\"259\":1}}],[\"景深越浅\",{\"1\":{\"258\":2,\"267\":1}}],[\"景深还与焦距\",{\"1\":{\"258\":1}}],[\"小巧的软件卸载工具\",{\"1\":{\"344\":1}}],[\"小光圈\",{\"1\":{\"258\":1}}],[\"小赵\",{\"1\":{\"99\":2}}],[\"适合风景摄影和需要广泛清晰度的场景\",{\"1\":{\"258\":1}}],[\"适合肖像和特定物体的特写\",{\"1\":{\"258\":1}}],[\"适用于\",{\"1\":{\"72\":1}}],[\"使其发光\",{\"1\":{\"291\":1}}],[\"使得前景和背景都相对清晰\",{\"1\":{\"258\":1}}],[\"使得主体清晰而背景模糊\",{\"1\":{\"258\":1}}],[\"使用用户脚本自由地改变网络\",{\"1\":{\"325\":1}}],[\"使用感光度时需要权衡\",{\"1\":{\"260\":1}}],[\"使用文件流下载\",{\"0\":{\"246\":1}}],[\"使用以下命令来创建一个装饰器\",{\"1\":{\"235\":1}}],[\"使用拦截器\",{\"0\":{\"228\":1}}],[\"使用装饰器来定义验证规则\",{\"1\":{\"213\":1}}],[\"使用如下命令创建一个自定义管道\",{\"1\":{\"207\":1}}],[\"使用异常过滤器\",{\"0\":{\"199\":1}}],[\"使用下面的命令创建一个中间件\",{\"1\":{\"191\":1}}],[\"使用字符串标记提供者\",{\"1\":{\"177\":1}}],[\"使用依赖注入\",{\"1\":{\"152\":1}}],[\"使用逗号分割它们\",{\"1\":{\"134\":1}}],[\"使用text\",{\"1\":{\"72\":1}}],[\"使用display\",{\"1\":{\"72\":1}}],[\"使用\",{\"0\":{\"43\":1,\"44\":1},\"1\":{\"71\":2,\"72\":2,\"75\":1,\"84\":1,\"113\":1,\"152\":1,\"153\":1,\"157\":1,\"159\":6,\"162\":1,\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"176\":1,\"177\":1,\"179\":2,\"180\":2,\"185\":1,\"200\":1,\"201\":1,\"220\":1,\"243\":1,\"244\":1,\"291\":1}}],[\"低f值\",{\"1\":{\"258\":1}}],[\"低位补0\",{\"1\":{\"125\":1}}],[\"大光圈\",{\"1\":{\"258\":1}}],[\"允许更多光线进入\",{\"1\":{\"258\":1}}],[\"允许我们创建自定义装饰器\",{\"1\":{\"235\":1}}],[\"通常以秒为单位\",{\"1\":{\"259\":1}}],[\"通常用f+数字来表示\",{\"1\":{\"258\":1}}],[\"通过浏览器开发者工具审查元素\",{\"0\":{\"359\":1}}],[\"通过后期来调整\",{\"1\":{\"275\":1}}],[\"通过处理器转化成图片\",{\"1\":{\"256\":1}}],[\"通过使用管道\",{\"1\":{\"205\":1}}],[\"通过在目标对象上添加装饰器\",{\"1\":{\"150\":1}}],[\"通过将依赖项\",{\"1\":{\"150\":1}}],[\"通过\",{\"1\":{\"67\":1,\"149\":1,\"159\":5}}],[\"感光度的作用就是牺牲\",{\"1\":{\"260\":1}}],[\"感光度越高\",{\"1\":{\"260\":1}}],[\"感光度\",{\"0\":{\"260\":1},\"1\":{\"257\":1,\"260\":1},\"2\":{\"263\":1}}],[\"快门优先\",{\"1\":{\"272\":1}}],[\"快门速度自然会很高\",{\"1\":{\"272\":1}}],[\"快门速度还可以影响对动态物体的捕捉能力\",{\"1\":{\"259\":1}}],[\"快门速度\",{\"1\":{\"259\":1}}],[\"快门用于控制光线照射到传感器的时间长度\",{\"1\":{\"259\":1}}],[\"快门\",{\"0\":{\"259\":1},\"1\":{\"257\":1,\"271\":1},\"2\":{\"263\":1}}],[\"光比就是背光面亮度\",{\"1\":{\"275\":1}}],[\"光线不足时\",{\"1\":{\"274\":1}}],[\"光线不足且手持时首先保证充足的安全快门\",{\"1\":{\"271\":1}}],[\"光线不稳定时\",{\"1\":{\"272\":1}}],[\"光圈与iso自动\",{\"1\":{\"272\":1}}],[\"光圈可大可小\",{\"1\":{\"271\":1}}],[\"光圈除了能够控制进光量\",{\"1\":{\"258\":1}}],[\"光圈大小\",{\"1\":{\"258\":1}}],[\"光圈是相机镜头的一个孔\",{\"1\":{\"258\":1}}],[\"光圈\",{\"0\":{\"258\":1},\"1\":{\"257\":1,\"271\":1},\"2\":{\"263\":1}}],[\"光穿过镜头到达传感器\",{\"1\":{\"256\":1}}],[\"虽然增加像素数量可以提高图像的分辨率\",{\"1\":{\"256\":1}}],[\"虽然不是\",{\"1\":{\"18\":1,\"19\":1}}],[\"传感器对光线的敏感度就越高\",{\"1\":{\"260\":1}}],[\"传感器是由一个一个的像素点组成\",{\"1\":{\"256\":1}}],[\"传感器把光记录下来\",{\"1\":{\"256\":1}}],[\"传入参数\",{\"1\":{\"186\":1}}],[\"理解曝光三要素\",{\"0\":{\"255\":1}}],[\"静态资源访问\",{\"0\":{\"249\":1}}],[\"zip\",{\"1\":{\"246\":2}}],[\"zhf521\",{\"1\":{\"31\":1}}],[\"zhf5256\",{\"1\":{\"31\":1}}],[\"需要安装\",{\"1\":{\"246\":1}}],[\"需要在模块中进行注册\",{\"1\":{\"153\":1}}],[\"单点对焦\",{\"1\":{\"271\":1}}],[\"单次对焦\",{\"1\":{\"271\":1}}],[\"单位为毫米\",{\"1\":{\"267\":1}}],[\"单反相机\",{\"1\":{\"265\":1}}],[\"单文件上传\",{\"0\":{\"243\":1}}],[\"单行注释\",{\"1\":{\"97\":1}}],[\"单行文本溢出显示省略号\",{\"0\":{\"71\":1}}],[\"即照片中前后物体的清晰度范围\",{\"1\":{\"258\":1}}],[\"即可保存表情包到本地\",{\"1\":{\"360\":1}}],[\"即可在右面开发者工具中找到该元素\",{\"1\":{\"359\":1}}],[\"即可实现文件的上传与下载\",{\"1\":{\"242\":1}}],[\"即可\",{\"1\":{\"241\":1,\"251\":1}}],[\"即对象之间的依赖关系\",{\"1\":{\"150\":1}}],[\"用补光灯补光\",{\"1\":{\"275\":1}}],[\"用三脚架固定\",{\"1\":{\"274\":1}}],[\"用\",{\"1\":{\"241\":1,\"291\":1}}],[\"用于控制进光量\",{\"1\":{\"258\":1}}],[\"用于多文件上传\",{\"1\":{\"244\":1}}],[\"用于单文件上传\",{\"1\":{\"243\":1}}],[\"用于在请求前后对数据进行拦截处理\",{\"1\":{\"226\":1}}],[\"用于对象和值的验证\",{\"1\":{\"213\":1}}],[\"用于帮助我们创建\",{\"1\":{\"143\":1}}],[\"用于存放一个指针\",{\"1\":{\"107\":1}}],[\"用于将字符串输出到控制台\",{\"1\":{\"88\":1}}],[\"用于实现文字跑马灯效果\",{\"1\":{\"49\":1}}],[\"返回新的名称\",{\"1\":{\"241\":1}}],[\"返回变量存储地址\",{\"1\":{\"127\":1}}],[\"重新定义文件名\",{\"1\":{\"241\":1}}],[\"存放文件的路径\",{\"1\":{\"241\":1}}],[\"存在翻色\",{\"0\":{\"19\":1}}],[\"存在小循环\",{\"0\":{\"18\":1}}],[\"前者是同步的\",{\"1\":{\"241\":1}}],[\"拦截器为\",{\"1\":{\"243\":1,\"244\":1}}],[\"拦截器应该实现\",{\"1\":{\"227\":1}}],[\"拦截器是一个使用\",{\"1\":{\"227\":1}}],[\"拦截器名称\",{\"1\":{\"227\":1}}],[\"拦截器\",{\"0\":{\"225\":1},\"1\":{\"226\":1}}],[\"读取元数据\",{\"1\":{\"222\":1}}],[\"反射器实现角色控制守卫\",{\"0\":{\"222\":1}}],[\"角色\",{\"1\":{\"217\":1}}],[\"角块\",{\"1\":{\"12\":1,\"13\":1}}],[\"应用于全局\",{\"0\":{\"221\":1}}],[\"应用于控制器或单个路由\",{\"0\":{\"220\":1}}],[\"应用守卫\",{\"0\":{\"219\":1}}],[\"应用中的路由进行验证的\",{\"1\":{\"217\":1}}],[\"应用程序中使用依赖注入\",{\"1\":{\"153\":1}}],[\"应用程序\",{\"1\":{\"143\":1,\"153\":1}}],[\"应用程序都包含一个名为\",{\"1\":{\"88\":1}}],[\"守卫应该实现\",{\"1\":{\"218\":1}}],[\"守卫是一个使用\",{\"1\":{\"218\":1}}],[\"守卫名称\",{\"1\":{\"218\":1}}],[\"守卫根据运行时出现的某些条件\",{\"1\":{\"217\":1}}],[\"守卫\",{\"0\":{\"216\":1},\"1\":{\"217\":1}}],[\"库来实现\",{\"1\":{\"240\":1}}],[\"库\",{\"1\":{\"213\":3}}],[\"只需要在\",{\"1\":{\"231\":1}}],[\"只需要继承\",{\"1\":{\"207\":1}}],[\"只保留需要的边框颜色\",{\"1\":{\"75\":1}}],[\"提供的一种中间件机制\",{\"1\":{\"226\":1}}],[\"提供的一种用于数据转换和验证的功能\",{\"1\":{\"205\":1}}],[\"提供了\",{\"1\":{\"222\":1}}],[\"提供者可以在模块的\",{\"1\":{\"173\":1}}],[\"提供者可以是任何类\",{\"1\":{\"172\":1}}],[\"提供者\",{\"0\":{\"171\":1},\"1\":{\"184\":1}}],[\"管道有多种绑定方式\",{\"1\":{\"208\":1}}],[\"管道的绑定方式\",{\"0\":{\"208\":1}}],[\"管道内容如下\",{\"1\":{\"207\":1}}],[\"管道名称\",{\"1\":{\"207\":1}}],[\"管道\",{\"0\":{\"204\":1},\"1\":{\"205\":1}}],[\"过滤器内容如下\",{\"1\":{\"198\":1}}],[\"过滤器会捕获并处理该异常\",{\"1\":{\"197\":1}}],[\"过程中的笔记\",{\"1\":{\"141\":1,\"254\":1,\"294\":1}}],[\"异常过滤器\",{\"0\":{\"196\":1},\"1\":{\"197\":1}}],[\"异常捕获\",{\"0\":{\"42\":1}}],[\"局部使用\",{\"0\":{\"200\":1}}],[\"局部中间件\",{\"0\":{\"192\":1}}],[\"局部变量和全局变量\",{\"0\":{\"112\":1}}],[\"让它的秩序慢慢体现出来\",{\"1\":{\"280\":1}}],[\"让我们创建一个简单的普通中间件\",{\"1\":{\"191\":1}}],[\"让盒子宽度自适应文字内容\",{\"1\":{\"62\":1}}],[\"普通中间件\",{\"0\":{\"191\":1}}],[\"调用堆栈中的下一个中间件函数\",{\"1\":{\"190\":1}}],[\"响应周期\",{\"1\":{\"190\":2}}],[\"响应头\",{\"0\":{\"168\":1}}],[\"对焦选择广域+afc连续对焦\",{\"1\":{\"274\":1}}],[\"对焦\",{\"1\":{\"272\":1}}],[\"对对焦要求高\",{\"1\":{\"272\":1}}],[\"对对焦要求不高\",{\"1\":{\"271\":1}}],[\"对请求和响应对象进行更改\",{\"1\":{\"190\":1}}],[\"对象之间的依赖关系由代码中显式地创建和配置\",{\"1\":{\"152\":1}}],[\"对象之间的依赖关系由容器管理\",{\"1\":{\"149\":1}}],[\"执行任何代码\",{\"1\":{\"190\":1}}],[\"执行的代码\",{\"1\":{\"135\":4}}],[\"默认是使用静态模块创建的\",{\"1\":{\"186\":1}}],[\"默认情况下\",{\"1\":{\"134\":1}}],[\"动态模块是指在运行时动态创建的模块\",{\"1\":{\"186\":1}}],[\"动态模块\",{\"0\":{\"186\":1}}],[\"动画持续时间\",{\"1\":{\"50\":1}}],[\"声明模块的控制器\",{\"1\":{\"184\":1}}],[\"声明并赋值\",{\"1\":{\"111\":1}}],[\"导致图像噪点增加\",{\"1\":{\"256\":1}}],[\"导出其他模块需要共享的\",{\"1\":{\"184\":1}}],[\"导入其他模块\",{\"1\":{\"184\":1}}],[\"导航栏固定在顶部\",{\"1\":{\"56\":1}}],[\"该怎么操作呢\",{\"1\":{\"356\":1}}],[\"该函数将返回一个提供者实例\",{\"1\":{\"179\":1}}],[\"该类将被实例化并用作提供者\",{\"1\":{\"178\":1}}],[\"列表中以相同的顺序将实例作为参数传递给工厂函数\",{\"1\":{\"179\":1}}],[\"工厂函数可以接受\",{\"1\":{\"179\":1}}],[\"工厂提供者\",{\"0\":{\"179\":1}}],[\"选项来指定一个工厂函数\",{\"1\":{\"179\":1}}],[\"选项来指定一个类\",{\"1\":{\"178\":1}}],[\"选择适合操作系统的安装包进行下载并按提示安装\",{\"1\":{\"81\":1}}],[\"非类提供者\",{\"0\":{\"177\":1}}],[\"非全局变量\",{\"1\":{\"111\":1}}],[\"完整方式\",{\"1\":{\"174\":1}}],[\"简介\",{\"1\":{\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"348\":1,\"349\":1,\"350\":1,\"351\":1,\"352\":1,\"353\":1}}],[\"简写方式\",{\"1\":{\"174\":1}}],[\"简单的赋值运算符\",{\"1\":{\"126\":1}}],[\"什么是拦截器\",{\"0\":{\"226\":1}}],[\"什么是守卫\",{\"0\":{\"217\":1}}],[\"什么是管道\",{\"0\":{\"205\":1}}],[\"什么是异常过滤器\",{\"0\":{\"197\":1}}],[\"什么是中间件\",{\"0\":{\"190\":1}}],[\"什么是模块\",{\"0\":{\"184\":1}}],[\"什么是提供者\",{\"0\":{\"172\":1}}],[\"什么是控制器\",{\"0\":{\"157\":1}}],[\"状态码\",{\"0\":{\"167\":1}}],[\"请求路径\",{\"1\":{\"192\":1}}],[\"请求路径和方法\",{\"1\":{\"192\":1}}],[\"请求后\",{\"1\":{\"191\":1}}],[\"请求前\",{\"1\":{\"191\":1}}],[\"请求将被挂起\",{\"1\":{\"190\":1}}],[\"请求对象\",{\"0\":{\"166\":1}}],[\"请求头\",{\"0\":{\"165\":1}}],[\"请求体\",{\"0\":{\"164\":1}}],[\"装饰器用于上传多文件\",{\"1\":{\"244\":1}}],[\"装饰器用于上传单文件\",{\"1\":{\"243\":1}}],[\"装饰器\",{\"1\":{\"243\":1,\"244\":1}}],[\"装饰器聚合\",{\"0\":{\"236\":1}}],[\"装饰器名称\",{\"1\":{\"235\":1}}],[\"装饰器将定制元数据附加到路由处理程序\",{\"1\":{\"222\":1}}],[\"装饰器将异常过滤器应用于整个应用程序\",{\"1\":{\"201\":1}}],[\"装饰器将异常过滤器应用于路由或控制器\",{\"1\":{\"200\":1}}],[\"装饰器装饰的类\",{\"1\":{\"218\":1,\"227\":1}}],[\"装饰器定义的模块为全局模块\",{\"1\":{\"185\":1}}],[\"装饰器接受一个描述模块属性的对象\",{\"1\":{\"184\":1}}],[\"装饰器进行装饰\",{\"1\":{\"184\":1}}],[\"装饰器注入提供者即可\",{\"1\":{\"179\":1,\"180\":1}}],[\"装饰器注入标记为\",{\"1\":{\"177\":1}}],[\"装饰器和\",{\"1\":{\"163\":1}}],[\"装饰器来应用守卫\",{\"1\":{\"220\":1}}],[\"装饰器来将管道绑定到路由上\",{\"1\":{\"210\":1}}],[\"装饰器来将管道绑定到控制器上\",{\"1\":{\"209\":1}}],[\"装饰器来进行依赖注入\",{\"1\":{\"186\":1}}],[\"装饰器来定义的\",{\"1\":{\"174\":1}}],[\"装饰器来定义控制器\",{\"1\":{\"157\":1}}],[\"装饰器来设置响应头\",{\"1\":{\"168\":1}}],[\"装饰器来设置状态码\",{\"1\":{\"167\":1}}],[\"装饰器来获取请求对象\",{\"1\":{\"166\":1}}],[\"装饰器来获取请求头\",{\"1\":{\"164\":1,\"165\":1}}],[\"装饰器来获取查询字符串参数\",{\"1\":{\"162\":1}}],[\"装饰器来标记它为可注入的服务\",{\"1\":{\"153\":1}}],[\"参数设定整体思路\",{\"0\":{\"274\":1}}],[\"参数为\",{\"1\":{\"243\":1,\"244\":1,\"291\":1}}],[\"参数名\",{\"1\":{\"163\":1}}],[\"参数\",{\"0\":{\"163\":1},\"1\":{\"163\":1,\"179\":1}}],[\"$\",{\"1\":{\"162\":4,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"245\":1,\"246\":1}}],[\"查询字符串\",{\"0\":{\"162\":1}}],[\"查看配置信息\",{\"0\":{\"310\":1}}],[\"查看官方文档即可\",{\"1\":{\"298\":1,\"304\":1}}],[\"查看运行情况\",{\"1\":{\"145\":1}}],[\"查看当前镜像源\",{\"0\":{\"37\":1}}],[\"处理请求参数\",{\"0\":{\"161\":1}}],[\"路径来获取\",{\"1\":{\"163\":1}}],[\"路径来删除数据\",{\"1\":{\"159\":1}}],[\"路径来更新数据\",{\"1\":{\"159\":1}}],[\"路径来访问\",{\"1\":{\"159\":2}}],[\"路径来创建数据\",{\"1\":{\"159\":1}}],[\"路由绑定\",{\"0\":{\"210\":1}}],[\"路由\",{\"0\":{\"158\":1}}],[\"方法参数绑定\",{\"0\":{\"211\":1}}],[\"方法即可\",{\"1\":{\"207\":1}}],[\"方法\",{\"1\":{\"159\":5}}],[\"等装饰器来指定属性的类型和验证条件\",{\"1\":{\"213\":1}}],[\"等装饰器来定义路由\",{\"1\":{\"159\":1}}],[\"等于\",{\"1\":{\"118\":1,\"126\":10}}],[\"基础配置\",{\"1\":{\"329\":1}}],[\"基础语法\",{\"0\":{\"94\":1}}],[\"基本使用\",{\"0\":{\"159\":1}}],[\"负责处理传入的请求和向客户端返回响应\",{\"1\":{\"157\":1}}],[\"控制器中使用\",{\"0\":{\"229\":1}}],[\"控制器绑定\",{\"0\":{\"209\":1}}],[\"控制器\",{\"0\":{\"156\":1},\"1\":{\"157\":1,\"192\":1}}],[\"控制反转是一种设计思想\",{\"1\":{\"151\":1}}],[\"控制反转\",{\"0\":{\"149\":1},\"1\":{\"149\":1}}],[\"控制反转与依赖注入\",{\"0\":{\"148\":1}}],[\"被创建时\",{\"1\":{\"153\":1}}],[\"作为一个提供者\",{\"1\":{\"153\":1}}],[\"然后将其添加到表情即可\",{\"1\":{\"361\":1}}],[\"然后将我们喜欢的表情包通过私信发送给抖音好友\",{\"1\":{\"357\":1}}],[\"然后右键选择另存为\",{\"1\":{\"360\":1}}],[\"然后右键该文件创建快捷方式\",{\"1\":{\"299\":1}}],[\"然后此时我们鼠标选中要保存的表情包\",{\"1\":{\"359\":1}}],[\"然后在文件资源管理器中找到\",{\"1\":{\"297\":1}}],[\"然后定义一个\",{\"1\":{\"290\":1}}],[\"然后分好类\",{\"1\":{\"285\":1}}],[\"然后思考我该如何拍出相似的图片\",{\"1\":{\"280\":1}}],[\"然后再将其传递给服务层\",{\"1\":{\"205\":1}}],[\"然后动态生成模块的内容\",{\"1\":{\"186\":1}}],[\"然后\",{\"1\":{\"153\":1}}],[\"然后使用\",{\"1\":{\"153\":1}}],[\"然后看\",{\"1\":{\"17\":10,\"18\":11,\"19\":10,\"23\":10}}],[\"展示了如何在\",{\"1\":{\"153\":1}}],[\"现在我们来看一下使用依赖注入后的代码\",{\"1\":{\"152\":1}}],[\"现在我们使用封装好的工具函数\",{\"1\":{\"45\":1}}],[\"硬编码依赖\",{\"1\":{\"152\":2}}],[\"渲染中\",{\"1\":{\"152\":2}}],[\"渲染文本内容\",{\"1\":{\"50\":1}}],[\"首先\",{\"1\":{\"153\":1}}],[\"首先我们来看一下传统的开发方式\",{\"1\":{\"152\":1}}],[\"首字母不能是数字\",{\"1\":{\"110\":1}}],[\"设计\",{\"1\":{\"353\":2}}],[\"设计模式\",{\"1\":{\"151\":1}}],[\"设置\",{\"0\":{\"336\":1,\"337\":1,\"338\":1}}],[\"设置光标动画样式\",{\"0\":{\"335\":1}}],[\"设置自动格式化\",{\"0\":{\"333\":1}}],[\"设置字体系列\",{\"0\":{\"332\":1}}],[\"设置字体大小\",{\"0\":{\"331\":1}}],[\"设置对话框样式\",{\"0\":{\"334\":1}}],[\"设置对\",{\"0\":{\"315\":1}}],[\"设置全局代理\",{\"0\":{\"313\":1}}],[\"设置一键启动脚本\",{\"0\":{\"305\":1}}],[\"设置开机自启\",{\"0\":{\"299\":1}}],[\"设置不同的安全快门\",{\"1\":{\"274\":1}}],[\"设置大光圈\",{\"1\":{\"272\":1}}],[\"设置2秒的延迟快门\",{\"1\":{\"271\":1}}],[\"设置路由以\",{\"1\":{\"160\":1}}],[\"设置路由前缀\",{\"0\":{\"160\":1}}],[\"设置该盒子作为弹性伸缩盒子模型显示\",{\"1\":{\"72\":1}}],[\"设置z\",{\"1\":{\"57\":1}}],[\"设置渐变\",{\"1\":{\"33\":1}}],[\"两者关系\",{\"0\":{\"151\":1}}],[\"两个方法\",{\"1\":{\"241\":1}}],[\"两个变量将指向相同的数据\",{\"1\":{\"113\":1}}],[\"两个联想词之间用某个动词连接\",{\"1\":{\"5\":1}}],[\"依赖注入的实现\",{\"0\":{\"152\":1}}],[\"依赖注入主要是通过装饰器\",{\"1\":{\"150\":1}}],[\"依赖注入\",{\"0\":{\"150\":1},\"1\":{\"150\":1,\"153\":1}}],[\"容器或使用模拟对象替换实际实现非常有用\",{\"1\":{\"176\":1}}],[\"容器会查找\",{\"1\":{\"153\":1}}],[\"容器自动注入它\",{\"1\":{\"153\":1}}],[\"容器实现的\",{\"1\":{\"153\":1}}],[\"容器负责管理对象的生命周期和依赖关系\",{\"1\":{\"149\":1}}],[\"容器\",{\"1\":{\"149\":1}}],[\"旨在将对象的创建和管理交给外部容器\",{\"1\":{\"149\":1}}],[\"打开私信页面\",{\"0\":{\"358\":1}}],[\"打开时钟\",{\"1\":{\"291\":1}}],[\"打开\",{\"1\":{\"145\":1}}],[\"打乱完成后\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"打乱如下\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"运行\",{\"1\":{\"297\":1}}],[\"运行中\",{\"1\":{\"152\":2}}],[\"运行项目\",{\"0\":{\"145\":1}}],[\"运算符用于在程序运行时执行数学或逻辑运算\",{\"1\":{\"121\":1}}],[\"运算符和表达式\",{\"1\":{\"101\":1}}],[\"运算符\",{\"0\":{\"121\":1},\"1\":{\"100\":1,\"122\":1,\"123\":1,\"124\":4,\"125\":1,\"126\":1,\"127\":1}}],[\"有\",{\"1\":{\"241\":1}}],[\"有时候\",{\"1\":{\"179\":1}}],[\"有时我们希望灵活使用字符串作为提供者标记\",{\"1\":{\"177\":1}}],[\"有多种方式来定义提供者\",{\"1\":{\"173\":1}}],[\"有新版本时可以执行以下命令\",{\"1\":{\"143\":1}}],[\"有符号\",{\"1\":{\"105\":4}}],[\"更换清华源\",{\"1\":{\"302\":1}}],[\"更换淘宝镜像源\",{\"0\":{\"38\":1}}],[\"更新\",{\"0\":{\"306\":1},\"1\":{\"143\":1}}],[\"项目\",{\"0\":{\"142\":1,\"144\":1}}],[\"循环语句\",{\"0\":{\"138\":1}}],[\"子句\",{\"1\":{\"135\":2}}],[\"会自动使用\",{\"1\":{\"213\":1}}],[\"会自动处理依赖注入\",{\"1\":{\"153\":1}}],[\"会随机公平地选出一个执行\",{\"1\":{\"135\":1}}],[\"会进行复制操作\",{\"1\":{\"113\":1}}],[\"都与光比有关\",{\"1\":{\"275\":1}}],[\"都可以运行\",{\"1\":{\"135\":1}}],[\"都必须是一个通道\",{\"1\":{\"135\":1}}],[\"都改为\",{\"1\":{\"75\":1}}],[\"你可以使用\",{\"1\":{\"213\":2}}],[\"你可以定义控制器\",{\"1\":{\"184\":1}}],[\"你可以定义任意数量的\",{\"1\":{\"135\":1}}],[\"你的项目文件夹\",{\"1\":{\"145\":1}}],[\"你的项目名\",{\"1\":{\"144\":1}}],[\"你好\",{\"1\":{\"27\":1,\"99\":2}}],[\"块中的代码\",{\"1\":{\"135\":1}}],[\"块的\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"要学会分析画面\",{\"1\":{\"279\":1}}],[\"要缩小光圈\",{\"1\":{\"271\":1}}],[\"要实现全局绑定\",{\"1\":{\"212\":1}}],[\"要么是发送要么是接收\",{\"1\":{\"135\":1}}],[\"要为每个异步操作后面都加上\",{\"1\":{\"45\":1}}],[\"必须是一个通道操作\",{\"1\":{\"135\":1}}],[\"必须在源文件中非注释的第一行指明这个文件属于哪个包\",{\"1\":{\"88\":1}}],[\"例如权限\",{\"1\":{\"217\":1}}],[\"例如\",{\"1\":{\"134\":1,\"159\":1,\"186\":1,\"213\":1,\"259\":1}}],[\"而提高感光度会增加图像的噪点\",{\"1\":{\"260\":1}}],[\"而较慢的快门速度可以模糊移动的物体\",{\"1\":{\"259\":1}}],[\"而1秒的快门速度表示快门将持续打开1秒钟\",{\"1\":{\"259\":1}}],[\"而传感器面积没有相应增加\",{\"1\":{\"256\":1}}],[\"而不需要自己创建\",{\"1\":{\"153\":1}}],[\"而不需要修改\",{\"1\":{\"152\":1}}],[\"而不是在代码中显式地创建和配置\",{\"1\":{\"149\":1}}],[\"而不是在代码中硬编码\",{\"1\":{\"149\":1}}],[\"而是在创建时通过构造函数\",{\"1\":{\"152\":1}}],[\"而依赖注入是控制反转的一种实现方式\",{\"1\":{\"151\":1}}],[\"而\",{\"1\":{\"134\":1}}],[\"匹配成功后就不会执行其他\",{\"1\":{\"134\":1}}],[\"直到某个通道可以运行\",{\"1\":{\"135\":1}}],[\"直到匹配为止\",{\"1\":{\"134\":1}}],[\"直接画出来\",{\"1\":{\"75\":1}}],[\"从\",{\"1\":{\"302\":1}}],[\"从浏览器进入\",{\"1\":{\"297\":1}}],[\"从上至下逐一测试\",{\"1\":{\"134\":1}}],[\"从缓冲块块\",{\"1\":{\"18\":1,\"19\":1}}],[\"从缓冲块位置\",{\"1\":{\"17\":1,\"23\":1}}],[\"时执行\",{\"1\":{\"131\":1,\"132\":3,\"133\":2}}],[\"来不及调整对焦点\",{\"1\":{\"272\":1}}],[\"来实现静态资源访问\",{\"1\":{\"250\":1}}],[\"来确定给定的请求是否由路由处理程序处理\",{\"1\":{\"217\":1}}],[\"来指定别名\",{\"1\":{\"180\":1}}],[\"来决定是否执行指定语句\",{\"1\":{\"130\":1}}],[\"来验证请求体\",{\"1\":{\"213\":1}}],[\"来验证\",{\"1\":{\"82\":1}}],[\"指针变量\",{\"1\":{\"127\":1}}],[\"指针类型\",{\"1\":{\"104\":1}}],[\"右移后赋值\",{\"1\":{\"126\":1}}],[\"右移n位就是除以2的n次方\",{\"1\":{\"125\":1}}],[\"右移运算符\",{\"1\":{\"125\":1}}],[\"右边的数指定移动的位数\",{\"1\":{\"125\":2}}],[\"高效\",{\"1\":{\"344\":1}}],[\"高f值\",{\"1\":{\"258\":1}}],[\"高位丢弃\",{\"1\":{\"125\":1}}],[\"高级排名\",{\"1\":{\"13\":1}}],[\"由\",{\"1\":{\"125\":1}}],[\"由于国内访问不到默认的\",{\"1\":{\"83\":1}}],[\"左边的运算数的各二进位全部右移若干位\",{\"1\":{\"125\":1}}],[\"左边的运算数的各二进位全部左移若干位\",{\"1\":{\"125\":1}}],[\"左移后赋值\",{\"1\":{\"126\":1}}],[\"左移n位就是乘以2的n次方\",{\"1\":{\"125\":1}}],[\"左移运算符\",{\"1\":{\"125\":1}}],[\"^=\",{\"1\":{\"126\":2}}],[\"^\",{\"1\":{\"125\":3,\"126\":1}}],[\"|=\",{\"1\":{\"126\":2}}],[\"|\",{\"1\":{\"125\":3,\"126\":1,\"218\":2,\"222\":2,\"302\":2}}],[\"||\",{\"1\":{\"124\":2}}],[\"二进制为\",{\"1\":{\"125\":6}}],[\"结束请求\",{\"1\":{\"190\":1}}],[\"结果为1\",{\"1\":{\"125\":1}}],[\"结果为\",{\"1\":{\"125\":6}}],[\"结构化类型\",{\"1\":{\"104\":1}}],[\"结构字段等等\",{\"1\":{\"90\":1}}],[\"按f12打开开发者工具\",{\"1\":{\"359\":1}}],[\"按\",{\"1\":{\"305\":2}}],[\"按位或后赋值\",{\"1\":{\"126\":1}}],[\"按位或运算符\",{\"1\":{\"125\":1}}],[\"按位异或后赋值\",{\"1\":{\"126\":1}}],[\"按位异或运算符\",{\"1\":{\"125\":1}}],[\"按位与后赋值\",{\"1\":{\"126\":1}}],[\"按位与运算符\",{\"1\":{\"125\":1}}],[\"按类别划分有以下几种数据类型\",{\"1\":{\"104\":1}}],[\"条件语句需要开发者通过指定一个或多个条件\",{\"1\":{\"130\":1}}],[\"条件语句\",{\"0\":{\"130\":1}}],[\"条件\",{\"1\":{\"124\":1}}],[\"条公式\",{\"1\":{\"0\":1}}],[\"否则拦截\",{\"1\":{\"218\":1}}],[\"否则\",{\"1\":{\"135\":1,\"190\":1}}],[\"否则为\",{\"1\":{\"124\":3}}],[\"否则返回\",{\"1\":{\"123\":6}}],[\"逻辑\",{\"1\":{\"124\":3}}],[\"逻辑运算符\",{\"0\":{\"124\":1},\"1\":{\"121\":1}}],[\"检查左边值是否小于等于右边值\",{\"1\":{\"123\":1}}],[\"检查左边值是否小于右边值\",{\"1\":{\"123\":1}}],[\"检查左边值是否大于等于右边值\",{\"1\":{\"123\":1}}],[\"检查左边值是否大于右边值\",{\"1\":{\"123\":1}}],[\"检查两个值是否不相等\",{\"1\":{\"123\":1}}],[\"检查两个值是否相等\",{\"1\":{\"123\":1}}],[\"9号\",{\"1\":{\"368\":1}}],[\"9\",{\"1\":{\"122\":1}}],[\"9223372036854775807\",{\"1\":{\"105\":1}}],[\"9223372036854775808\",{\"1\":{\"105\":1}}],[\"自动保存\",{\"0\":{\"330\":1}}],[\"自动检测失效书签链接\",{\"1\":{\"321\":1}}],[\"自定义装饰器\",{\"0\":{\"234\":1}}],[\"自定义我们存放的权限\",{\"1\":{\"222\":1}}],[\"自定义管道\",{\"0\":{\"207\":1}}],[\"自定义提供者\",{\"0\":{\"175\":1}}],[\"自减\",{\"1\":{\"122\":1}}],[\"自增\",{\"1\":{\"122\":1}}],[\"求余后再赋值\",{\"1\":{\"126\":1}}],[\"求余\",{\"1\":{\"122\":1}}],[\"相关文章\",{\"1\":{\"350\":1}}],[\"相机\",{\"2\":{\"269\":1}}],[\"相机画幅指的是相机的传感器尺寸\",{\"1\":{\"266\":1}}],[\"相机分类\",{\"0\":{\"265\":1}}],[\"相机与镜头\",{\"0\":{\"264\":1}}],[\"相机的成像原理\",{\"0\":{\"256\":1}}],[\"相除后再赋值\",{\"1\":{\"126\":1}}],[\"相除\",{\"1\":{\"122\":1}}],[\"相乘后再赋值\",{\"1\":{\"126\":1}}],[\"相乘\",{\"1\":{\"122\":1}}],[\"相减后再赋值\",{\"1\":{\"126\":1}}],[\"相减\",{\"1\":{\"122\":1}}],[\"相加后再赋值\",{\"1\":{\"126\":1}}],[\"相加\",{\"1\":{\"122\":1}}],[\"实用的浏览器起始页\",{\"1\":{\"326\":1}}],[\"实例时\",{\"1\":{\"152\":1}}],[\"实例\",{\"1\":{\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"127\":1}}],[\"实现类\",{\"1\":{\"152\":1}}],[\"实现的\",{\"1\":{\"150\":1}}],[\"实现控制反转\",{\"1\":{\"150\":1}}],[\"实现\",{\"1\":{\"99\":1}}],[\"实现三角形\",{\"0\":{\"75\":1}}],[\"实现方法\",{\"0\":{\"57\":1,\"63\":1}}],[\"实现导航栏固定效果\",{\"0\":{\"55\":1}}],[\"实现文字跑马灯效果\",{\"0\":{\"49\":1}}],[\"实现文字渐变\",{\"0\":{\"33\":1}}],[\"假设这是我们的\",{\"1\":{\"152\":1}}],[\"假设\",{\"1\":{\"122\":1,\"123\":1,\"124\":1,\"125\":1}}],[\"算数运算符\",{\"0\":{\"122\":1}}],[\"算术运算符\",{\"1\":{\"121\":1}}],[\"每一个\",{\"1\":{\"134\":1}}],[\"每当\",{\"1\":{\"118\":1}}],[\"每个\",{\"1\":{\"88\":1,\"135\":2}}],[\"可光圈优先\",{\"1\":{\"274\":1}}],[\"可换镜头\",{\"1\":{\"265\":2}}],[\"可能会导致图像质量下降\",{\"1\":{\"256\":1}}],[\"可选单点对焦+单次对焦\",{\"1\":{\"274\":1}}],[\"可选快门优先\",{\"1\":{\"274\":1}}],[\"可选慢快门\",{\"1\":{\"271\":1}}],[\"可选\",{\"1\":{\"179\":1}}],[\"可理解为\",{\"1\":{\"118\":1}}],[\"可以带手电筒\",{\"1\":{\"367\":1}}],[\"可以过滤网站广告\",{\"1\":{\"323\":1}}],[\"可以光圈优先\",{\"1\":{\"272\":1}}],[\"可以使水\",{\"1\":{\"271\":1}}],[\"可以使用\",{\"1\":{\"134\":1,\"291\":1}}],[\"可以提供强大的数据验证能力\",{\"1\":{\"213\":1}}],[\"可以降低计算机代码之间的耦合度\",{\"1\":{\"149\":1}}],[\"可以是同类型的任意值\",{\"1\":{\"134\":1}}],[\"可以是任何类型\",{\"1\":{\"134\":1}}],[\"可以是关键字\",{\"1\":{\"95\":1}}],[\"可以在\",{\"1\":{\"133\":1}}],[\"可以简写为如下形式\",{\"1\":{\"118\":1}}],[\"可以被用作枚举值\",{\"1\":{\"118\":1}}],[\"可以认为是一个可以被编译器修改的常量\",{\"1\":{\"118\":1}}],[\"可以省略类型\",{\"1\":{\"117\":1}}],[\"可以只定义不使用\",{\"1\":{\"112\":1}}],[\"可以这样写\",{\"1\":{\"71\":1}}],[\"计数一次\",{\"1\":{\"118\":1}}],[\"计算动画持续时间\",{\"1\":{\"50\":1}}],[\"特殊常量\",{\"1\":{\"118\":1}}],[\"整数型\",{\"1\":{\"116\":1}}],[\"整型\",{\"1\":{\"104\":1}}],[\"引脚高电平\",{\"1\":{\"291\":1}}],[\"引脚低电平\",{\"1\":{\"291\":1}}],[\"引脚\",{\"1\":{\"290\":1,\"291\":2}}],[\"引用类型在内存中的表示是一个指向实际数据的指针\",{\"1\":{\"113\":1}}],[\"引入包\",{\"1\":{\"89\":1}}],[\"新变量将拥有原始值的副本\",{\"1\":{\"113\":1}}],[\"内容\",{\"1\":{\"279\":1}}],[\"内置了一些常用的管道\",{\"1\":{\"206\":1}}],[\"内置管道\",{\"0\":{\"206\":1}}],[\"内置的运算符有\",{\"1\":{\"121\":1}}],[\"内部的第一行之前\",{\"1\":{\"118\":1}}],[\"内的变量都是局部变量\",{\"1\":{\"112\":1}}],[\"内核的\",{\"1\":{\"72\":1}}],[\"多运动的物体\",{\"1\":{\"272\":1}}],[\"多文件上传\",{\"0\":{\"244\":1}}],[\"多个相同类型的声明可以简写为\",{\"1\":{\"117\":1}}],[\"多变量声明\",{\"1\":{\"111\":1}}],[\"多行注释\",{\"1\":{\"97\":1}}],[\"多行文本溢出显示省略号\",{\"0\":{\"72\":1}}],[\"短变量声明\",{\"1\":{\"111\":1}}],[\"布尔表达式\",{\"1\":{\"131\":1,\"132\":1,\"133\":2}}],[\"布尔类型的零值是false\",{\"1\":{\"111\":1}}],[\"布尔型的值只可以是常量\",{\"1\":{\"104\":1}}],[\"布尔型\",{\"1\":{\"104\":1}}],[\"值提供者\",{\"0\":{\"176\":1}}],[\"值类型包括基本数据类型和一些复合数据类型\",{\"1\":{\"113\":1}}],[\"值类型和引用类型\",{\"0\":{\"113\":1}}],[\"值3\",{\"1\":{\"111\":2}}],[\"值2\",{\"1\":{\"111\":2,\"117\":1}}],[\"值1\",{\"1\":{\"111\":2,\"117\":1}}],[\"值\",{\"1\":{\"111\":2,\"117\":1}}],[\"与好友一起夜爬泰山\",{\"1\":{\"365\":1}}],[\"与\",{\"1\":{\"107\":1}}],[\"浮点型和复数\",{\"1\":{\"116\":1}}],[\"浮点型\",{\"0\":{\"106\":1}}],[\"61\",{\"1\":{\"125\":1}}],[\"60\",{\"1\":{\"125\":1}}],[\"64位浮点型数\",{\"1\":{\"106\":1}}],[\"64\",{\"1\":{\"105\":2,\"106\":1,\"107\":1}}],[\"65535\",{\"1\":{\"105\":1}}],[\"36\",{\"1\":{\"297\":1,\"303\":1}}],[\"30元\",{\"1\":{\"367\":1}}],[\"3000\",{\"1\":{\"145\":1,\"153\":1,\"160\":1,\"193\":1,\"201\":1,\"212\":1,\"213\":1,\"221\":1,\"231\":1,\"250\":1,\"251\":1}}],[\"30\",{\"1\":{\"122\":1}}],[\"32位浮点型数\",{\"1\":{\"106\":1}}],[\"32767\",{\"1\":{\"105\":1}}],[\"32768\",{\"1\":{\"105\":1}}],[\"32\",{\"1\":{\"105\":2,\"106\":1,\"107\":1}}],[\"3407085928\",{\"1\":{\"31\":1}}],[\"到\",{\"1\":{\"105\":8}}],[\"位运算符对整数在内存中的二进制位进行操作\",{\"1\":{\"125\":1}}],[\"位运算符\",{\"0\":{\"125\":1},\"1\":{\"121\":1}}],[\"位\",{\"1\":{\"107\":1}}],[\"位实数和虚数\",{\"1\":{\"106\":2}}],[\"位整型\",{\"1\":{\"105\":8}}],[\"位置结束\",{\"1\":{\"18\":1,\"19\":1}}],[\"位置已还原或已读码\",{\"1\":{\"18\":1,\"19\":1}}],[\"位置的\",{\"1\":{\"18\":3,\"19\":2}}],[\"位置是白橙块的橙\",{\"1\":{\"19\":1}}],[\"位置是红绿块的红\",{\"1\":{\"18\":1}}],[\"位置是黄红块的黄\",{\"1\":{\"17\":1,\"23\":1}}],[\"位置\",{\"1\":{\"17\":10,\"18\":13,\"19\":12,\"23\":10}}],[\"无反相机\",{\"1\":{\"265\":1}}],[\"无符号整型\",{\"1\":{\"107\":1}}],[\"无符号\",{\"1\":{\"105\":4}}],[\"无耻之徒\",{\"1\":{\"30\":1}}],[\"接口\",{\"1\":{\"152\":1,\"207\":1,\"218\":1,\"227\":1}}],[\"接口类型\",{\"1\":{\"104\":1}}],[\"接收参数\",{\"1\":{\"50\":1}}],[\"切片类型\",{\"1\":{\"104\":1}}],[\"切换回官方镜像源\",{\"0\":{\"39\":1}}],[\"派生类型\",{\"1\":{\"104\":1}}],[\"8\",{\"1\":{\"104\":1,\"105\":2}}],[\"的安装\",{\"0\":{\"295\":1},\"1\":{\"350\":1}}],[\"的类型支持库\",{\"1\":{\"240\":1}}],[\"的管道\",{\"1\":{\"213\":1}}],[\"的方法\",{\"1\":{\"153\":1}}],[\"的构造函数中\",{\"1\":{\"153\":1}}],[\"的提供者\",{\"1\":{\"153\":1,\"177\":1}}],[\"的\",{\"1\":{\"153\":2}}],[\"的装饰器来标记它们\",{\"1\":{\"153\":1}}],[\"的实现\",{\"1\":{\"152\":1}}],[\"的实例\",{\"1\":{\"152\":4,\"153\":1}}],[\"的一种实现方式\",{\"1\":{\"150\":1}}],[\"的表达式结果是否为\",{\"1\":{\"134\":1}}],[\"的情况在执行另外的语句\",{\"1\":{\"130\":1}}],[\"的字符串的字节使用\",{\"1\":{\"104\":1}}],[\"的字符串是由单个字节连接起来的\",{\"1\":{\"104\":1}}],[\"的包\",{\"1\":{\"88\":1}}],[\"其最能影响背景虚化的效果\",{\"1\":{\"273\":1}}],[\"其功能是把\",{\"1\":{\"125\":1}}],[\"其功能是参与运算的两数各对应的二进位相异或\",{\"1\":{\"125\":1}}],[\"其功能是参与运算的两数各对应的二进位相或\",{\"1\":{\"125\":1}}],[\"其功能是参与运算的两数各对应的二进位相与\",{\"1\":{\"125\":1}}],[\"其功能把\",{\"1\":{\"125\":1}}],[\"其他\",{\"1\":{\"271\":1,\"272\":1}}],[\"其他模块在使用全局模块时不需要在\",{\"1\":{\"185\":1}}],[\"其他不会执行\",{\"1\":{\"135\":1}}],[\"其他被忽略\",{\"1\":{\"135\":1}}],[\"其他运算符\",{\"0\":{\"127\":1},\"1\":{\"121\":1}}],[\"其他数字类型\",{\"0\":{\"107\":1}}],[\"其中位的运算采用补码\",{\"1\":{\"104\":1}}],[\"其余的不能省略\",{\"1\":{\"75\":1}}],[\"描述\",{\"1\":{\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"127\":1}}],[\"就会自动将该提供者注入到需要它的类中\",{\"1\":{\"173\":1}}],[\"就会导致不知道哪一个异步操作出现了问题\",{\"1\":{\"45\":1}}],[\"就可以使用\",{\"1\":{\"153\":1}}],[\"就可以充分利用内存\",{\"1\":{\"104\":1}}],[\"编辑脚本\",{\"1\":{\"305\":1}}],[\"编程的时候需要用大数据的时候才需要申请大内存\",{\"1\":{\"104\":1}}],[\"编码标识\",{\"1\":{\"104\":1}}],[\"编码完成\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"编码\",{\"0\":{\"9\":1,\"11\":1},\"1\":{\"6\":1}}],[\"数值越大\",{\"1\":{\"267\":1}}],[\"数值类型的零值是0\",{\"1\":{\"111\":1}}],[\"数组中列出的提供者中的\",{\"1\":{\"177\":1}}],[\"数组中注册提供者\",{\"1\":{\"174\":1}}],[\"数组中进行注册\",{\"1\":{\"173\":1}}],[\"数组类型\",{\"1\":{\"104\":1}}],[\"数字的范围指的是焦段\",{\"1\":{\"267\":1}}],[\"数字型\",{\"1\":{\"116\":1}}],[\"数字类型\",{\"0\":{\"105\":1},\"1\":{\"104\":1}}],[\"数据类型的出现是为了把数据分成所需内存大小不同的数据\",{\"1\":{\"104\":1}}],[\"数据类型用于声明函数和变量\",{\"1\":{\"104\":1}}],[\"数据类型\",{\"0\":{\"104\":1}}],[\"数码产品\",{\"1\":{\"28\":1}}],[\"空格通常用于分隔标识符\",{\"1\":{\"101\":1}}],[\"空格\",{\"0\":{\"101\":1}}],[\"和其他模块\",{\"1\":{\"184\":1}}],[\"和处理函数之间的映射关系\",{\"1\":{\"159\":1}}],[\"和一个控制器\",{\"1\":{\"153\":1}}],[\"和字符串型\",{\"1\":{\"116\":1}}],[\"和浮点型\",{\"1\":{\"104\":1}}],[\"和\",{\"1\":{\"100\":1,\"134\":1,\"152\":6,\"213\":1,\"241\":1,\"302\":1}}],[\"和大括号\",{\"1\":{\"100\":1}}],[\"括号\",{\"1\":{\"100\":1}}],[\"中输入以下命令即可\",{\"1\":{\"306\":1}}],[\"中输入如下命令\",{\"1\":{\"303\":1}}],[\"中可以看到密码\",{\"1\":{\"297\":1,\"303\":1}}],[\"中进行配置\",{\"1\":{\"231\":1}}],[\"中应用于全局\",{\"1\":{\"221\":1}}],[\"中添加以下代码\",{\"1\":{\"212\":1}}],[\"中用于捕获和处理应用程序中的异常情况\",{\"1\":{\"197\":1}}],[\"中注册全局验证管道\",{\"1\":{\"213\":1}}],[\"中注册全局中间件\",{\"1\":{\"193\":1}}],[\"中注册中间件\",{\"1\":{\"191\":1}}],[\"中设置排除的路径\",{\"1\":{\"192\":1}}],[\"中设置中间件的路由路径\",{\"1\":{\"192\":1}}],[\"中设置路由前缀\",{\"1\":{\"160\":1}}],[\"中间件内容如下\",{\"1\":{\"191\":1}}],[\"中间件函数可以执行以下任务\",{\"1\":{\"190\":1}}],[\"中间件函数可以访问请求和响应对象\",{\"1\":{\"190\":1}}],[\"中间件函数\",{\"1\":{\"190\":1}}],[\"中间件\",{\"0\":{\"189\":1},\"1\":{\"190\":1}}],[\"中使用异常过滤器\",{\"1\":{\"199\":1}}],[\"中使用\",{\"1\":{\"186\":1}}],[\"中使用动态模块\",{\"1\":{\"186\":1}}],[\"中使用到的25个关键字或保留字\",{\"1\":{\"100\":1}}],[\"中导入该模块\",{\"1\":{\"185\":1}}],[\"中的提供者\",{\"1\":{\"172\":1}}],[\"中的路由是指定义请求\",{\"1\":{\"159\":1}}],[\"中的一个控制结构\",{\"1\":{\"135\":1}}],[\"中依赖注入的实现\",{\"0\":{\"153\":1}}],[\"中每新增一行常量声明将使\",{\"1\":{\"118\":1}}],[\"中变量名由数字\",{\"1\":{\"110\":1}}],[\"中\",{\"1\":{\"104\":1,\"149\":1,\"150\":1,\"153\":1,\"157\":1,\"159\":1,\"173\":1,\"184\":1,\"213\":1}}],[\"中括号\",{\"1\":{\"100\":1}}],[\"中还有36个预定义标识符\",{\"1\":{\"100\":1}}],[\"关于光比\",{\"0\":{\"275\":1}}],[\"关于我\",{\"0\":{\"27\":1}}],[\"关系运算符\",{\"0\":{\"123\":1},\"1\":{\"121\":1}}],[\"关键字出现时将被重置为\",{\"1\":{\"118\":1}}],[\"关键字\",{\"0\":{\"100\":1},\"1\":{\"100\":5,\"101\":1}}],[\"+id\",{\"1\":{\"159\":3,\"200\":2}}],[\"+=\",{\"1\":{\"126\":2}}],[\"++\",{\"1\":{\"122\":1}}],[\"+\",{\"1\":{\"99\":2,\"122\":2,\"126\":3,\"176\":2,\"177\":2,\"186\":2,\"241\":1}}],[\"下载并保存\",{\"0\":{\"360\":1}}],[\"下载并安装go语言环境\",{\"0\":{\"81\":1}}],[\"下载\",{\"1\":{\"302\":1,\"305\":1}}],[\"下载完成后解压即可\",{\"1\":{\"297\":1}}],[\"下载安装包并安装\",{\"0\":{\"297\":1}}],[\"下划线组成\",{\"1\":{\"98\":1,\"110\":1}}],[\"字母\",{\"1\":{\"98\":1,\"110\":1}}],[\"字符串就是一串固定长度的字符连接起来的字符序列\",{\"1\":{\"104\":1}}],[\"字符串类型的零值是\",{\"1\":{\"111\":1}}],[\"字符串类型\",{\"1\":{\"104\":1}}],[\"字符串连接\",{\"0\":{\"99\":1}}],[\"字符串\",{\"1\":{\"95\":1}}],[\"分量足\",{\"1\":{\"368\":1}}],[\"分析一个画面时一般有两个维度\",{\"1\":{\"279\":1}}],[\"分享旅行过程中的美好记忆\",{\"1\":{\"371\":1}}],[\"分享我常用的软件工具以及一些软件工具的使用技巧\",{\"1\":{\"364\":1}}],[\"分享我学习\",{\"1\":{\"141\":1,\"254\":1,\"294\":1}}],[\"分享一下我在开发中遇到的问题以及开发中使用到的技巧\",{\"1\":{\"78\":1}}],[\"分支都是唯一的\",{\"1\":{\"134\":1}}],[\"分隔\",{\"1\":{\"96\":1}}],[\"不然可能会有商家跑路的风险\",{\"1\":{\"367\":1}}],[\"不可换镜头\",{\"1\":{\"265\":1}}],[\"不会重新对\",{\"1\":{\"135\":1}}],[\"不会判断下一条\",{\"1\":{\"134\":1}}],[\"不会被修改的量\",{\"1\":{\"116\":1}}],[\"不能在函数外使用\",{\"1\":{\"111\":1}}],[\"不需要\",{\"1\":{\"96\":1}}],[\"不必做成图片或者字体图标\",{\"1\":{\"75\":1}}],[\"行分隔符\",{\"0\":{\"96\":1}}],[\"符号来获取内存地址\",{\"1\":{\"113\":1}}],[\"符号\",{\"1\":{\"95\":1}}],[\"常量名2\",{\"1\":{\"117\":1}}],[\"常量名1\",{\"1\":{\"117\":1}}],[\"常量名\",{\"1\":{\"117\":1}}],[\"常量声明\",{\"0\":{\"117\":1}}],[\"常量中的数据类型只可以是布尔型\",{\"1\":{\"116\":1}}],[\"常量是一个简单值的标识符\",{\"1\":{\"116\":1}}],[\"常量\",{\"0\":{\"116\":1},\"1\":{\"95\":1,\"100\":1}}],[\"标签关联编辑\",{\"0\":{\"336\":1}}],[\"标准提供者是使用\",{\"1\":{\"174\":1}}],[\"标准提供者\",{\"0\":{\"174\":1}}],[\"标识符用来命名变量\",{\"1\":{\"98\":1}}],[\"标识符\",{\"0\":{\"98\":1},\"1\":{\"95\":1,\"100\":6}}],[\"标识符如果以小写字母开头\",{\"1\":{\"90\":1}}],[\"标记\",{\"0\":{\"95\":1}}],[\"则放行\",{\"1\":{\"218\":1}}],[\"则执行该语句\",{\"1\":{\"135\":1}}],[\"则逻辑\",{\"1\":{\"124\":1}}],[\"则条件\",{\"1\":{\"124\":2}}],[\"则需要填写类型\",{\"1\":{\"111\":1}}],[\"则需要借其他位置\",{\"1\":{\"18\":1,\"19\":1}}],[\"则类型可以省略\",{\"1\":{\"111\":1}}],[\"则对包外是不可见的\",{\"1\":{\"90\":1}}],[\"类验证器与\",{\"1\":{\"213\":1}}],[\"类验证器\",{\"0\":{\"213\":1},\"1\":{\"213\":1}}],[\"类提供者\",{\"0\":{\"178\":1}}],[\"类通过构造函数接收\",{\"1\":{\"152\":1}}],[\"类的代码\",{\"1\":{\"152\":2}}],[\"类在构造函数中直接创建了\",{\"1\":{\"152\":1}}],[\"类\",{\"1\":{\"152\":4}}],[\"类似于\",{\"1\":{\"135\":1}}],[\"类似\",{\"1\":{\"107\":2}}],[\"类似面向对象语言中的\",{\"1\":{\"90\":2}}],[\"类型的结构体\",{\"1\":{\"290\":1,\"291\":1}}],[\"类型不被局限于常量或整数\",{\"1\":{\"134\":1}}],[\"类型不同的多个变量\",{\"1\":{\"111\":1}}],[\"类型2\",{\"1\":{\"111\":1}}],[\"类型1\",{\"1\":{\"111\":1}}],[\"类型相同的多个变量\",{\"1\":{\"111\":1}}],[\"类型和函数组成\",{\"1\":{\"100\":1}}],[\"类型等程序实体\",{\"1\":{\"98\":1}}],[\"类型\",{\"1\":{\"90\":1,\"104\":3,\"105\":1,\"106\":1,\"107\":1,\"111\":3,\"117\":1}}],[\"客户端程序需要先导入这个包\",{\"1\":{\"90\":1}}],[\"以提供更好的用户体验或记录错误日志\",{\"1\":{\"197\":1}}],[\"以提高代码的可读性\",{\"1\":{\"101\":1}}],[\"以及应用程序请求响应周期中的\",{\"1\":{\"190\":1}}],[\"以允许模块之间共享\",{\"1\":{\"184\":1}}],[\"以便将它们组织在一起\",{\"1\":{\"184\":1}}],[\"以便在需要时使用\",{\"1\":{\"172\":1}}],[\"以下笔记为我观看其视频教程后所记录的笔记\",{\"1\":{\"288\":1}}],[\"以下问题\",{\"1\":{\"275\":1}}],[\"以下是使用类验证器的基本步骤\",{\"1\":{\"213\":1}}],[\"以下是一个简单的例子\",{\"1\":{\"153\":1}}],[\"以下几种类型的零值是nil\",{\"1\":{\"111\":1}}],[\"以下打乱均采用黄顶红前的坐标打乱\",{\"1\":{\"16\":1,\"22\":1}}],[\"以一个大写字母开头\",{\"1\":{\"90\":1}}],[\"注册模块中所有用到的\",{\"1\":{\"184\":1}}],[\"注册和使用提供者\",{\"0\":{\"173\":1}}],[\"注入到目标对象中\",{\"1\":{\"150\":1}}],[\"注释内容\",{\"1\":{\"97\":2}}],[\"注释\",{\"0\":{\"97\":1},\"1\":{\"89\":1}}],[\"注意\",{\"1\":{\"51\":1}}],[\"表情包\",{\"2\":{\"363\":1}}],[\"表达式都会被求值\",{\"1\":{\"135\":1}}],[\"表达式结果赋值给\",{\"1\":{\"126\":1}}],[\"表达式\",{\"1\":{\"89\":1}}],[\"表示快门打开的时间长度\",{\"1\":{\"259\":1}}],[\"表示使用省略号来代替溢出的文本\",{\"1\":{\"71\":1}}],[\"表示不允许换行\",{\"1\":{\"71\":1}}],[\"语义检查\",{\"0\":{\"337\":1}}],[\"语法允许您为现有的提供程序创建别名\",{\"1\":{\"180\":1}}],[\"语法来提供值\",{\"1\":{\"176\":1}}],[\"语法对于注入常量值\",{\"1\":{\"176\":1}}],[\"语法\",{\"1\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1}}],[\"语句会随机选择一个通道执行\",{\"1\":{\"135\":1}}],[\"语句会监听所有指定的通道上的操作\",{\"1\":{\"135\":1}}],[\"语句只能用于通道操作\",{\"1\":{\"135\":1}}],[\"语句用于基于不同条件执行不同动作\",{\"1\":{\"134\":1}}],[\"语句中嵌入一个或多个\",{\"1\":{\"133\":1}}],[\"语句中的表达式在布尔表达式为\",{\"1\":{\"132\":1}}],[\"语句嵌套\",{\"0\":{\"133\":1}}],[\"语句后可以使用可选的\",{\"1\":{\"132\":1}}],[\"语句由布尔表达式后紧跟一个或多个语句组成\",{\"1\":{\"131\":1}}],[\"语句块中的行索引\",{\"1\":{\"118\":1}}],[\"语句\",{\"0\":{\"131\":1,\"132\":1,\"134\":1,\"135\":1},\"1\":{\"89\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1}}],[\"语言中变量的声明必须使用空格隔开\",{\"1\":{\"101\":1}}],[\"语言中\",{\"1\":{\"101\":1}}],[\"语言命名规范\",{\"0\":{\"90\":1}}],[\"语言的字符串连接可以通过\",{\"1\":{\"99\":1}}],[\"语言的基础组成\",{\"0\":{\"89\":1}}],[\"语言的官方网站\",{\"1\":{\"81\":1}}],[\"语言输出\",{\"1\":{\"88\":1}}],[\"语言结构\",{\"0\":{\"87\":1}}],[\"变量来决定使用哪个配置服务类\",{\"1\":{\"178\":1}}],[\"变量没有初始化时系统默认设置的值\",{\"1\":{\"111\":1}}],[\"变量默认为零值\",{\"1\":{\"111\":1}}],[\"变量名3\",{\"1\":{\"111\":3}}],[\"变量名2\",{\"1\":{\"111\":4}}],[\"变量名1\",{\"1\":{\"111\":4}}],[\"变量名\",{\"1\":{\"111\":3}}],[\"变量会从初始值中推断出类型\",{\"1\":{\"111\":1}}],[\"变量声明\",{\"0\":{\"111\":1}}],[\"变量可以通过变量名访问\",{\"1\":{\"110\":1}}],[\"变量是计算机语言中能储存计算结果或能表示值的抽象概念\",{\"1\":{\"110\":1}}],[\"变量\",{\"0\":{\"110\":1},\"1\":{\"89\":1,\"90\":1,\"100\":1,\"134\":1}}],[\"程序中可能会使用到这些标点符号\",{\"1\":{\"100\":1}}],[\"程序中可能会使用到这些分隔符\",{\"1\":{\"100\":1}}],[\"程序一般由关键字\",{\"1\":{\"100\":1}}],[\"程序可以由多个标记组成\",{\"1\":{\"95\":1}}],[\"程序的执行\",{\"0\":{\"91\":1}}],[\"程序\",{\"1\":{\"88\":1}}],[\"程序开始执行的函数\",{\"1\":{\"88\":1}}],[\"函数将结构体存储\",{\"1\":{\"291\":1}}],[\"函数来给引脚赋值\",{\"1\":{\"291\":1}}],[\"函数来给引脚赋值低电平\",{\"1\":{\"291\":1}}],[\"函数来给引脚赋值高电平\",{\"1\":{\"291\":1}}],[\"函数进行初始化\",{\"1\":{\"290\":1}}],[\"函数类型\",{\"1\":{\"104\":1}}],[\"函数名\",{\"1\":{\"90\":1}}],[\"函数\",{\"1\":{\"89\":1}}],[\"函数则会先执行该函数\",{\"1\":{\"88\":1}}],[\"函数是每一个可执行程序所必须包含的\",{\"1\":{\"88\":1}}],[\"一个简洁\",{\"1\":{\"326\":1}}],[\"一个联想词通常是两个字\",{\"1\":{\"5\":1}}],[\"一键管理所有扩展\",{\"1\":{\"324\":1}}],[\"一键清理\",{\"1\":{\"321\":1}}],[\"一键清理失效书签\",{\"0\":{\"321\":1},\"1\":{\"321\":1}}],[\"一款高效的网络请求过滤工具\",{\"1\":{\"323\":1}}],[\"一般快门速度越快越安全\",{\"1\":{\"274\":1}}],[\"一般取f7\",{\"1\":{\"271\":1}}],[\"一般来说都是在启动后第一个执行的函数\",{\"1\":{\"88\":1}}],[\"一定够快\",{\"1\":{\"271\":1}}],[\"一旦其中一个通道准备好就会执行相应的代码块\",{\"1\":{\"135\":1}}],[\"一样大小\",{\"1\":{\"107\":1}}],[\"一行代表一个语句结束\",{\"1\":{\"96\":1}}],[\"包括main函数\",{\"1\":{\"112\":1}}],[\"包括\",{\"1\":{\"104\":1,\"206\":1}}],[\"包括常量\",{\"1\":{\"90\":1}}],[\"包括位置和色相\",{\"1\":{\"0\":1}}],[\"包声明\",{\"1\":{\"89\":1}}],[\"包\",{\"1\":{\"88\":1,\"246\":1}}],[\"告诉编译器这个程序需要使用\",{\"1\":{\"88\":1}}],[\"插件即可\",{\"1\":{\"84\":1}}],[\"配置代理\",{\"0\":{\"312\":1}}],[\"配置用户信息\",{\"0\":{\"311\":1}}],[\"配置指南\",{\"0\":{\"309\":1,\"329\":1}}],[\"配置参数\",{\"1\":{\"290\":1,\"291\":3}}],[\"配置链接\",{\"1\":{\"83\":1}}],[\"配置\",{\"0\":{\"83\":1,\"250\":1}}],[\"验证安装\",{\"0\":{\"82\":1}}],[\"访问即可\",{\"1\":{\"303\":1}}],[\"访问即可配置\",{\"1\":{\"297\":1}}],[\"访问控制列表等\",{\"1\":{\"217\":1}}],[\"访问\",{\"0\":{\"251\":1},\"1\":{\"81\":1}}],[\"友链\",{\"0\":{\"79\":1}}],[\"开源的代码编辑器\",{\"1\":{\"349\":1}}],[\"开发\",{\"1\":{\"353\":2}}],[\"开发和维护\",{\"1\":{\"143\":1}}],[\"开发环境搭建\",{\"0\":{\"80\":1}}],[\"开发技巧\",{\"0\":{\"78\":1}}],[\"开始读\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"开始读码\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"透明\",{\"1\":{\"75\":1}}],[\"个边框都要写\",{\"1\":{\"75\":1}}],[\"404\",{\"1\":{\"372\":1}}],[\"49\",{\"1\":{\"125\":1}}],[\"4\",{\"1\":{\"75\":1}}],[\"4294967295\",{\"1\":{\"105\":1}}],[\"42\",{\"1\":{\"0\":1}}],[\"盒子宽度高度为\",{\"1\":{\"75\":1}}],[\"盒子宽度自适应文字内容\",{\"0\":{\"61\":1}}],[\"边框可以\",{\"1\":{\"75\":1}}],[\"21\",{\"1\":{\"297\":1,\"303\":1}}],[\"2147483647\",{\"1\":{\"105\":1}}],[\"2147483648\",{\"1\":{\"105\":1}}],[\"240\",{\"1\":{\"125\":1}}],[\"255\",{\"1\":{\"105\":1}}],[\"2\",{\"1\":{\"72\":1,\"122\":1,\"125\":2,\"126\":10,\"133\":2}}],[\"2023\",{\"1\":{\"297\":1,\"303\":1}}],[\"202\",{\"1\":{\"167\":1,\"168\":1}}],[\"2024年5月21日\",{\"1\":{\"365\":1}}],[\"2024\",{\"1\":{\"30\":1}}],[\"200以上\",{\"1\":{\"272\":1}}],[\"200\",{\"1\":{\"122\":1}}],[\"20\",{\"1\":{\"51\":2,\"122\":1,\"123\":1,\"331\":1}}],[\"浏览器插件\",{\"2\":{\"328\":1}}],[\"浏览器\",{\"1\":{\"72\":1}}],[\"浏览器或移动端\",{\"1\":{\"72\":1}}],[\"绝大部分是\",{\"1\":{\"72\":1}}],[\"综上\",{\"1\":{\"71\":1}}],[\"或值进行求值\",{\"1\":{\"135\":1}}],[\"或使用短声明\",{\"1\":{\"111\":1}}],[\"或者最终结果为相同类型的表达式\",{\"1\":{\"134\":1}}],[\"或者\",{\"1\":{\"104\":1}}],[\"或\",{\"1\":{\"71\":1,\"107\":1,\"133\":2,\"152\":1,\"162\":1,\"163\":1,\"164\":1,\"165\":1,\"192\":2,\"200\":1,\"220\":1}}],[\"还影响景深\",{\"1\":{\"258\":1}}],[\"还可以在\",{\"1\":{\"213\":1}}],[\"还可以同时测试多个可能符合条件的值\",{\"1\":{\"134\":1}}],[\"还需要将\",{\"1\":{\"71\":1}}],[\"还有很多棱块没有读到\",{\"1\":{\"18\":1,\"19\":1}}],[\"为了获取更好的类型提示\",{\"1\":{\"240\":1}}],[\"为了让\",{\"1\":{\"71\":1}}],[\"为控制器提供服务的就可以被称作提供者\",{\"1\":{\"172\":1}}],[\"为前缀\",{\"1\":{\"160\":1}}],[\"为\",{\"1\":{\"122\":2,\"123\":8,\"124\":5,\"125\":2,\"133\":2}}],[\"为盒子设置width\",{\"1\":{\"63\":1}}],[\"属性接受一个提供者数组\",{\"1\":{\"179\":1}}],[\"属性的值\",{\"1\":{\"177\":1}}],[\"属性或方法参数接收依赖项\",{\"1\":{\"152\":1}}],[\"属性设置省略号来代替溢出的文本\",{\"1\":{\"72\":1}}],[\"属性设置为\",{\"1\":{\"71\":1}}],[\"属性生效\",{\"1\":{\"71\":1}}],[\"属性来指定溢出文本的处理方式\",{\"1\":{\"71\":1}}],[\"属性来指定文本的处理方式\",{\"1\":{\"71\":1}}],[\"属性调整\",{\"1\":{\"67\":1}}],[\"并设置为\",{\"1\":{\"330\":1,\"331\":1,\"332\":1,\"333\":2,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":1}}],[\"并设置top属性将其固定在顶部\",{\"1\":{\"57\":1}}],[\"并不是像素越多越好\",{\"1\":{\"256\":1}}],[\"并检查当前用户是否具有所需的权限\",{\"1\":{\"222\":1}}],[\"并实现\",{\"1\":{\"207\":1}}],[\"并将其实例注入到\",{\"1\":{\"153\":1}}],[\"并让\",{\"1\":{\"153\":1}}],[\"并在条件为\",{\"1\":{\"130\":1}}],[\"并通过测试条件是否为\",{\"1\":{\"130\":1}}],[\"并且可以被注入到其他类中\",{\"1\":{\"172\":1}}],[\"并且支持复数\",{\"1\":{\"104\":1}}],[\"并且最后一个是以\",{\"1\":{\"18\":1}}],[\"当异常发生时\",{\"1\":{\"197\":1}}],[\"当\",{\"1\":{\"153\":1}}],[\"当两对应的二进位相异时\",{\"1\":{\"125\":1}}],[\"当你将引用类型的变量赋值给另一个变量时\",{\"1\":{\"113\":1}}],[\"当你将值类型的变量赋值给另一个变量时\",{\"1\":{\"113\":1}}],[\"当标识符\",{\"1\":{\"90\":1}}],[\"当文字多少不确定时\",{\"1\":{\"62\":1}}],[\"当页面滚动时\",{\"1\":{\"56\":1}}],[\"当有多个异步操作时\",{\"1\":{\"45\":1}}],[\"效果描述\",{\"0\":{\"56\":1,\"62\":1}}],[\"效果展示\",{\"0\":{\"52\":1,\"58\":1,\"64\":1}}],[\"组件不直接创建依赖项\",{\"1\":{\"152\":1}}],[\"组件外的容器必须设置宽度\",{\"1\":{\"51\":1}}],[\"组件的使用\",{\"0\":{\"51\":1}}],[\"组件源码\",{\"0\":{\"50\":1}}],[\"挂载时执行\",{\"1\":{\"50\":1}}],[\"监听文本内容变化\",{\"1\":{\"50\":1}}],[\"5244\",{\"1\":{\"297\":1,\"303\":1}}],[\"5\",{\"1\":{\"50\":1}}],[\"50mhz\",{\"1\":{\"291\":1}}],[\"500px\",{\"1\":{\"284\":1}}],[\"50\",{\"1\":{\"50\":2}}],[\"判断文本内容是否溢出\",{\"1\":{\"50\":2}}],[\"获取文件后缀\",{\"1\":{\"241\":1}}],[\"获取文本内容元素\",{\"1\":{\"50\":1}}],[\"获取异常状态码\",{\"1\":{\"198\":1}}],[\"获取请求对象\",{\"1\":{\"198\":1}}],[\"获取请求上下文\",{\"1\":{\"198\":1}}],[\"获取响应对象\",{\"1\":{\"198\":1}}],[\"获取容器宽度和文本内容宽度\",{\"1\":{\"50\":1}}],[\"获取跑马灯容器元素\",{\"1\":{\"50\":1}}],[\"visual\",{\"1\":{\"349\":1}}],[\"vim\",{\"1\":{\"305\":3}}],[\"vbhide\",{\"1\":{\"299\":1}}],[\"vbs\",{\"1\":{\"299\":1}}],[\"void\",{\"1\":{\"152\":10,\"191\":1}}],[\"validator来验证传入的\",{\"1\":{\"213\":1}}],[\"validator\",{\"1\":{\"213\":5}}],[\"validationpipe\",{\"1\":{\"206\":1,\"213\":6}}],[\"val3\",{\"1\":{\"134\":1}}],[\"val2\",{\"1\":{\"134\":3}}],[\"val1\",{\"1\":{\"134\":3}}],[\"value\",{\"1\":{\"50\":5,\"135\":2,\"207\":4}}],[\"var1\",{\"1\":{\"134\":2}}],[\"var\",{\"1\":{\"100\":1,\"101\":1,\"111\":4}}],[\"vscode\",{\"0\":{\"329\":1,\"349\":1},\"1\":{\"84\":1,\"329\":1},\"2\":{\"340\":1}}],[\"verge\",{\"0\":{\"346\":1},\"1\":{\"346\":1}}],[\"version\",{\"1\":{\"82\":1}}],[\"vertical\",{\"1\":{\"72\":1}}],[\"v\",{\"1\":{\"50\":1}}],[\"vue\",{\"0\":{\"49\":1},\"1\":{\"50\":2,\"51\":3},\"2\":{\"54\":1}}],[\"文档\",{\"1\":{\"298\":1,\"304\":1,\"350\":1}}],[\"文件替换为最新的即可\",{\"1\":{\"300\":1}}],[\"文件内容为\",{\"1\":{\"299\":1}}],[\"文件的目录里新建一个文件名为\",{\"1\":{\"299\":1}}],[\"文件的原始名称\",{\"1\":{\"241\":1}}],[\"文件\",{\"1\":{\"251\":1,\"297\":1}}],[\"文件夹用来存放静态资源\",{\"1\":{\"250\":1}}],[\"文件直接下载\",{\"0\":{\"245\":1}}],[\"文件上传完要存放的位置\",{\"1\":{\"241\":1}}],[\"文件上传与下载\",{\"0\":{\"239\":1}}],[\"文件中调用\",{\"1\":{\"250\":1}}],[\"文件中\",{\"1\":{\"91\":1}}],[\"文本\",{\"1\":{\"104\":1}}],[\"文本溢出的处理\",{\"0\":{\"70\":1}}],[\"文本溢出时追加的文本内容\",{\"1\":{\"50\":1}}],[\"文本开始滚动的延迟时间\",{\"1\":{\"50\":1}}],[\"文本滚动速度\",{\"1\":{\"50\":1}}],[\"文本间隔\",{\"1\":{\"50\":1}}],[\"文本内容样式\",{\"1\":{\"50\":1}}],[\"文本内容\",{\"1\":{\"50\":2}}],[\"文字跑马灯效果的实现\",{\"0\":{\"48\":1}}],[\"`attachment\",{\"1\":{\"246\":1}}],[\"`\",{\"1\":{\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"241\":1,\"245\":2,\"246\":3}}],[\"`获取到的数据为\",{\"1\":{\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1}}],[\"`$\",{\"1\":{\"50\":4,\"241\":1}}],[\"``\",{\"1\":{\"23\":1}}],[\"跑马灯\",{\"1\":{\"50\":1}}],[\"跑马灯容器\",{\"1\":{\"50\":1}}],[\">>=\",{\"1\":{\"126\":2}}],[\">>\",{\"1\":{\"125\":5,\"126\":1}}],[\">=\",{\"1\":{\"123\":2}}],[\">\",{\"1\":{\"50\":10,\"51\":3,\"123\":2,\"222\":1}}],[\"<<=\",{\"1\":{\"126\":2}}],[\"<<\",{\"1\":{\"125\":5,\"126\":1}}],[\"<=\",{\"1\":{\"123\":2}}],[\"<carousel\",{\"1\":{\"51\":1}}],[\"<style\",{\"1\":{\"50\":1}}],[\"<script\",{\"1\":{\"50\":1,\"51\":1}}],[\"<div\",{\"1\":{\"50\":4,\"51\":1}}],[\"<template>\",{\"1\":{\"50\":1,\"51\":1}}],[\"<\",{\"1\":{\"50\":12,\"51\":5,\"123\":2,\"135\":3}}],[\"封装了一个组件\",{\"1\":{\"49\":1}}],[\"===\",{\"1\":{\"178\":1,\"207\":1}}],[\"==\",{\"1\":{\"123\":2,\"207\":1}}],[\"=\",{\"1\":{\"45\":3,\"50\":11,\"51\":5,\"111\":5,\"117\":2,\"118\":4,\"123\":2,\"126\":22,\"135\":1,\"152\":8,\"153\":1,\"160\":1,\"193\":1,\"198\":4,\"201\":1,\"212\":1,\"213\":1,\"221\":1,\"222\":2,\"231\":1,\"235\":1,\"241\":1,\"245\":1,\"246\":2,\"250\":1,\"291\":3,\"299\":1}}],[\"=>\",{\"1\":{\"44\":1,\"50\":6,\"179\":1,\"191\":1,\"235\":1,\"241\":1}}],[\"原来的代码\",{\"1\":{\"45\":1}}],[\"优化异常捕获\",{\"0\":{\"45\":1}}],[\"pkg\",{\"1\":{\"305\":1,\"306\":1}}],[\"pp\",{\"1\":{\"291\":1}}],[\"platform\",{\"1\":{\"241\":1,\"243\":1,\"244\":1,\"250\":1}}],[\"put\",{\"1\":{\"159\":1}}],[\"public\",{\"1\":{\"90\":1,\"250\":2}}],[\"potplayer\",{\"0\":{\"352\":1},\"1\":{\"352\":1}}],[\"post\",{\"1\":{\"159\":4,\"164\":4,\"165\":4,\"192\":1,\"209\":2,\"210\":2,\"213\":2,\"220\":4,\"229\":2,\"243\":2,\"244\":2}}],[\"pointer\",{\"1\":{\"104\":1}}],[\"prefix\",{\"0\":{\"160\":1},\"1\":{\"250\":1}}],[\"print\",{\"1\":{\"100\":1}}],[\"println\",{\"1\":{\"88\":1,\"95\":2,\"99\":1,\"100\":1}}],[\"private\",{\"1\":{\"90\":1,\"153\":1,\"159\":1,\"167\":1,\"168\":1,\"174\":1,\"176\":2,\"177\":2,\"186\":2,\"200\":2,\"209\":1,\"210\":1,\"211\":1,\"213\":1,\"220\":2,\"222\":2,\"229\":1}}],[\"project\",{\"1\":{\"337\":1}}],[\"proxy\",{\"0\":{\"322\":1},\"1\":{\"313\":2,\"314\":2,\"315\":2,\"316\":2,\"322\":1}}],[\"productionconfigservice\",{\"1\":{\"178\":1}}],[\"provide\",{\"1\":{\"174\":1,\"176\":1,\"177\":2,\"178\":1,\"179\":1,\"180\":1,\"186\":1,\"230\":1}}],[\"providers\",{\"1\":{\"153\":2,\"172\":2,\"173\":1,\"174\":3,\"176\":1,\"177\":2,\"178\":1,\"179\":1,\"180\":1,\"184\":5,\"186\":4,\"191\":1,\"192\":3,\"230\":1,\"241\":1}}],[\"process\",{\"1\":{\"152\":6}}],[\"props\",{\"1\":{\"50\":11}}],[\"promise<boolean>\",{\"1\":{\"218\":1,\"222\":1}}],[\"promise\",{\"0\":{\"44\":1}}],[\"password\",{\"1\":{\"297\":1,\"303\":1}}],[\"pa0\",{\"1\":{\"291\":2}}],[\"parsefilepipe\",{\"1\":{\"206\":1}}],[\"parsefloatpipe\",{\"1\":{\"206\":1}}],[\"parseenumpipe\",{\"1\":{\"206\":1}}],[\"parseuuidpipe\",{\"1\":{\"206\":1}}],[\"parsearraypipe\",{\"1\":{\"206\":1}}],[\"parseboolpipe\",{\"1\":{\"206\":1}}],[\"parseintpipe\",{\"1\":{\"206\":1,\"209\":2,\"210\":2,\"211\":2,\"212\":2}}],[\"parameter\",{\"1\":{\"207\":1}}],[\"params\",{\"0\":{\"163\":1},\"1\":{\"163\":4}}],[\"param\",{\"1\":{\"159\":4,\"163\":5,\"200\":4,\"211\":2}}],[\"path\",{\"1\":{\"192\":2,\"198\":1,\"241\":1,\"245\":1,\"246\":1}}],[\"patch\",{\"1\":{\"159\":4}}],[\"panic\",{\"1\":{\"100\":1}}],[\"package\",{\"1\":{\"88\":1,\"99\":1,\"100\":1}}],[\"paddingright\",{\"1\":{\"50\":2}}],[\"px`\",{\"1\":{\"50\":2}}],[\"pixpin\",{\"0\":{\"347\":1},\"1\":{\"347\":1}}],[\"pin\",{\"1\":{\"291\":6}}],[\"pinterest\",{\"1\":{\"284\":1}}],[\"pink\",{\"1\":{\"51\":1}}],[\"pipe\",{\"1\":{\"207\":1,\"213\":1,\"246\":1}}],[\"pipetransform\",{\"1\":{\"207\":3}}],[\"pipes\",{\"1\":{\"205\":1,\"207\":3}}],[\"pisces12013\",{\"1\":{\"31\":1}}],[\"pi6\",{\"1\":{\"0\":1}}],[\"捕获异常\",{\"0\":{\"43\":1,\"44\":1}}],[\"换源\",{\"0\":{\"36\":1}}],[\"将网络地址在浏览器打开\",{\"1\":{\"360\":1}}],[\"将鼠标放到右侧审查出的元素上即可获取到表情包的网络地址\",{\"1\":{\"359\":1}}],[\"将脚本添加到桌面即可\",{\"1\":{\"305\":1}}],[\"将快捷方式粘贴进来即可\",{\"1\":{\"299\":1}}],[\"将快捷方式剪切\",{\"1\":{\"299\":1}}],[\"将两张照片合成一张\",{\"1\":{\"275\":1}}],[\"将控制传递给下一个中间件函数\",{\"1\":{\"190\":1}}],[\"将从\",{\"1\":{\"179\":1}}],[\"将解析该数组并将其作为参数传递给工厂函数\",{\"1\":{\"179\":1}}],[\"将外部库放入\",{\"1\":{\"176\":1}}],[\"将依赖项注入到目标对象中\",{\"1\":{\"150\":1}}],[\"将阻塞\",{\"1\":{\"135\":1}}],[\"将给出变量的实际地址\",{\"1\":{\"127\":1}}],[\"将\",{\"1\":{\"126\":1,\"300\":1}}],[\"将一个表达式的值赋给一个左值\",{\"1\":{\"126\":1}}],[\"将其设置为\",{\"1\":{\"71\":2}}],[\"将导航栏的position属性设置为sticky\",{\"1\":{\"57\":1}}],[\"将文字设置为透明\",{\"1\":{\"33\":1}}],[\"将设置的背景颜色限制在文字中\",{\"1\":{\"33\":2}}],[\"将魔方调整好\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"html\",{\"0\":{\"336\":1}}],[\"httpexceptionfilter\",{\"1\":{\"200\":4,\"201\":2}}],[\"httpexceptionfilter<t>\",{\"1\":{\"198\":1}}],[\"httpexception\",{\"1\":{\"198\":3}}],[\"http\",{\"1\":{\"198\":2,\"200\":2,\"201\":1,\"313\":2,\"314\":1,\"315\":2,\"316\":1}}],[\"httpcode\",{\"1\":{\"167\":3,\"168\":2}}],[\"https\",{\"1\":{\"31\":1,\"38\":1,\"39\":1,\"313\":2,\"314\":1,\"315\":4,\"316\":3}}],[\"h\",{\"1\":{\"291\":1}}],[\"handle\",{\"1\":{\"227\":1}}],[\"host\",{\"1\":{\"198\":2}}],[\"head\",{\"1\":{\"165\":2}}],[\"headers\",{\"1\":{\"165\":5}}],[\"header\",{\"0\":{\"165\":1},\"1\":{\"165\":2,\"168\":3}}],[\"hello\",{\"0\":{\"88\":1},\"1\":{\"88\":2,\"91\":2,\"95\":2,\"153\":1,\"174\":1,\"176\":1}}],[\"hidden\",{\"1\":{\"50\":1,\"71\":2,\"72\":1}}],[\"h4\",{\"1\":{\"0\":1}}],[\"茕茕の博客\",{\"1\":{\"31\":1}}],[\"博客\",{\"1\":{\"31\":1}}],[\"邮箱\",{\"1\":{\"31\":1}}],[\"联系方式\",{\"0\":{\"31\":1}}],[\"联想词\",{\"0\":{\"4\":1},\"1\":{\"6\":1}}],[\"莫言\",{\"1\":{\"29\":1}}],[\"鳄鱼\",{\"1\":{\"29\":1}}],[\"最好的免费卸载程序\",{\"1\":{\"344\":1}}],[\"最关心的参数是光圈\",{\"1\":{\"273\":1}}],[\"最后调用\",{\"1\":{\"290\":1}}],[\"最后\",{\"1\":{\"153\":1}}],[\"最后自带\",{\"1\":{\"134\":1}}],[\"最近在看\",{\"0\":{\"30\":1}}],[\"最近在读\",{\"0\":{\"29\":1}}],[\"最终的编码如下\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"键盘客制化\",{\"1\":{\"28\":1}}],[\"摄影师泰罗\",{\"1\":{\"288\":1}}],[\"摄影学习记录\",{\"0\":{\"288\":1}}],[\"摄影思路\",{\"2\":{\"287\":1}}],[\"摄影技巧\",{\"2\":{\"277\":1}}],[\"摄影\",{\"0\":{\"272\":1},\"1\":{\"28\":1},\"2\":{\"262\":1,\"268\":1,\"276\":1,\"281\":1,\"286\":1}}],[\"爱好\",{\"0\":{\"28\":1}}],[\"热爱生活\",{\"1\":{\"27\":1}}],[\"热爱技术\",{\"1\":{\"27\":1}}],[\"喜欢编程\",{\"1\":{\"27\":1}}],[\"毕业于曲阜师范大学\",{\"1\":{\"27\":1}}],[\"check\",{\"1\":{\"337\":2}}],[\"channel3\",{\"1\":{\"135\":1}}],[\"channel2\",{\"1\":{\"135\":1}}],[\"channel1\",{\"1\":{\"135\":1}}],[\"channel\",{\"1\":{\"104\":1,\"135\":2}}],[\"chan\",{\"1\":{\"100\":1,\"111\":1}}],[\"cursor\",{\"1\":{\"335\":2}}],[\"custom\",{\"1\":{\"334\":1}}],[\"cmd\",{\"1\":{\"297\":1}}],[\"cmll\",{\"0\":{\"0\":1},\"1\":{\"0\":2},\"2\":{\"2\":1}}],[\"c画幅\",{\"1\":{\"266\":1}}],[\"ccd或cmos\",{\"1\":{\"256\":1}}],[\"ctx\",{\"1\":{\"198\":3}}],[\"createobject\",{\"1\":{\"299\":1}}],[\"created\",{\"1\":{\"297\":1,\"303\":1}}],[\"create<nestexpressapplication>\",{\"1\":{\"250\":1}}],[\"createarticledto\",{\"1\":{\"220\":8}}],[\"createuserdto\",{\"1\":{\"209\":4,\"210\":4,\"213\":5,\"229\":4}}],[\"createtestdto\",{\"1\":{\"159\":4,\"164\":4}}],[\"create\",{\"1\":{\"153\":1,\"159\":3,\"160\":1,\"164\":1,\"193\":1,\"201\":1,\"209\":3,\"210\":3,\"212\":1,\"213\":5,\"220\":6,\"221\":1,\"229\":3,\"231\":1}}],[\"cpu\",{\"1\":{\"152\":22,\"323\":1}}],[\"c=2\",{\"1\":{\"118\":1}}],[\"c\",{\"1\":{\"118\":2,\"126\":32,\"291\":1}}],[\"cnu\",{\"1\":{\"284\":1}}],[\"cn\",{\"1\":{\"83\":1}}],[\"center\",{\"1\":{\"50\":1}}],[\"cleaner\",{\"0\":{\"321\":1},\"1\":{\"321\":1}}],[\"cli\",{\"0\":{\"143\":1},\"1\":{\"143\":3}}],[\"clip\",{\"1\":{\"33\":2,\"71\":1}}],[\"close\",{\"1\":{\"100\":1}}],[\"clash\",{\"0\":{\"346\":1},\"1\":{\"346\":1}}],[\"class\",{\"1\":{\"152\":6,\"153\":3,\"159\":1,\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"167\":1,\"168\":1,\"174\":4,\"176\":2,\"177\":2,\"178\":1,\"179\":2,\"180\":1,\"186\":5,\"191\":2,\"192\":3,\"198\":1,\"200\":2,\"207\":1,\"209\":1,\"210\":1,\"211\":1,\"213\":10,\"218\":1,\"220\":2,\"222\":2,\"227\":1,\"229\":1,\"230\":1,\"241\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1}}],[\"class=\",{\"1\":{\"50\":2}}],[\"clamp\",{\"1\":{\"72\":1}}],[\"clamp来限制在一个块元素显示的文本的行数\",{\"1\":{\"72\":1}}],[\"callback\",{\"1\":{\"241\":2}}],[\"callhandler\",{\"1\":{\"227\":2}}],[\"canactivate\",{\"1\":{\"218\":4,\"222\":3}}],[\"cache\",{\"1\":{\"168\":1}}],[\"cap\",{\"1\":{\"100\":1}}],[\"case\",{\"1\":{\"100\":1,\"134\":8,\"135\":7}}],[\"carousel>\",{\"1\":{\"51\":1}}],[\"carousel\",{\"1\":{\"50\":1,\"51\":2}}],[\"catch\",{\"0\":{\"43\":1,\"44\":1},\"1\":{\"43\":1,\"44\":1,\"45\":4,\"198\":3}}],[\"code\",{\"1\":{\"349\":1}}],[\"courier\",{\"1\":{\"332\":1}}],[\"core\",{\"1\":{\"153\":1,\"160\":1,\"193\":1,\"201\":1,\"212\":1,\"213\":1,\"221\":1,\"222\":1,\"231\":1,\"250\":1}}],[\"copy\",{\"1\":{\"100\":1}}],[\"consolas\",{\"1\":{\"332\":1}}],[\"console\",{\"1\":{\"43\":1,\"44\":1,\"45\":1,\"152\":4,\"191\":2,\"243\":1,\"244\":1}}],[\"consumer\",{\"1\":{\"191\":2,\"192\":6}}],[\"constructor\",{\"1\":{\"152\":2,\"153\":1,\"159\":1,\"167\":1,\"168\":1,\"174\":1,\"176\":1,\"177\":1,\"186\":1,\"200\":2,\"209\":1,\"210\":1,\"211\":1,\"213\":1,\"220\":2,\"222\":2,\"229\":1}}],[\"const\",{\"1\":{\"50\":8,\"51\":5,\"100\":1,\"117\":2,\"118\":6,\"152\":4,\"153\":1,\"160\":1,\"193\":1,\"198\":4,\"201\":1,\"212\":1,\"213\":1,\"221\":1,\"222\":2,\"231\":1,\"235\":1,\"241\":1,\"245\":1,\"246\":2,\"250\":1}}],[\"context\",{\"1\":{\"218\":1,\"222\":3,\"227\":1}}],[\"content\",{\"1\":{\"50\":2,\"63\":1,\"246\":2}}],[\"controller\",{\"1\":{\"153\":4,\"157\":1,\"159\":3,\"162\":6,\"163\":6,\"164\":6,\"165\":6,\"166\":3,\"167\":3,\"168\":3,\"174\":3,\"176\":3,\"177\":3,\"186\":8,\"191\":1,\"192\":5,\"200\":6,\"209\":3,\"210\":3,\"211\":3,\"213\":3,\"220\":6,\"222\":3,\"229\":3,\"230\":1,\"241\":1,\"243\":3,\"244\":3,\"245\":3,\"246\":3}}],[\"controllers\",{\"1\":{\"153\":2,\"157\":1,\"184\":2,\"186\":4,\"191\":1,\"192\":3,\"230\":1,\"241\":1}}],[\"control\",{\"1\":{\"149\":1,\"168\":1}}],[\"continue\",{\"1\":{\"100\":1}}],[\"containerwidth\",{\"1\":{\"50\":2}}],[\"containerref\",{\"1\":{\"50\":3}}],[\"container\",{\"1\":{\"50\":2}}],[\"configure\",{\"1\":{\"191\":1,\"192\":3}}],[\"configservice\",{\"1\":{\"178\":1}}],[\"config\",{\"1\":{\"38\":1,\"39\":1,\"186\":2,\"310\":1,\"311\":2,\"313\":2,\"314\":2,\"315\":2,\"316\":2,\"337\":1}}],[\"color\",{\"1\":{\"33\":2,\"51\":1}}],[\"common\",{\"1\":{\"153\":3,\"159\":1,\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"167\":1,\"168\":1,\"174\":4,\"176\":3,\"177\":3,\"178\":1,\"179\":1,\"180\":1,\"186\":5,\"191\":2,\"192\":3,\"198\":1,\"200\":2,\"207\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":2,\"218\":1,\"220\":2,\"222\":2,\"227\":1,\"229\":1,\"230\":1,\"235\":1,\"236\":1,\"241\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1}}],[\"compressing\",{\"1\":{\"246\":3}}],[\"computer\",{\"1\":{\"152\":16}}],[\"complex128\",{\"1\":{\"100\":1,\"106\":1}}],[\"complex64\",{\"1\":{\"100\":1,\"106\":1}}],[\"complex\",{\"1\":{\"100\":1}}],[\"components\",{\"1\":{\"51\":1}}],[\"com\",{\"1\":{\"31\":2,\"38\":1,\"311\":1,\"315\":2,\"316\":2}}],[\"css\",{\"0\":{\"33\":1,\"55\":1,\"75\":1},\"1\":{\"75\":1},\"2\":{\"35\":1,\"60\":1,\"66\":1,\"74\":1,\"77\":1}}],[\"cd\",{\"1\":{\"19\":1,\"145\":1,\"305\":1}}],[\"editing\",{\"1\":{\"336\":2}}],[\"editor\",{\"1\":{\"331\":1,\"332\":1,\"333\":2,\"336\":1}}],[\"email\",{\"1\":{\"311\":2}}],[\"esc\",{\"1\":{\"305\":1}}],[\"enable\",{\"1\":{\"291\":1}}],[\"environment\",{\"1\":{\"178\":2}}],[\"env\",{\"1\":{\"83\":1}}],[\"extension\",{\"0\":{\"324\":1}}],[\"extname\",{\"1\":{\"241\":3}}],[\"example\",{\"1\":{\"311\":1}}],[\"exe\",{\"1\":{\"297\":1,\"299\":2,\"300\":1}}],[\"executioncontext\",{\"1\":{\"218\":2,\"222\":2,\"227\":2}}],[\"exceptionfilter\",{\"1\":{\"198\":2,\"201\":1}}],[\"exception\",{\"1\":{\"197\":1,\"198\":4,\"200\":2,\"201\":1}}],[\"exclude\",{\"1\":{\"160\":1,\"192\":3}}],[\"express\",{\"1\":{\"191\":1,\"222\":1,\"241\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"250\":1}}],[\"exports\",{\"1\":{\"184\":1}}],[\"export\",{\"1\":{\"153\":3,\"159\":1,\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"167\":1,\"168\":1,\"174\":4,\"176\":2,\"177\":2,\"178\":1,\"179\":1,\"180\":1,\"186\":5,\"191\":2,\"192\":3,\"198\":1,\"200\":2,\"207\":1,\"209\":1,\"210\":1,\"211\":1,\"213\":2,\"218\":1,\"220\":2,\"222\":2,\"227\":1,\"229\":1,\"230\":1,\"235\":1,\"236\":1,\"241\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1}}],[\"ellipsis\",{\"1\":{\"71\":2,\"72\":3}}],[\"else\",{\"0\":{\"132\":1},\"1\":{\"50\":1,\"100\":1,\"132\":3,\"133\":2,\"222\":1}}],[\"echarts\",{\"0\":{\"67\":1},\"2\":{\"69\":1}}],[\"error2\",{\"1\":{\"45\":1}}],[\"error1\",{\"1\":{\"45\":1}}],[\"error\",{\"1\":{\"43\":2,\"44\":2,\"45\":4,\"111\":1}}],[\"e\",{\"1\":{\"19\":3}}],[\"02\",{\"1\":{\"297\":2,\"303\":2}}],[\"0001\",{\"1\":{\"125\":1}}],[\"0000\",{\"1\":{\"125\":4}}],[\"0011\",{\"1\":{\"125\":2}}],[\"0px\",{\"1\":{\"67\":4}}],[\"09\",{\"1\":{\"30\":1}}],[\"07\",{\"1\":{\"30\":1}}],[\"0\",{\"1\":{\"18\":1,\"19\":2,\"50\":4,\"75\":1,\"105\":4,\"118\":2,\"122\":1,\"213\":1,\"291\":5,\"313\":4,\"315\":4}}],[\"xm\",{\"1\":{\"18\":1}}],[\"x\",{\"1\":{\"18\":3}}],[\"在微信中将下载的表情包发送给好友\",{\"1\":{\"361\":1}}],[\"在私信页面找到我们发送的表情包\",{\"1\":{\"358\":1}}],[\"在电脑浏览器中登录抖音网页版\",{\"1\":{\"357\":1}}],[\"在设置中搜索\",{\"1\":{\"330\":1,\"331\":1,\"332\":1,\"333\":2,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":1}}],[\"在输出的\",{\"1\":{\"297\":1,\"303\":1}}],[\"在地址栏输入\",{\"1\":{\"297\":1,\"299\":1}}],[\"在什么环境下拍摄\",{\"1\":{\"279\":1}}],[\"在光照很强时\",{\"1\":{\"272\":1}}],[\"在守卫中\",{\"1\":{\"222\":1}}],[\"在控制器中使用\",{\"0\":{\"242\":1},\"1\":{\"242\":1}}],[\"在控制器中使用类验证器\",{\"1\":{\"213\":1}}],[\"在控制器方法中\",{\"1\":{\"213\":1}}],[\"在控制器的构造函数中\",{\"1\":{\"153\":1}}],[\"在实例化过程中\",{\"1\":{\"179\":1}}],[\"在某些情况下\",{\"1\":{\"178\":1}}],[\"在需要使用的地方\",{\"1\":{\"177\":1}}],[\"在需要使用的类中\",{\"1\":{\"174\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1}}],[\"在模块中引入\",{\"0\":{\"241\":1}}],[\"在模块中注册提供者时\",{\"1\":{\"177\":1}}],[\"在模块中\",{\"1\":{\"176\":1,\"179\":1,\"180\":1,\"184\":1}}],[\"在模块的\",{\"1\":{\"174\":1}}],[\"在构造函数中注入提供者即可\",{\"1\":{\"178\":1}}],[\"在构造函数中注入提供者\",{\"1\":{\"174\":1,\"176\":1}}],[\"在依赖注入中\",{\"1\":{\"152\":1}}],[\"在这个例子中\",{\"1\":{\"152\":2,\"153\":1}}],[\"在传统的开发模式中\",{\"1\":{\"152\":1}}],[\"在浏览器中访问\",{\"1\":{\"251\":1}}],[\"在浏览器中\",{\"1\":{\"145\":1}}],[\"在布尔表达式\",{\"1\":{\"133\":2}}],[\"在布尔表达式为\",{\"1\":{\"131\":1,\"132\":2}}],[\"在新的一行被使用时\",{\"1\":{\"118\":1}}],[\"在程序运行时\",{\"1\":{\"116\":1}}],[\"在\",{\"1\":{\"101\":1,\"104\":1,\"118\":1,\"149\":1,\"150\":1,\"153\":1,\"157\":1,\"159\":1,\"160\":1,\"173\":1,\"184\":1,\"186\":1,\"191\":1,\"192\":2,\"193\":1,\"197\":1,\"213\":1,\"221\":1,\"250\":1,\"299\":1,\"303\":1,\"306\":1}}],[\"在该文件目录下执行以下命令即可\",{\"1\":{\"91\":1}}],[\"在终端中输入\",{\"1\":{\"82\":1}}],[\"在同一块上\",{\"1\":{\"18\":1,\"19\":1}}],[\"在完成左右桥之后\",{\"1\":{\"0\":1}}],[\"但需要拍摄丝绸状流水时\",{\"1\":{\"274\":1}}],[\"但也可能引入噪点\",{\"1\":{\"260\":1}}],[\"但如果像素密度过高\",{\"1\":{\"256\":1}}],[\"但必须是相同的类型\",{\"1\":{\"134\":1}}],[\"但是建议去南天门租大衣\",{\"1\":{\"367\":1}}],[\"但是直接通过域名访问的\",{\"1\":{\"160\":1}}],[\"但是第一个字符必须是字母或下划线而不能是数字\",{\"1\":{\"98\":1}}],[\"但是他们在整个包的内部是可见并且可用的\",{\"1\":{\"90\":1}}],[\"但是最后一个编码是以\",{\"1\":{\"19\":1}}],[\"但是\",{\"1\":{\"18\":1,\"19\":1}}],[\"但还有未读的棱块\",{\"1\":{\"18\":2,\"19\":1}}],[\"jetbrains\",{\"1\":{\"332\":1}}],[\"join\",{\"1\":{\"241\":2,\"245\":2,\"246\":2}}],[\"js\",{\"1\":{\"213\":1,\"337\":2}}],[\"json\",{\"1\":{\"198\":1}}],[\"javascript\",{\"0\":{\"337\":1,\"338\":1},\"2\":{\"47\":1}}],[\"j\",{\"1\":{\"18\":4}}],[\"所见即所得\",{\"1\":{\"265\":1}}],[\"所有被发送的表达式都会被求值\",{\"1\":{\"135\":1}}],[\"所有\",{\"1\":{\"135\":1}}],[\"所有通道都没有准备好\",{\"1\":{\"135\":1}}],[\"所有棱块都读到了\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"所以\",{\"1\":{\"118\":1}}],[\"所以我们可以自己写一个工具函数来优化异常捕获\",{\"1\":{\"45\":1}}],[\"所以我们需要继续按色相借位\",{\"1\":{\"18\":2,\"19\":1}}],[\"所以出现了翻色的情况\",{\"1\":{\"19\":1}}],[\"如何将抖音表情包保存到微信03\",{\"1\":{\"359\":1}}],[\"如何将抖音表情包保存到微信02\",{\"1\":{\"359\":1}}],[\"如何将抖音表情包保存到微信01\",{\"1\":{\"358\":1}}],[\"如何将抖音表情包保存到微信\",{\"0\":{\"356\":1}}],[\"如何使用\",{\"0\":{\"290\":1}}],[\"如何学习\",{\"0\":{\"280\":1}}],[\"如何提高构图能力\",{\"0\":{\"278\":1}}],[\"如何设定相机参数\",{\"0\":{\"270\":1}}],[\"如何更好地使用联想词记忆\",{\"0\":{\"5\":1}}],[\"如下语句\",{\"1\":{\"95\":1}}],[\"如\",{\"1\":{\"90\":1,\"101\":1,\"149\":1,\"159\":3}}],[\"如果体力好的话可以先去岱庙游览一番然后再登山\",{\"1\":{\"366\":1}}],[\"如果我们想把它们保存到微信上\",{\"1\":{\"356\":1}}],[\"如果我们需要传递参数该怎么做呢\",{\"1\":{\"186\":1}}],[\"如果我们需要更换\",{\"1\":{\"152\":1}}],[\"如果我们需要执行后面的\",{\"1\":{\"134\":1}}],[\"如果近处有景物时\",{\"1\":{\"271\":1}}],[\"如果想抓拍\",{\"1\":{\"259\":1}}],[\"如果返回为\",{\"1\":{\"218\":1}}],[\"如果当前的中间件函数没有结束请求\",{\"1\":{\"190\":1}}],[\"如果你想要重用一个已经存在的提供者\",{\"1\":{\"180\":1}}],[\"如果没有快门线\",{\"1\":{\"271\":1}}],[\"如果没有\",{\"1\":{\"135\":1}}],[\"如果没有提供初始值\",{\"1\":{\"111\":1}}],[\"如果任意某个通道可以进行\",{\"1\":{\"135\":1}}],[\"如果所有通道都没有准备好\",{\"1\":{\"135\":1}}],[\"如果多个通道都准备好\",{\"1\":{\"135\":1}}],[\"如果条件为\",{\"1\":{\"124\":1}}],[\"如果两边的操作数有一个\",{\"1\":{\"124\":1}}],[\"如果两边的操作数都是\",{\"1\":{\"124\":1}}],[\"如果是返回\",{\"1\":{\"123\":4}}],[\"如果不相等返回\",{\"1\":{\"123\":1}}],[\"如果相等返回\",{\"1\":{\"123\":1}}],[\"如果提供了初始值\",{\"1\":{\"111\":1}}],[\"如果有三脚架时\",{\"1\":{\"271\":1}}],[\"如果有多个\",{\"1\":{\"135\":1}}],[\"如果有\",{\"1\":{\"88\":1,\"135\":1}}],[\"如果只写一次\",{\"1\":{\"45\":1}}],[\"如果给文字直接设置渐变色会不生效\",{\"1\":{\"33\":1}}],[\"如果\",{\"1\":{\"18\":1,\"19\":1}}],[\"那么执行\",{\"1\":{\"135\":1}}],[\"那么\",{\"1\":{\"135\":1}}],[\"那么使用这种形式的标识符的对象就可以被外部包的代码所使用\",{\"1\":{\"90\":1}}],[\"那么我们的第八个编码就是\",{\"1\":{\"18\":1}}],[\"那么我们需要借一个\",{\"1\":{\"18\":1,\"19\":1}}],[\"那么第十四个编码就是\",{\"1\":{\"18\":1}}],[\"那么第十三个编码就是\",{\"1\":{\"18\":1}}],[\"那么第十二个编码就是\",{\"1\":{\"18\":1,\"19\":1}}],[\"那么第十一个编码就是\",{\"1\":{\"18\":1,\"19\":1}}],[\"那么第十个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第九个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第八个编码就是\",{\"1\":{\"17\":1,\"19\":1,\"23\":1}}],[\"那么第七个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第六个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第五个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第四个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第三个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第二个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"那么第一个编码就是\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"1px\",{\"1\":{\"284\":1}}],[\"1以上\",{\"1\":{\"271\":1}}],[\"15\",{\"1\":{\"125\":1}}],[\"13\",{\"1\":{\"125\":1}}],[\"1111\",{\"1\":{\"125\":2}}],[\"1101\",{\"1\":{\"125\":1}}],[\"1100\",{\"1\":{\"125\":2}}],[\"11\",{\"1\":{\"122\":1}}],[\"12\",{\"1\":{\"125\":2,\"297\":1,\"303\":1}}],[\"127\",{\"1\":{\"105\":1,\"313\":2,\"315\":2}}],[\"128\",{\"1\":{\"105\":1}}],[\"18446744073709551615\",{\"1\":{\"105\":1}}],[\"16\",{\"1\":{\"105\":2}}],[\"1000秒\",{\"1\":{\"259\":1}}],[\"1000秒的快门速度意味着快门每次只打开1\",{\"1\":{\"259\":1}}],[\"100px\",{\"1\":{\"51\":1}}],[\"100\",{\"1\":{\"50\":1}}],[\"10\",{\"1\":{\"50\":1,\"122\":2,\"123\":1}}],[\"1\",{\"1\":{\"18\":2,\"19\":1,\"50\":1,\"51\":1,\"118\":1,\"133\":2,\"159\":3,\"259\":1,\"261\":1,\"272\":1,\"291\":1,\"313\":2,\"315\":2}}],[\"黄绿块的黄色是\",{\"1\":{\"19\":1}}],[\"黄绿块的绿色是\",{\"1\":{\"18\":1}}],[\"黄顶红前\",{\"1\":{\"10\":1,\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"借位的原则是按色相借位\",{\"1\":{\"18\":1,\"19\":1}}],[\"它可以控制进光量从而影响曝光时间\",{\"1\":{\"259\":1}}],[\"它们提供了类验证器所需的功能\",{\"1\":{\"213\":1}}],[\"它们存储在堆上\",{\"1\":{\"113\":1}}],[\"它们存储在栈上\",{\"1\":{\"113\":1}}],[\"它允许你在类属性上使用装饰器来指定验证规则\",{\"1\":{\"213\":1}}],[\"它只是记录进入和离开中间件函数的日志消息\",{\"1\":{\"191\":1}}],[\"它必须调用\",{\"1\":{\"190\":1}}],[\"它有如下几个属性\",{\"1\":{\"184\":1}}],[\"它使用\",{\"1\":{\"184\":1}}],[\"它封装了一组相关的功能和服务\",{\"1\":{\"184\":1}}],[\"它将依赖于\",{\"1\":{\"153\":1}}],[\"它直接创建\",{\"1\":{\"152\":1}}],[\"它就执行\",{\"1\":{\"135\":1}}],[\"它由数字\",{\"1\":{\"98\":1}}],[\"它的内容如下\",{\"1\":{\"218\":1,\"227\":1,\"235\":1}}],[\"它的值都会自动加\",{\"1\":{\"118\":1}}],[\"它的六个标记分别为\",{\"1\":{\"95\":1}}],[\"它的编码是\",{\"1\":{\"17\":11,\"18\":11,\"19\":10,\"23\":11}}],[\"它是我们的缓冲块\",{\"1\":{\"18\":1,\"19\":1}}],[\"tarstream\",{\"1\":{\"246\":3}}],[\"the\",{\"1\":{\"297\":2,\"303\":2}}],[\"throw\",{\"1\":{\"200\":2,\"207\":1}}],[\"this\",{\"1\":{\"152\":8,\"153\":1,\"159\":5,\"167\":1,\"168\":1,\"174\":1,\"176\":2,\"177\":3,\"186\":2,\"200\":2,\"209\":2,\"210\":2,\"211\":1,\"213\":1,\"220\":2,\"222\":2,\"229\":2}}],[\"timestamp\",{\"1\":{\"198\":1}}],[\"ts\",{\"1\":{\"153\":4,\"159\":1,\"160\":2,\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"167\":1,\"168\":1,\"174\":4,\"176\":2,\"177\":2,\"178\":1,\"179\":1,\"180\":1,\"186\":7,\"191\":3,\"192\":3,\"193\":2,\"198\":1,\"200\":2,\"201\":1,\"207\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":2,\"213\":4,\"218\":1,\"220\":2,\"221\":2,\"222\":2,\"227\":1,\"229\":1,\"230\":1,\"231\":2,\"235\":1,\"236\":1,\"241\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"250\":2}}],[\"typescript\",{\"0\":{\"338\":1}}],[\"types\",{\"1\":{\"240\":1}}],[\"typeof\",{\"1\":{\"207\":1}}],[\"type\",{\"1\":{\"50\":5,\"100\":1,\"207\":1,\"222\":1,\"246\":1,\"333\":2}}],[\"termux\",{\"0\":{\"302\":1},\"1\":{\"302\":3,\"303\":1,\"306\":1},\"2\":{\"308\":1}}],[\"testconfig\",{\"1\":{\"186\":2}}],[\"testcontroller\",{\"1\":{\"159\":1,\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"186\":3,\"200\":2}}],[\"testmodule\",{\"1\":{\"186\":8}}],[\"testservice\",{\"1\":{\"159\":8,\"186\":6,\"200\":8}}],[\"test\",{\"1\":{\"159\":14,\"162\":6,\"163\":6,\"164\":7,\"165\":6,\"166\":3,\"186\":18,\"192\":1,\"200\":8}}],[\"template>\",{\"1\":{\"50\":1,\"51\":1}}],[\"textscrollspeed\",{\"1\":{\"51\":2}}],[\"textstartscrolldelay\",{\"1\":{\"51\":2}}],[\"textstyle=\",{\"1\":{\"51\":1}}],[\"textstyle\",{\"1\":{\"50\":3,\"51\":2}}],[\"textwidth\",{\"1\":{\"50\":3}}],[\"textcontent=\",{\"1\":{\"51\":1}}],[\"textcontent\",{\"1\":{\"50\":4,\"51\":2}}],[\"textcontentref\",{\"1\":{\"50\":3}}],[\"textgap=\",{\"1\":{\"51\":1}}],[\"textgap\",{\"1\":{\"50\":4,\"51\":2}}],[\"textoverflow\",{\"1\":{\"50\":5}}],[\"text\",{\"1\":{\"33\":3,\"71\":3,\"72\":1}}],[\"translatex\",{\"1\":{\"50\":2}}],[\"transformer\",{\"1\":{\"213\":2}}],[\"transform\",{\"1\":{\"50\":2,\"207\":2}}],[\"transparent\",{\"1\":{\"33\":1,\"75\":1}}],[\"true\",{\"1\":{\"50\":2,\"100\":1,\"104\":1,\"123\":9,\"124\":9,\"130\":1,\"131\":1,\"132\":1,\"133\":2,\"134\":1,\"218\":2,\"222\":1,\"243\":1,\"244\":1,\"333\":2,\"336\":1,\"337\":1}}],[\"trycatch\",{\"1\":{\"45\":3}}],[\"try\",{\"0\":{\"43\":1},\"1\":{\"43\":1,\"45\":4}}],[\"toisostring\",{\"1\":{\"198\":1}}],[\"token\",{\"1\":{\"177\":7}}],[\"top\",{\"1\":{\"67\":1}}],[\"to\",{\"1\":{\"33\":2,\"50\":1}}],[\"t\",{\"1\":{\"18\":3}}],[\"t6\",{\"1\":{\"0\":1}}],[\"query\",{\"0\":{\"162\":1},\"1\":{\"162\":13,\"166\":1,\"207\":2,\"222\":1,\"245\":2,\"246\":2}}],[\"qq\",{\"0\":{\"343\":1},\"1\":{\"31\":2,\"343\":1}}],[\"qt\",{\"1\":{\"18\":1}}],[\"q\",{\"1\":{\"18\":3}}],[\"wq\",{\"1\":{\"305\":1}}],[\"wscript\",{\"1\":{\"299\":1}}],[\"ws\",{\"1\":{\"299\":2}}],[\"widget\",{\"1\":{\"302\":1}}],[\"width\",{\"1\":{\"50\":1,\"51\":1}}],[\"windows\",{\"0\":{\"296\":1},\"1\":{\"297\":1}}],[\"while\",{\"1\":{\"291\":1}}],[\"white\",{\"1\":{\"71\":2}}],[\"whitespace\",{\"1\":{\"50\":2}}],[\"writebit\",{\"1\":{\"291\":3}}],[\"world\",{\"0\":{\"88\":1},\"1\":{\"88\":2,\"95\":2,\"153\":1,\"174\":1}}],[\"watch\",{\"1\":{\"50\":2}}],[\"webkit\",{\"1\":{\"33\":2,\"72\":8}}],[\"w\",{\"1\":{\"17\":3,\"19\":3,\"23\":3,\"83\":1}}],[\"droid\",{\"1\":{\"302\":1}}],[\"download\",{\"1\":{\"245\":3}}],[\"date\",{\"1\":{\"198\":1,\"241\":1}}],[\"dynamicmodule\",{\"1\":{\"186\":2}}],[\"dto\",{\"1\":{\"159\":4,\"164\":2,\"209\":2,\"210\":2,\"213\":6,\"220\":4,\"229\":2}}],[\"destination\",{\"1\":{\"241\":1}}],[\"description\",{\"1\":{\"236\":1}}],[\"decorator\",{\"1\":{\"235\":2,\"236\":1}}],[\"decorators\",{\"1\":{\"150\":1}}],[\"delete\",{\"1\":{\"159\":4}}],[\"dependency\",{\"1\":{\"150\":1}}],[\"developmentconfigservice\",{\"1\":{\"178\":1}}],[\"development\",{\"1\":{\"178\":1}}],[\"dev\",{\"1\":{\"145\":1}}],[\"defer\",{\"1\":{\"100\":1}}],[\"defaultvaluepipe\",{\"1\":{\"206\":1}}],[\"default\",{\"1\":{\"50\":5,\"100\":1,\"134\":1,\"135\":4}}],[\"defineprops\",{\"1\":{\"50\":1}}],[\"dialog\",{\"1\":{\"334\":2}}],[\"dirname\",{\"1\":{\"241\":1,\"245\":1,\"246\":1}}],[\"direct\",{\"1\":{\"83\":1}}],[\"disposition\",{\"1\":{\"246\":1}}],[\"display\",{\"1\":{\"50\":2,\"72\":1}}],[\"diskstorage\",{\"1\":{\"241\":2}}],[\"di\",{\"0\":{\"150\":1},\"1\":{\"150\":1,\"153\":1}}],[\"div\",{\"1\":{\"71\":1}}],[\"div>\",{\"1\":{\"50\":4,\"51\":1}}],[\"duration\",{\"1\":{\"50\":3}}],[\"d\",{\"1\":{\"17\":3,\"18\":5,\"19\":9,\"23\":3}}],[\"d2\",{\"1\":{\"17\":2,\"18\":1}}],[\"smooth\",{\"1\":{\"335\":1}}],[\"size\",{\"1\":{\"331\":2}}],[\"save\",{\"1\":{\"330\":2,\"333\":2}}],[\"successfully\",{\"1\":{\"297\":1,\"303\":1}}],[\"speed\",{\"1\":{\"259\":1,\"291\":2}}],[\"space\",{\"1\":{\"71\":2}}],[\"sh\",{\"1\":{\"305\":1}}],[\"shortcuts\",{\"1\":{\"305\":2}}],[\"show=\",{\"1\":{\"50\":1}}],[\"shell\",{\"1\":{\"299\":2}}],[\"shutter\",{\"1\":{\"259\":1}}],[\"src\",{\"1\":{\"153\":4,\"159\":1,\"160\":1,\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"167\":1,\"168\":1,\"174\":4,\"176\":2,\"177\":2,\"178\":1,\"179\":1,\"180\":1,\"186\":5,\"191\":2,\"192\":3,\"193\":1,\"198\":1,\"200\":4,\"201\":1,\"207\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":3,\"218\":1,\"220\":4,\"221\":1,\"222\":3,\"227\":1,\"229\":2,\"230\":1,\"231\":1,\"235\":1,\"236\":1,\"241\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1}}],[\"switchyomega\",{\"0\":{\"322\":1},\"1\":{\"322\":1}}],[\"switchtohttp\",{\"1\":{\"198\":1,\"222\":1}}],[\"switch\",{\"0\":{\"134\":1},\"1\":{\"100\":1,\"134\":3,\"135\":1}}],[\"scoped>\",{\"1\":{\"50\":1}}],[\"script>\",{\"1\":{\"50\":1,\"51\":1}}],[\"scrollspeed=\",{\"1\":{\"51\":1}}],[\"scrollspeed\",{\"1\":{\"50\":2}}],[\"scrolldelay=\",{\"1\":{\"51\":1}}],[\"scrolldelay\",{\"1\":{\"50\":2}}],[\"studio\",{\"1\":{\"349\":1}}],[\"stm32\",{\"0\":{\"294\":1},\"1\":{\"294\":1},\"2\":{\"293\":1}}],[\"stm32f10x\",{\"1\":{\"291\":1}}],[\"storage\",{\"1\":{\"241\":1}}],[\"statuscode\",{\"1\":{\"198\":1}}],[\"status\",{\"1\":{\"198\":4}}],[\"static\",{\"1\":{\"186\":1,\"250\":1,\"251\":1}}],[\"startup\",{\"1\":{\"299\":1}}],[\"start\",{\"1\":{\"145\":1,\"305\":1}}],[\"stream\",{\"1\":{\"246\":2}}],[\"streamdownload\",{\"1\":{\"246\":2}}],[\"struct\",{\"1\":{\"100\":1,\"104\":1}}],[\"string\",{\"0\":{\"162\":1},\"1\":{\"50\":1,\"100\":1,\"111\":2,\"153\":2,\"159\":3,\"162\":1,\"163\":1,\"164\":1,\"165\":1,\"167\":1,\"168\":1,\"174\":2,\"176\":1,\"177\":2,\"186\":2,\"200\":2,\"207\":2,\"213\":1,\"222\":1,\"235\":1,\"245\":1,\"246\":1}}],[\"style\",{\"1\":{\"334\":2}}],[\"style>\",{\"1\":{\"50\":1}}],[\"style=\",{\"1\":{\"50\":3,\"51\":1}}],[\"s`\",{\"1\":{\"50\":2}}],[\"semicolons\",{\"1\":{\"338\":2}}],[\"server\",{\"1\":{\"297\":1,\"299\":1,\"303\":1,\"305\":1}}],[\"service\",{\"1\":{\"153\":4,\"159\":1,\"167\":1,\"168\":1,\"174\":4,\"176\":2,\"177\":1,\"180\":1,\"186\":5,\"191\":1,\"192\":5,\"200\":2,\"209\":1,\"210\":1,\"211\":1,\"213\":1,\"220\":2,\"222\":1,\"229\":1,\"230\":1,\"241\":1}}],[\"select\",{\"0\":{\"135\":1},\"1\":{\"100\":1,\"135\":7}}],[\"setbits\",{\"1\":{\"291\":2}}],[\"setheader\",{\"1\":{\"246\":2}}],[\"setmetadata\",{\"1\":{\"222\":3,\"235\":2,\"236\":1}}],[\"setglobalprefix\",{\"1\":{\"160\":1}}],[\"setup>\",{\"1\":{\"50\":1,\"51\":1}}],[\"set\",{\"1\":{\"38\":1,\"39\":1,\"291\":1,\"299\":1}}],[\"se\",{\"1\":{\"19\":1}}],[\"sd\",{\"1\":{\"17\":1,\"23\":1}}],[\"s\",{\"1\":{\"17\":3,\"19\":3,\"23\":3}}],[\"s6\",{\"1\":{\"0\":1}}],[\"nvidia\",{\"1\":{\"152\":2}}],[\"nvidiagpu\",{\"1\":{\"152\":7}}],[\"nil\",{\"1\":{\"100\":1}}],[\"next\",{\"1\":{\"190\":2,\"191\":2,\"227\":2}}],[\"nexttick\",{\"1\":{\"50\":3}}],[\"nestexpressapplication\",{\"1\":{\"250\":1}}],[\"nestinterceptor\",{\"1\":{\"227\":3}}],[\"nestmodule\",{\"1\":{\"191\":2,\"192\":6}}],[\"nestmiddleware\",{\"1\":{\"191\":2}}],[\"nestfactory\",{\"1\":{\"153\":2,\"160\":2,\"193\":2,\"201\":2,\"212\":2,\"213\":2,\"221\":2,\"231\":2,\"250\":2}}],[\"nestjs\",{\"1\":{\"143\":2,\"153\":5,\"159\":1,\"160\":1,\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"167\":1,\"168\":1,\"174\":4,\"176\":3,\"177\":3,\"178\":1,\"179\":1,\"180\":1,\"186\":5,\"191\":2,\"192\":3,\"193\":1,\"198\":1,\"200\":2,\"201\":1,\"207\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":2,\"213\":3,\"218\":1,\"220\":2,\"221\":1,\"222\":3,\"227\":1,\"229\":1,\"230\":1,\"231\":1,\"235\":1,\"236\":1,\"241\":2,\"243\":2,\"244\":2,\"245\":1,\"246\":1,\"250\":2}}],[\"nest\",{\"0\":{\"142\":1,\"143\":1,\"144\":1,\"153\":1,\"254\":1},\"1\":{\"143\":2,\"144\":1,\"149\":1,\"150\":1,\"153\":6,\"157\":1,\"159\":2,\"172\":1,\"173\":2,\"176\":1,\"179\":2,\"184\":1,\"191\":1,\"197\":1,\"198\":1,\"199\":1,\"205\":1,\"206\":1,\"207\":1,\"213\":2,\"217\":1,\"218\":1,\"222\":1,\"226\":1,\"227\":1,\"235\":2,\"240\":1,\"254\":1},\"2\":{\"147\":1,\"155\":1,\"170\":1,\"182\":1,\"188\":1,\"195\":1,\"203\":1,\"215\":1,\"224\":1,\"233\":1,\"238\":1,\"248\":1,\"253\":1}}],[\"new\",{\"1\":{\"100\":1,\"144\":1,\"152\":6,\"193\":1,\"198\":1,\"200\":2,\"201\":1,\"207\":1,\"212\":1,\"213\":2,\"221\":1,\"229\":1,\"231\":1,\"241\":1,\"246\":1,\"332\":1}}],[\"node\",{\"1\":{\"213\":1}}],[\"not\",{\"1\":{\"124\":2,\"372\":1}}],[\"none\",{\"1\":{\"50\":1,\"168\":1}}],[\"nowrap\",{\"1\":{\"50\":2,\"71\":2}}],[\"number\",{\"1\":{\"50\":3,\"162\":1,\"211\":1,\"213\":1}}],[\"null\",{\"1\":{\"45\":2,\"50\":3,\"241\":2}}],[\"npmjs\",{\"1\":{\"39\":1}}],[\"npmmirror\",{\"1\":{\"38\":1}}],[\"npm\",{\"0\":{\"36\":1},\"1\":{\"37\":1,\"38\":1,\"39\":1,\"143\":2,\"145\":1,\"213\":1,\"240\":1,\"246\":1},\"2\":{\"41\":1}}],[\"name\",{\"1\":{\"162\":4,\"163\":6,\"164\":4,\"165\":4,\"166\":1,\"213\":1,\"311\":2}}],[\"na\",{\"1\":{\"19\":1}}],[\"n\",{\"1\":{\"17\":3,\"19\":3,\"23\":3}}],[\"key\",{\"1\":{\"177\":3,\"222\":1}}],[\"keyframes\",{\"1\":{\"50\":1}}],[\"kd\",{\"1\":{\"18\":1}}],[\"kn\",{\"1\":{\"17\":1,\"23\":1}}],[\"k\",{\"1\":{\"17\":3,\"18\":3,\"23\":3}}],[\"your\",{\"1\":{\"311\":1}}],[\"yellow\",{\"1\":{\"33\":2}}],[\"yd\",{\"1\":{\"19\":1}}],[\"yi\",{\"1\":{\"18\":1}}],[\"y\",{\"1\":{\"17\":3,\"18\":3,\"19\":3,\"23\":3}}],[\"on\",{\"1\":{\"333\":4}}],[\"onmounted\",{\"1\":{\"50\":2}}],[\"out\",{\"1\":{\"291\":1}}],[\"octet\",{\"1\":{\"246\":1}}],[\"observable<any>\",{\"1\":{\"227\":1}}],[\"observable<boolean>\",{\"1\":{\"218\":1,\"222\":1}}],[\"observable\",{\"1\":{\"218\":1,\"222\":1,\"227\":1}}],[\"object\",{\"0\":{\"166\":1},\"1\":{\"50\":1}}],[\"options\",{\"1\":{\"186\":2}}],[\"of\",{\"1\":{\"149\":1}}],[\"offsetwidth\",{\"1\":{\"50\":2}}],[\"origin\",{\"0\":{\"323\":1},\"1\":{\"323\":1}}],[\"originalname\",{\"1\":{\"241\":2}}],[\"orient\",{\"1\":{\"72\":1}}],[\"orient属性设置伸缩盒对象的子元素的排列方式\",{\"1\":{\"72\":1}}],[\"or\",{\"1\":{\"124\":1}}],[\"org\",{\"1\":{\"39\":1}}],[\"overflow\",{\"1\":{\"50\":1,\"71\":5,\"72\":3}}],[\"oi\",{\"1\":{\"19\":1}}],[\"oy\",{\"1\":{\"17\":1,\"23\":1}}],[\"o\",{\"1\":{\"17\":3,\"18\":3,\"19\":3,\"23\":3}}],[\"o2\",{\"1\":{\"0\":1}}],[\"iso自动\",{\"1\":{\"271\":1}}],[\"iso\",{\"1\":{\"260\":1}}],[\"isnotempty\",{\"1\":{\"213\":3}}],[\"isint\",{\"1\":{\"213\":3}}],[\"isstring\",{\"1\":{\"213\":3}}],[\"is\",{\"1\":{\"177\":1,\"297\":1,\"303\":1}}],[\"id\",{\"1\":{\"159\":12,\"200\":6,\"211\":4}}],[\"ioc\",{\"0\":{\"149\":1},\"1\":{\"149\":4,\"150\":1,\"153\":3}}],[\"iota\",{\"0\":{\"118\":1},\"1\":{\"100\":1,\"118\":11}}],[\"ieee\",{\"1\":{\"106\":2}}],[\"implicit\",{\"1\":{\"337\":1}}],[\"implements\",{\"1\":{\"152\":2,\"191\":2,\"192\":3,\"198\":1,\"207\":1,\"218\":1,\"222\":1,\"227\":1}}],[\"imports\",{\"1\":{\"153\":1,\"184\":1,\"185\":1,\"186\":3,\"191\":1,\"192\":3,\"230\":1,\"241\":1}}],[\"import\",{\"1\":{\"50\":1,\"51\":2,\"88\":1,\"99\":1,\"100\":1,\"153\":8,\"159\":4,\"160\":2,\"162\":2,\"163\":2,\"164\":3,\"165\":2,\"166\":1,\"167\":2,\"168\":2,\"174\":7,\"176\":5,\"177\":4,\"178\":1,\"179\":1,\"180\":2,\"186\":17,\"191\":6,\"192\":16,\"193\":3,\"198\":1,\"200\":6,\"201\":3,\"207\":1,\"209\":3,\"210\":3,\"211\":2,\"212\":3,\"213\":7,\"218\":2,\"220\":8,\"221\":3,\"222\":7,\"227\":2,\"229\":4,\"230\":5,\"231\":3,\"235\":1,\"236\":1,\"241\":6,\"243\":2,\"244\":2,\"245\":3,\"246\":4,\"250\":3}}],[\"imag\",{\"1\":{\"100\":1}}],[\"insert\",{\"1\":{\"338\":1}}],[\"install\",{\"1\":{\"143\":1,\"213\":1,\"240\":1,\"246\":1,\"303\":1,\"305\":1}}],[\"info\",{\"1\":{\"297\":2,\"303\":2}}],[\"infinite\",{\"1\":{\"50\":1}}],[\"include\",{\"1\":{\"291\":1}}],[\"includes\",{\"1\":{\"222\":1}}],[\"inject\",{\"1\":{\"176\":1,\"177\":3,\"179\":4,\"180\":1,\"186\":3}}],[\"injectable\",{\"1\":{\"153\":3,\"174\":3,\"191\":2,\"207\":2,\"218\":3,\"222\":2,\"227\":3}}],[\"injection\",{\"1\":{\"150\":1}}],[\"inversion\",{\"1\":{\"149\":1}}],[\"intercept\",{\"1\":{\"227\":1}}],[\"interceptor\",{\"1\":{\"227\":4,\"229\":3,\"230\":4,\"231\":3}}],[\"interceptors\",{\"1\":{\"226\":1}}],[\"interface\",{\"1\":{\"100\":1,\"104\":1,\"152\":4}}],[\"intel\",{\"1\":{\"152\":2}}],[\"intelcpu\",{\"1\":{\"152\":7}}],[\"int64\",{\"1\":{\"100\":1,\"105\":1}}],[\"int32\",{\"1\":{\"100\":1,\"105\":1,\"107\":1}}],[\"int16\",{\"1\":{\"100\":1,\"105\":1}}],[\"int8\",{\"1\":{\"100\":1,\"105\":1}}],[\"int\",{\"1\":{\"100\":1,\"101\":1,\"104\":1,\"107\":1,\"111\":5,\"291\":1}}],[\"initial\",{\"1\":{\"297\":1,\"303\":1}}],[\"initstructure\",{\"1\":{\"291\":5}}],[\"inittypedef\",{\"1\":{\"291\":1}}],[\"init\",{\"1\":{\"88\":1,\"290\":1,\"291\":2}}],[\"index属性以确保导航栏在页面其他元素之上显示\",{\"1\":{\"57\":1}}],[\"items\",{\"1\":{\"50\":1}}],[\"if\",{\"0\":{\"131\":1,\"132\":1,\"133\":1},\"1\":{\"50\":1,\"100\":1,\"131\":2,\"132\":2,\"133\":6,\"207\":1,\"222\":1}}],[\"ij\",{\"1\":{\"18\":2}}],[\"i\",{\"1\":{\"17\":3,\"18\":2,\"19\":3,\"23\":3,\"305\":1}}],[\"是相机传感器对光线的敏感程度\",{\"1\":{\"260\":1}}],[\"是用于对\",{\"1\":{\"217\":1}}],[\"是用于管理应用程序的依赖项和服务\",{\"1\":{\"172\":1}}],[\"是关于数据的元数据信息\",{\"1\":{\"207\":1}}],[\"是传过来的数据\",{\"1\":{\"207\":1}}],[\"是在路由处理程序之前调用的函数\",{\"1\":{\"190\":1}}],[\"是应用程序的基本构建块\",{\"1\":{\"184\":1}}],[\"是通过装饰器和\",{\"1\":{\"153\":1}}],[\"是一个生活方式\",{\"1\":{\"342\":1}}],[\"是一个指针变量\",{\"1\":{\"127\":1}}],[\"是一种基于装饰器的验证机制\",{\"1\":{\"213\":1}}],[\"是一种软件设计思想\",{\"1\":{\"149\":1}}],[\"是官方提供的脚手架工具\",{\"1\":{\"143\":1}}],[\"是\",{\"1\":{\"135\":1,\"150\":1,\"205\":1,\"226\":1}}],[\"是双目运算符\",{\"1\":{\"125\":5}}],[\"是否安装成功\",{\"1\":{\"82\":1}}],[\"是红绿块的绿\",{\"1\":{\"19\":1}}],[\"是红蓝块的蓝\",{\"1\":{\"18\":1}}],[\"是红蓝块的红\",{\"1\":{\"17\":1,\"19\":1,\"23\":1}}],[\"是橙蓝块的蓝\",{\"1\":{\"18\":1}}],[\"是橙蓝块的橙\",{\"1\":{\"17\":1,\"19\":1,\"23\":1}}],[\"是橙绿块的橙\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"是黄橙块的黄\",{\"1\":{\"19\":1}}],[\"是黄橙块的橙\",{\"1\":{\"17\":1,\"18\":1,\"23\":1}}],[\"是黄红块的红\",{\"1\":{\"18\":1,\"19\":1}}],[\"是黄绿块的绿\",{\"1\":{\"18\":1}}],[\"是黄绿块的黄\",{\"1\":{\"17\":1,\"19\":1,\"23\":1}}],[\"是黄蓝块的蓝\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"是白橙块的白\",{\"1\":{\"18\":1}}],[\"是白橙块的橙\",{\"1\":{\"17\":1,\"23\":1}}],[\"是白蓝块的白\",{\"1\":{\"17\":1,\"18\":1,\"23\":1}}],[\"是白绿块的白\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"是白红块的白\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"是桥式方法的第三步\",{\"1\":{\"0\":1}}],[\"afterdelay\",{\"1\":{\"330\":1}}],[\"auto\",{\"1\":{\"330\":2}}],[\"authguard\",{\"1\":{\"218\":1,\"220\":4,\"221\":2,\"222\":3,\"236\":1}}],[\"auth\",{\"1\":{\"218\":2,\"220\":4,\"221\":2,\"222\":4,\"236\":3}}],[\"acg\",{\"1\":{\"320\":1}}],[\"acg助手\",{\"0\":{\"320\":1}}],[\"aclass\",{\"1\":{\"179\":4,\"180\":1}}],[\"alist\",{\"0\":{\"295\":1,\"303\":1,\"306\":1,\"350\":1},\"1\":{\"297\":3,\"298\":1,\"299\":3,\"300\":1,\"303\":3,\"304\":1,\"305\":2,\"306\":1,\"350\":2},\"2\":{\"308\":1}}],[\"align\",{\"1\":{\"50\":1}}],[\"addentry\",{\"1\":{\"246\":1}}],[\"admin\",{\"1\":{\"222\":3,\"297\":1,\"303\":1}}],[\"array<express\",{\"1\":{\"244\":1}}],[\"args\",{\"1\":{\"235\":2}}],[\"argumentmetadata\",{\"1\":{\"207\":2}}],[\"argumentshost\",{\"1\":{\"198\":2}}],[\"articlecontroller\",{\"1\":{\"220\":2,\"222\":1}}],[\"articleservice\",{\"1\":{\"220\":8,\"222\":4}}],[\"article\",{\"1\":{\"220\":10,\"222\":4}}],[\"apt\",{\"1\":{\"303\":2}}],[\"apb2periph\",{\"1\":{\"291\":1}}],[\"apb2periphclockcmd\",{\"1\":{\"291\":1}}],[\"apifox\",{\"0\":{\"353\":1},\"1\":{\"353\":1}}],[\"apiunauthorizedresponse\",{\"1\":{\"236\":1}}],[\"apibearerauth\",{\"1\":{\"236\":1}}],[\"api\",{\"1\":{\"160\":2,\"353\":2}}],[\"application\",{\"1\":{\"246\":1}}],[\"applydecorators\",{\"1\":{\"236\":2}}],[\"apply\",{\"1\":{\"191\":1,\"192\":3}}],[\"appmodule\",{\"1\":{\"153\":3,\"160\":2,\"174\":2,\"176\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"186\":3,\"191\":1,\"192\":3,\"193\":2,\"201\":2,\"212\":2,\"213\":2,\"221\":2,\"230\":1,\"231\":2,\"250\":2}}],[\"appcontroller\",{\"1\":{\"153\":6,\"167\":1,\"168\":1,\"174\":1,\"176\":1,\"177\":1,\"186\":6,\"191\":2,\"192\":6,\"230\":2}}],[\"appservice\",{\"1\":{\"153\":12,\"167\":4,\"168\":4,\"174\":10,\"176\":4,\"177\":4,\"186\":6,\"191\":2,\"192\":6,\"230\":2}}],[\"append\",{\"1\":{\"100\":1}}],[\"app\",{\"1\":{\"51\":1,\"153\":9,\"160\":4,\"167\":2,\"168\":2,\"174\":8,\"176\":4,\"177\":4,\"178\":1,\"179\":1,\"180\":1,\"186\":10,\"191\":4,\"192\":9,\"193\":6,\"201\":4,\"212\":4,\"213\":4,\"221\":4,\"230\":4,\"231\":4,\"250\":4}}],[\"any\",{\"1\":{\"207\":1}}],[\"android\",{\"0\":{\"301\":1}}],[\"and\",{\"1\":{\"124\":1,\"297\":1,\"303\":1}}],[\"animation\",{\"1\":{\"50\":1}}],[\"animationdelay\",{\"1\":{\"50\":1}}],[\"animationduration\",{\"1\":{\"50\":1}}],[\"a++\",{\"1\":{\"122\":1}}],[\"a=0\",{\"1\":{\"118\":1}}],[\"age\",{\"1\":{\"101\":1,\"162\":4,\"213\":1}}],[\"await\",{\"1\":{\"43\":1,\"44\":1,\"45\":5,\"153\":2,\"160\":2,\"193\":2,\"201\":2,\"212\":2,\"213\":2,\"221\":2,\"231\":2,\"246\":1,\"250\":2}}],[\"as\",{\"1\":{\"222\":1}}],[\"asyncfn\",{\"1\":{\"45\":2}}],[\"asyncfn2\",{\"1\":{\"45\":2}}],[\"asyncfn1\",{\"1\":{\"45\":2}}],[\"async2\",{\"1\":{\"43\":1,\"44\":1}}],[\"async1\",{\"1\":{\"43\":1,\"44\":1,\"45\":2}}],[\"async\",{\"0\":{\"42\":1},\"1\":{\"43\":1,\"44\":1,\"45\":3,\"153\":1,\"160\":1,\"193\":1,\"201\":1,\"212\":1,\"213\":1,\"221\":1,\"231\":1,\"246\":1,\"250\":1}}],[\"as6\",{\"1\":{\"0\":1}}],[\"ab\",{\"1\":{\"18\":2,\"19\":3}}],[\"ai\",{\"1\":{\"17\":1,\"23\":1}}],[\"a\",{\"1\":{\"17\":3,\"19\":3,\"23\":3,\"118\":2,\"122\":7,\"123\":7,\"124\":4,\"125\":7,\"126\":12,\"127\":2,\"177\":1,\"179\":3,\"207\":1}}],[\"geek\",{\"0\":{\"344\":1},\"1\":{\"344\":1}}],[\"gettime\",{\"1\":{\"241\":1}}],[\"gethandler\",{\"1\":{\"222\":1}}],[\"gethello\",{\"1\":{\"153\":3,\"167\":2,\"168\":2,\"174\":3,\"176\":2,\"177\":2}}],[\"get<string\",{\"1\":{\"222\":1}}],[\"getstatus\",{\"1\":{\"198\":1}}],[\"getrequest<request>\",{\"1\":{\"222\":1}}],[\"getrequest\",{\"1\":{\"198\":1}}],[\"getresponse\",{\"1\":{\"198\":1}}],[\"get\",{\"1\":{\"37\":1,\"153\":2,\"159\":6,\"162\":4,\"163\":4,\"166\":2,\"167\":2,\"168\":2,\"174\":2,\"176\":2,\"177\":2,\"186\":2,\"192\":1,\"200\":4,\"209\":2,\"210\":2,\"211\":2,\"222\":2,\"229\":2,\"245\":2,\"246\":2}}],[\"git\",{\"0\":{\"309\":1,\"348\":1},\"1\":{\"310\":1,\"311\":2,\"313\":2,\"314\":2,\"315\":2,\"316\":2,\"348\":1},\"2\":{\"318\":1}}],[\"github\",{\"0\":{\"315\":1,\"316\":1},\"1\":{\"31\":2,\"297\":1,\"315\":2,\"316\":2}}],[\"gpioa\",{\"1\":{\"291\":6}}],[\"gpio\",{\"0\":{\"290\":1},\"1\":{\"290\":2,\"291\":26}}],[\"gpu\",{\"1\":{\"152\":22}}],[\"guard\",{\"1\":{\"218\":2,\"220\":2,\"221\":1,\"222\":2}}],[\"guards\",{\"1\":{\"217\":1}}],[\"global\",{\"1\":{\"185\":1,\"311\":2,\"313\":2,\"314\":2,\"315\":2,\"316\":2,\"352\":1}}],[\"goto\",{\"1\":{\"100\":1}}],[\"goproxy=https\",{\"1\":{\"83\":1}}],[\"goproxy\",{\"0\":{\"83\":1},\"1\":{\"83\":2}}],[\"go\",{\"0\":{\"80\":1,\"87\":1,\"89\":1,\"90\":1,\"91\":1,\"94\":1,\"95\":1,\"104\":1,\"110\":1,\"116\":1,\"121\":1,\"130\":1,\"138\":1,\"141\":1},\"1\":{\"81\":1,\"82\":2,\"83\":1,\"84\":1,\"88\":3,\"91\":3,\"95\":1,\"99\":1,\"100\":3,\"101\":2,\"104\":4,\"110\":1,\"121\":1,\"135\":2,\"141\":1},\"2\":{\"86\":1,\"93\":1,\"103\":1,\"109\":1,\"115\":1,\"120\":1,\"129\":1,\"137\":1,\"140\":1}}],[\"group\",{\"1\":{\"90\":1}}],[\"grow\",{\"1\":{\"50\":1}}],[\"grid\",{\"1\":{\"67\":2}}],[\"green\",{\"1\":{\"33\":2,\"51\":1}}],[\"gradient\",{\"1\":{\"33\":2}}],[\"g\",{\"1\":{\"17\":3,\"18\":2,\"19\":2,\"23\":3,\"143\":2,\"191\":1,\"198\":1,\"207\":1,\"218\":1,\"227\":1,\"235\":1,\"240\":1}}],[\"gh\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"rcc\",{\"1\":{\"291\":2}}],[\"raylink\",{\"0\":{\"351\":1},\"1\":{\"351\":1}}],[\"raw格式\",{\"1\":{\"271\":1}}],[\"range\",{\"1\":{\"100\":1}}],[\"rolesguard\",{\"1\":{\"236\":1}}],[\"roles\",{\"1\":{\"236\":3}}],[\"role\",{\"1\":{\"222\":3,\"235\":4,\"236\":1}}],[\"rxjs\",{\"1\":{\"218\":1,\"222\":1,\"227\":1}}],[\"rune\",{\"1\":{\"107\":1}}],[\"run\",{\"1\":{\"91\":1,\"145\":1,\"152\":4,\"299\":1}}],[\"releases\",{\"1\":{\"297\":1}}],[\"registerasync\",{\"1\":{\"241\":1}}],[\"register\",{\"1\":{\"241\":2}}],[\"registry\",{\"1\":{\"37\":1,\"38\":2,\"39\":2}}],[\"req\",{\"1\":{\"166\":7,\"191\":1,\"241\":1}}],[\"requestmethod\",{\"1\":{\"192\":4}}],[\"request\",{\"0\":{\"164\":1,\"165\":1,\"166\":1},\"1\":{\"191\":2,\"198\":2,\"222\":3}}],[\"remove\",{\"1\":{\"159\":2}}],[\"readonly\",{\"1\":{\"153\":1,\"159\":1,\"167\":1,\"168\":1,\"174\":1,\"176\":2,\"177\":2,\"186\":2,\"200\":2,\"209\":1,\"210\":1,\"211\":1,\"213\":1,\"220\":2,\"222\":1,\"229\":1}}],[\"real\",{\"1\":{\"100\":1}}],[\"render\",{\"1\":{\"152\":6}}],[\"rendertext\",{\"1\":{\"50\":3}}],[\"recover\",{\"1\":{\"100\":1}}],[\"reflector\",{\"1\":{\"222\":5}}],[\"ref\",{\"1\":{\"50\":5,\"51\":6}}],[\"ref=\",{\"1\":{\"50\":2}}],[\"return\",{\"1\":{\"45\":2,\"100\":1,\"153\":2,\"159\":5,\"162\":2,\"163\":2,\"164\":2,\"165\":2,\"166\":1,\"167\":1,\"168\":1,\"174\":2,\"176\":1,\"177\":1,\"179\":2,\"186\":2,\"200\":2,\"207\":1,\"209\":2,\"210\":2,\"211\":1,\"213\":1,\"218\":1,\"220\":2,\"222\":3,\"227\":1,\"229\":2,\"236\":1,\"241\":1,\"243\":1,\"244\":1}}],[\"reset\",{\"1\":{\"291\":1}}],[\"resetbits\",{\"1\":{\"291\":2}}],[\"response\",{\"1\":{\"191\":2,\"198\":2,\"245\":2,\"246\":2}}],[\"res2\",{\"1\":{\"45\":1}}],[\"res1\",{\"1\":{\"45\":1}}],[\"res\",{\"1\":{\"45\":2,\"191\":1,\"240\":1,\"245\":4,\"246\":6}}],[\"right\",{\"1\":{\"33\":2,\"67\":1}}],[\"rw\",{\"1\":{\"19\":1}}],[\"r\",{\"1\":{\"17\":1,\"18\":2,\"19\":5}}],[\"r2\",{\"1\":{\"17\":2,\"18\":3,\"19\":3}}],[\"blinking\",{\"1\":{\"335\":2}}],[\"bilibili\",{\"1\":{\"320\":2}}],[\"bit\",{\"1\":{\"291\":2}}],[\"behance\",{\"1\":{\"284\":1}}],[\"be\",{\"1\":{\"207\":1}}],[\"bandizip\",{\"0\":{\"345\":1},\"1\":{\"345\":1}}],[\"badrequestexception\",{\"1\":{\"207\":2}}],[\"backgroundcolor\",{\"1\":{\"51\":1}}],[\"background\",{\"1\":{\"33\":3}}],[\"b=1\",{\"1\":{\"118\":1}}],[\"byte\",{\"1\":{\"100\":1,\"107\":1}}],[\"break\",{\"1\":{\"100\":1,\"134\":1}}],[\"body\",{\"0\":{\"164\":1},\"1\":{\"159\":3,\"164\":7,\"209\":2,\"210\":2,\"213\":2,\"220\":4,\"229\":2}}],[\"bookmark\",{\"0\":{\"321\":1},\"1\":{\"321\":1}}],[\"bootstrap\",{\"1\":{\"153\":2,\"160\":2,\"193\":2,\"201\":2,\"212\":2,\"213\":2,\"221\":2,\"231\":2,\"250\":2}}],[\"boolean\",{\"1\":{\"218\":1,\"222\":1}}],[\"bool\",{\"1\":{\"100\":1}}],[\"box\",{\"1\":{\"72\":4}}],[\"bottom\",{\"1\":{\"67\":1}}],[\"bold\",{\"1\":{\"51\":1}}],[\"bd\",{\"1\":{\"19\":1}}],[\"bj\",{\"1\":{\"18\":1}}],[\"bf\",{\"1\":{\"18\":1}}],[\"b2\",{\"1\":{\"18\":1,\"19\":2}}],[\"b\",{\"1\":{\"17\":3,\"18\":5,\"19\":4,\"118\":2,\"122\":6,\"123\":7,\"124\":4,\"125\":5,\"126\":2,\"179\":1,\"180\":1}}],[\"family\",{\"1\":{\"332\":2}}],[\"fallthrough\",{\"1\":{\"100\":1,\"134\":2}}],[\"false\",{\"1\":{\"50\":1,\"100\":1,\"104\":1,\"123\":9,\"124\":5,\"130\":1,\"132\":2,\"222\":1}}],[\"f值越大表示光圈较小\",{\"1\":{\"258\":1}}],[\"f值越小表示光圈开得更大\",{\"1\":{\"258\":1}}],[\"flat\",{\"1\":{\"191\":1}}],[\"float64\",{\"1\":{\"100\":1,\"104\":1,\"106\":1}}],[\"float32\",{\"1\":{\"100\":1,\"104\":1,\"106\":1}}],[\"flex\",{\"1\":{\"50\":4}}],[\"found\",{\"1\":{\"372\":1}}],[\"font\",{\"1\":{\"331\":2,\"332\":2}}],[\"fontweight\",{\"1\":{\"51\":1}}],[\"format\",{\"1\":{\"333\":4,\"338\":1}}],[\"forbiddenexception\",{\"1\":{\"200\":4}}],[\"forroutes\",{\"1\":{\"191\":1,\"192\":4}}],[\"forroot\",{\"1\":{\"186\":3}}],[\"for\",{\"1\":{\"100\":1}}],[\"func\",{\"1\":{\"88\":1,\"99\":1,\"100\":1,\"111\":1}}],[\"function\",{\"1\":{\"43\":1,\"44\":1,\"45\":2,\"153\":1,\"160\":1,\"193\":1,\"201\":1,\"212\":1,\"213\":1,\"221\":1,\"231\":1,\"236\":1,\"250\":1}}],[\"fmt\",{\"1\":{\"88\":3,\"95\":2,\"99\":2}}],[\"file>\",{\"1\":{\"244\":1}}],[\"files\",{\"1\":{\"244\":5,\"330\":1}}],[\"filesinterceptor\",{\"1\":{\"244\":4}}],[\"fileinterceptor\",{\"1\":{\"243\":4}}],[\"file\",{\"1\":{\"241\":3,\"243\":5}}],[\"filename=$\",{\"1\":{\"246\":1}}],[\"filename\",{\"1\":{\"241\":3,\"245\":3,\"246\":4}}],[\"filter\",{\"1\":{\"198\":2,\"200\":2,\"201\":1}}],[\"filters\",{\"1\":{\"197\":1}}],[\"fill\",{\"1\":{\"33\":1}}],[\"findone\",{\"1\":{\"159\":2,\"200\":4,\"211\":2}}],[\"findall\",{\"1\":{\"159\":2,\"186\":2,\"209\":2,\"210\":2,\"222\":2,\"229\":2}}],[\"fit\",{\"1\":{\"63\":1}}],[\"from\",{\"1\":{\"50\":1,\"51\":2,\"153\":8,\"159\":4,\"160\":2,\"162\":2,\"163\":2,\"164\":3,\"165\":2,\"166\":1,\"167\":2,\"168\":2,\"174\":7,\"176\":5,\"177\":4,\"178\":1,\"179\":1,\"180\":2,\"186\":17,\"191\":6,\"192\":16,\"193\":3,\"198\":1,\"200\":6,\"201\":3,\"207\":1,\"209\":3,\"210\":3,\"211\":2,\"212\":3,\"213\":7,\"218\":2,\"220\":8,\"221\":3,\"222\":7,\"227\":2,\"229\":4,\"230\":5,\"231\":3,\"235\":1,\"236\":1,\"241\":6,\"243\":2,\"244\":2,\"245\":3,\"246\":4,\"250\":3}}],[\"fw\",{\"1\":{\"17\":1,\"23\":1}}],[\"f\",{\"1\":{\"17\":6,\"18\":5,\"19\":1,\"23\":3,\"302\":1}}],[\"f2\",{\"1\":{\"17\":2,\"18\":2,\"19\":2}}],[\"linked\",{\"1\":{\"336\":2}}],[\"line\",{\"1\":{\"72\":2}}],[\"linear\",{\"1\":{\"33\":2,\"50\":1}}],[\"list\",{\"1\":{\"310\":1}}],[\"listen\",{\"1\":{\"153\":1,\"160\":1,\"193\":1,\"201\":1,\"212\":1,\"213\":1,\"221\":1,\"231\":1,\"250\":1}}],[\"localhost\",{\"1\":{\"145\":1,\"251\":1,\"297\":1,\"303\":1}}],[\"loggingmiddleware\",{\"1\":{\"191\":3,\"192\":6,\"193\":2}}],[\"logging\",{\"1\":{\"191\":3,\"192\":3,\"193\":1}}],[\"log\",{\"1\":{\"43\":1,\"44\":1,\"45\":1,\"152\":4,\"191\":2,\"243\":1,\"244\":1}}],[\"len\",{\"1\":{\"100\":1}}],[\"left\",{\"1\":{\"67\":1}}],[\"let\",{\"1\":{\"45\":3}}],[\"l\",{\"1\":{\"19\":1}}],[\"l2\",{\"1\":{\"17\":4,\"18\":1,\"19\":1}}],[\"l6\",{\"1\":{\"0\":1}}],[\"正常情况\",{\"0\":{\"17\":1,\"23\":1}}],[\"第一个参数表示错误\",{\"1\":{\"241\":1}}],[\"第一个参数\",{\"1\":{\"222\":1}}],[\"第一个\",{\"1\":{\"118\":1}}],[\"第一个面称为0位置\",{\"1\":{\"13\":1}}],[\"第三个面称为2位置\",{\"1\":{\"13\":1}}],[\"第二个参数\",{\"1\":{\"222\":1}}],[\"第二个面称为1位置\",{\"1\":{\"13\":1}}],[\"第二个字反映后一个联想词的效果\",{\"1\":{\"5\":1}}],[\"另一个面称为1位置\",{\"1\":{\"13\":1}}],[\"我的电脑必装软件合集\",{\"0\":{\"341\":1}}],[\"我的浏览器插件合集\",{\"0\":{\"319\":1}}],[\"我的联想词\",{\"0\":{\"6\":1}}],[\"我是自定义的异常\",{\"1\":{\"198\":1}}],[\"我是传递的参数\",{\"1\":{\"186\":1}}],[\"我是多行注释\",{\"1\":{\"88\":1}}],[\"我是单行注释\",{\"1\":{\"88\":1}}],[\"我是一段很长的文字\",{\"1\":{\"51\":1}}],[\"我来自山东济南\",{\"1\":{\"27\":1}}],[\"我们点击开发者工具左上角的按钮\",{\"1\":{\"359\":1}}],[\"我们通过给小灯一个高电平\",{\"1\":{\"291\":1}}],[\"我们通过类型注解来声明依赖\",{\"1\":{\"153\":1}}],[\"我们应该使用快门速度较短的快门\",{\"1\":{\"259\":1}}],[\"我们也可以在全局中使用拦截器\",{\"1\":{\"231\":1}}],[\"我们也可以在模块中定义拦截器\",{\"1\":{\"230\":1}}],[\"我们还可以将管道绑定到全局\",{\"1\":{\"212\":1}}],[\"我们还可以将管道绑定到方法参数上\",{\"1\":{\"211\":1}}],[\"我们还可以通过在路由上添加\",{\"1\":{\"210\":1}}],[\"我们还可以创建自定义管道\",{\"1\":{\"207\":1}}],[\"我们来看一下如何使用动态模块\",{\"1\":{\"186\":1}}],[\"我们可能需要动态地决定使用哪个类来提供服务\",{\"1\":{\"178\":1}}],[\"我们可以通过后期来减少高感光度带来的噪点\",{\"1\":{\"260\":1}}],[\"我们可以通过在控制器类上添加\",{\"1\":{\"209\":1}}],[\"我们可以通过在模块入口处传递参数\",{\"1\":{\"186\":1}}],[\"我们可以将多个装饰器聚合\",{\"1\":{\"236\":1}}],[\"我们可以将拦截器直接添加到控制器中\",{\"1\":{\"229\":1}}],[\"我们可以直接导入使用\",{\"1\":{\"206\":1}}],[\"我们可以对控制器接收的数据进行转换和验证\",{\"1\":{\"205\":1}}],[\"我们可以在\",{\"1\":{\"186\":1}}],[\"我们可以理解为\",{\"1\":{\"172\":1}}],[\"我们可以根据需要传递不同的实现\",{\"1\":{\"152\":1}}],[\"我们可以使用多种方式来使用拦截器\",{\"1\":{\"228\":1}}],[\"我们可以使用多种方式在\",{\"1\":{\"199\":1}}],[\"我们可以使用工厂函数实现\",{\"1\":{\"179\":1}}],[\"我们可以使用\",{\"1\":{\"178\":1}}],[\"我们可以使用粘性定位来实现\",{\"1\":{\"57\":1}}],[\"我们可以使用以下方式实现\",{\"1\":{\"33\":1}}],[\"我们已经使用了类名作为我们的提供者标记\",{\"1\":{\"177\":1}}],[\"我们启动\",{\"1\":{\"153\":1}}],[\"我们创建一个\",{\"1\":{\"240\":1}}],[\"我们创建一个新的\",{\"1\":{\"186\":1}}],[\"我们创建一个控制器类\",{\"1\":{\"153\":1}}],[\"我们创建一个服务类\",{\"1\":{\"153\":1}}],[\"我们定义一个服务\",{\"1\":{\"153\":1}}],[\"我们传递\",{\"1\":{\"152\":1}}],[\"我们需要安装\",{\"1\":{\"240\":1}}],[\"我们需要在\",{\"1\":{\"212\":1}}],[\"我们需要动态地创建提供者\",{\"1\":{\"179\":1}}],[\"我们需要修改\",{\"1\":{\"152\":1}}],[\"我们需要配置成可访问的\",{\"1\":{\"83\":1}}],[\"我们使用以下命令创建一个拦截器\",{\"1\":{\"227\":1}}],[\"我们使用以下命令来创建一个守卫\",{\"1\":{\"218\":1}}],[\"我们使用反射器\",{\"1\":{\"222\":1}}],[\"我们使用命令来创建一个异常过滤器\",{\"1\":{\"198\":1}}],[\"我们使用动态模块实现了之前静态模块的效果\",{\"1\":{\"186\":1}}],[\"我们使用\",{\"1\":{\"88\":1,\"178\":1,\"240\":1}}],[\"我们封装一个工具函数\",{\"1\":{\"45\":1}}],[\"我们发现白蓝块需要翻色\",{\"1\":{\"19\":1}}],[\"我们借\",{\"1\":{\"18\":2,\"19\":1}}],[\"我们首选的借位是借\",{\"1\":{\"18\":1,\"19\":1}}],[\"我们不需要读出来\",{\"1\":{\"17\":1,\"23\":1}}],[\"我们将以上代码放入\",{\"1\":{\"91\":1}}],[\"我们将角块上三个面中按编码顺序\",{\"1\":{\"13\":1}}],[\"我们将棱块两个面上颜色中相对高级的面称为0位置\",{\"1\":{\"13\":1}}],[\"色相\",{\"0\":{\"13\":1}}],[\"ublock\",{\"0\":{\"323\":1},\"1\":{\"323\":1}}],[\"upgrade\",{\"1\":{\"306\":1}}],[\"uploadedfiles\",{\"1\":{\"244\":3}}],[\"uploadedfile\",{\"1\":{\"243\":3}}],[\"uploadmodule\",{\"1\":{\"241\":1}}],[\"uploads\",{\"1\":{\"241\":1,\"245\":1,\"246\":1}}],[\"uploadservice\",{\"1\":{\"241\":2}}],[\"uploadcontroller\",{\"1\":{\"241\":2,\"243\":1,\"244\":1,\"245\":1,\"246\":1}}],[\"upload\",{\"1\":{\"240\":2,\"241\":4,\"243\":5,\"244\":5,\"245\":3,\"246\":3}}],[\"updatetestdto\",{\"1\":{\"159\":4}}],[\"update\",{\"1\":{\"143\":1,\"159\":3,\"303\":1}}],[\"uninstaller\",{\"1\":{\"344\":1}}],[\"unicode\",{\"1\":{\"104\":1}}],[\"unset\",{\"1\":{\"314\":2,\"316\":2}}],[\"unauthorized\",{\"1\":{\"236\":1}}],[\"usestaticassets\",{\"1\":{\"250\":2}}],[\"useinterceptors\",{\"1\":{\"229\":2,\"243\":3,\"244\":3}}],[\"useguards\",{\"1\":{\"220\":5,\"222\":2,\"236\":1}}],[\"useglobalinterceptors\",{\"1\":{\"231\":1}}],[\"useglobalguards\",{\"1\":{\"221\":1}}],[\"useglobalpipes\",{\"1\":{\"212\":1,\"213\":1}}],[\"useglobalfilters\",{\"1\":{\"201\":1}}],[\"usepipes\",{\"1\":{\"209\":3,\"210\":3,\"213\":2}}],[\"usefilters\",{\"1\":{\"200\":5}}],[\"usefactory\",{\"0\":{\"179\":1},\"1\":{\"179\":2}}],[\"use\",{\"1\":{\"191\":1,\"193\":2}}],[\"useexisting\",{\"0\":{\"180\":1},\"1\":{\"180\":3}}],[\"usermodule\",{\"1\":{\"230\":2}}],[\"usercontroller\",{\"1\":{\"192\":5,\"209\":1,\"210\":1,\"211\":1,\"213\":1,\"229\":1}}],[\"user\",{\"1\":{\"176\":2,\"180\":1,\"192\":12,\"209\":5,\"210\":5,\"211\":4,\"213\":7,\"229\":5,\"230\":2,\"297\":1,\"303\":1,\"311\":2}}],[\"userservice\",{\"1\":{\"176\":5,\"180\":2,\"192\":4,\"209\":5,\"210\":5,\"211\":4,\"213\":4,\"229\":5}}],[\"usevalue\",{\"0\":{\"176\":1},\"1\":{\"176\":3,\"177\":1,\"186\":1}}],[\"useclass\",{\"0\":{\"178\":1},\"1\":{\"174\":1,\"178\":2,\"230\":1}}],[\"utf\",{\"1\":{\"104\":1}}],[\"uintptr\",{\"1\":{\"100\":1,\"107\":1}}],[\"uint8\",{\"1\":{\"100\":1,\"105\":1,\"107\":1}}],[\"uint\",{\"1\":{\"100\":1,\"107\":2}}],[\"uint64\",{\"1\":{\"100\":1,\"105\":1}}],[\"uint32\",{\"1\":{\"100\":1,\"105\":1}}],[\"uint16\",{\"1\":{\"100\":1,\"105\":1}}],[\"u\",{\"1\":{\"17\":1,\"18\":3}}],[\"u2\",{\"1\":{\"17\":3,\"18\":1,\"19\":2}}],[\"ufr\",{\"1\":{\"12\":1}}],[\"url\",{\"0\":{\"163\":2},\"1\":{\"159\":1,\"163\":1,\"198\":1,\"245\":2,\"246\":2}}],[\"ur\",{\"1\":{\"12\":1,\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"u6\",{\"1\":{\"0\":1}}],[\"棱块\",{\"1\":{\"12\":1,\"13\":1}}],[\"缓冲块的编码是不需要读出来的\",{\"1\":{\"18\":1,\"19\":1}}],[\"缓冲块的编码不需要读出来\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"23\":1}}],[\"缓冲\",{\"0\":{\"12\":1}}],[\"缓冲与色相\",{\"0\":{\"9\":1}}],[\"彳亍法角块读码01\",{\"1\":{\"23\":1}}],[\"彳亍法角块读码\",{\"0\":{\"22\":1}}],[\"彳亍法棱块读码03\",{\"1\":{\"19\":1}}],[\"彳亍法棱块读码02\",{\"1\":{\"18\":1}}],[\"彳亍法棱块读码01\",{\"1\":{\"17\":1}}],[\"彳亍法棱块读码\",{\"0\":{\"16\":1}}],[\"彳亍法\",{\"2\":{\"15\":1,\"21\":1,\"25\":1}}],[\"彳亍法编码图02\",{\"1\":{\"11\":1}}],[\"彳亍法编码图01\",{\"1\":{\"11\":1}}],[\"彳亍法的坐标系\",{\"0\":{\"9\":1}}],[\"坐标系\",{\"0\":{\"10\":1}}],[\"盲拧记忆\",{\"2\":{\"8\":1}}],[\"这还跟传感器的面积有关\",{\"1\":{\"256\":1}}],[\"这是因为过于密集的像素可能会互相干扰\",{\"1\":{\"256\":1}}],[\"这是一个流行的\",{\"1\":{\"213\":1}}],[\"这是我们的\",{\"1\":{\"152\":1}}],[\"这是我的第一个\",{\"1\":{\"88\":1}}],[\"这些装饰器来自\",{\"1\":{\"213\":1}}],[\"这些管道已经预先配置好了\",{\"1\":{\"206\":1}}],[\"这将创建两种访问同一提供者的方法\",{\"1\":{\"180\":1}}],[\"这两个列表应该是相关的\",{\"1\":{\"179\":1}}],[\"这样所有的控制器都会自动应用该管道\",{\"1\":{\"212\":1}}],[\"这样我们就可以在导入一个模块的时候\",{\"1\":{\"186\":1}}],[\"这样\",{\"1\":{\"152\":1,\"153\":1,\"173\":1}}],[\"这种方式的缺点是\",{\"1\":{\"152\":1}}],[\"这里的数字指的就是焦距\",{\"1\":{\"267\":1}}],[\"这里的error是接口\",{\"1\":{\"111\":1}}],[\"这里可以根据具体业务逻辑进行判断\",{\"1\":{\"218\":1}}],[\"这里说明已经回到了缓冲块\",{\"1\":{\"17\":1,\"23\":1}}],[\"这被称为导出\",{\"1\":{\"90\":1}}],[\"这个包实现了格式化输入\",{\"1\":{\"88\":1}}],[\"这个动词的第一个字体现前一个联想词的特征\",{\"1\":{\"5\":1}}],[\"这显然是不合理的\",{\"1\":{\"45\":1}}],[\"这一步的目标是在不考虑\",{\"1\":{\"0\":1}}],[\"三阶魔方盲拧相关公式及技巧\",{\"1\":{\"26\":1}}],[\"三阶魔方盲拧\",{\"0\":{\"26\":1},\"2\":{\"8\":1,\"15\":1,\"21\":1,\"25\":1}}],[\"三阶魔方速拧相关公式及技巧\",{\"1\":{\"3\":1}}],[\"三阶魔方速拧\",{\"0\":{\"3\":1},\"2\":{\"2\":1}}],[\"三盲\",{\"0\":{\"4\":1,\"9\":1,\"16\":1,\"22\":1}}],[\"三速\",{\"0\":{\"0\":1}}],[\"桥式\",{\"2\":{\"2\":1}}],[\"魔方\",{\"1\":{\"28\":1},\"2\":{\"1\":1,\"7\":1,\"14\":1,\"20\":1,\"24\":1}}],[\"共有\",{\"1\":{\"0\":1}}],[\"层的情况下完成顶层的角块\",{\"1\":{\"0\":1}}],[\"mkdir\",{\"1\":{\"305\":1}}],[\"m43画幅\",{\"1\":{\"266\":1}}],[\"multermodule\",{\"1\":{\"241\":2}}],[\"multer\",{\"0\":{\"241\":1,\"242\":1},\"1\":{\"240\":3,\"241\":1,\"242\":1,\"244\":1}}],[\"must\",{\"1\":{\"207\":1}}],[\"min\",{\"1\":{\"213\":2}}],[\"middlewareconsumer\",{\"1\":{\"191\":2,\"192\":6}}],[\"middleware\",{\"1\":{\"190\":1,\"191\":3,\"192\":3,\"193\":1}}],[\"myinterceptorinterceptor\",{\"1\":{\"227\":1,\"229\":2,\"230\":2,\"231\":2}}],[\"mypipespipe\",{\"1\":{\"207\":1}}],[\"my\",{\"1\":{\"207\":2,\"227\":2,\"229\":2,\"230\":2,\"231\":2}}],[\"metadata\",{\"1\":{\"207\":3}}],[\"method\",{\"1\":{\"179\":1,\"192\":2}}],[\"message\",{\"1\":{\"198\":1}}],[\"manager\",{\"0\":{\"324\":1}}],[\"make\",{\"1\":{\"100\":1,\"179\":3}}],[\"map\",{\"1\":{\"100\":1,\"104\":1,\"111\":1}}],[\"main\",{\"1\":{\"88\":4,\"99\":2,\"153\":1,\"160\":2,\"201\":1,\"212\":2,\"213\":2,\"221\":2,\"231\":2,\"250\":2,\"291\":2}}],[\"monospace\",{\"1\":{\"332\":1}}],[\"mono\",{\"1\":{\"332\":1}}],[\"mode\",{\"1\":{\"291\":2}}],[\"modules\",{\"1\":{\"184\":1}}],[\"module\",{\"1\":{\"153\":4,\"160\":1,\"174\":6,\"176\":3,\"177\":3,\"178\":3,\"179\":3,\"180\":3,\"184\":2,\"186\":17,\"191\":4,\"192\":9,\"193\":3,\"201\":1,\"212\":1,\"213\":1,\"221\":1,\"230\":4,\"231\":1,\"241\":3,\"250\":1}}],[\"move\",{\"1\":{\"50\":2}}],[\"mo\",{\"1\":{\"18\":1}}],[\"mn\",{\"1\":{\"18\":1}}],[\"m\",{\"1\":{\"0\":1,\"18\":5}}],[\"公式集\",{\"2\":{\"2\":1}}],[\"公式\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
