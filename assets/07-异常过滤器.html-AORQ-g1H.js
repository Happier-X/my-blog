import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-BBL1Dbys.js";const e={},p=t(`<h2 id="什么是异常过滤器" tabindex="-1"><a class="header-anchor" href="#什么是异常过滤器"><span>什么是异常过滤器</span></a></h2><p>异常过滤器（Exception Filters）在 Nest 中用于捕获和处理应用程序中的异常情况。当异常发生时，过滤器会捕获并处理该异常，以提供更好的用户体验或记录错误日志。</p><h2 id="创建异常过滤器" tabindex="-1"><a class="header-anchor" href="#创建异常过滤器"><span>创建异常过滤器</span></a></h2><p>我们使用命令来创建一个异常过滤器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nest g filter http-exception
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>过滤器内容如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// src/http-exception.filter.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
    ArgumentsHost<span class="token punctuation">,</span>
    Catch<span class="token punctuation">,</span>
    ExceptionFilter<span class="token punctuation">,</span>
    HttpException<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Catch</span></span><span class="token punctuation">(</span>HttpException<span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">HttpExceptionFilter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">ExceptionFilter</span> <span class="token punctuation">{</span>
    <span class="token function">catch</span><span class="token punctuation">(</span>exception<span class="token operator">:</span> HttpException<span class="token punctuation">,</span> host<span class="token operator">:</span> ArgumentsHost<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> ctx <span class="token operator">=</span> host<span class="token punctuation">.</span><span class="token function">switchToHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取请求上下文</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取响应对象</span>
        <span class="token keyword">const</span> request <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取请求对象</span>
        <span class="token keyword">const</span> status <span class="token operator">=</span> exception<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取异常状态码</span>
        response<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            statusCode<span class="token operator">:</span> status<span class="token punctuation">,</span>
            timestamp<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            path<span class="token operator">:</span> request<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
            message<span class="token operator">:</span> <span class="token string">&#39;我是自定义的异常&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用异常过滤器" tabindex="-1"><a class="header-anchor" href="#使用异常过滤器"><span>使用异常过滤器</span></a></h2><p>我们可以使用多种方式在 Nest 中使用异常过滤器。</p><h3 id="局部使用" tabindex="-1"><a class="header-anchor" href="#局部使用"><span>局部使用</span></a></h3><p>使用 <code>@UseFilters</code> 装饰器将异常过滤器应用于路由或控制器：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// src/test/test.controller.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
    Controller<span class="token punctuation">,</span>
    Get<span class="token punctuation">,</span>
    Param<span class="token punctuation">,</span>
    UseFilters<span class="token punctuation">,</span>
    ForbiddenException<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TestService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test.service&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HttpExceptionFilter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/http-exception.filter&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">readonly</span> testService<span class="token operator">:</span> TestService<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;:id&#39;</span><span class="token punctuation">)</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">UseFilters</span></span><span class="token punctuation">(</span>HttpExceptionFilter<span class="token punctuation">)</span>
    <span class="token function">findOne</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Param</span></span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ForbiddenException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>testService<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// src/test/test.controller.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
    Controller<span class="token punctuation">,</span>
    Get<span class="token punctuation">,</span>
    Param<span class="token punctuation">,</span>
    UseFilters<span class="token punctuation">,</span>
    ForbiddenException<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TestService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test.service&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HttpExceptionFilter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/http-exception.filter&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">UseFilters</span></span><span class="token punctuation">(</span>HttpExceptionFilter<span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">readonly</span> testService<span class="token operator">:</span> TestService<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;:id&#39;</span><span class="token punctuation">)</span>
    <span class="token function">findOne</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Param</span></span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ForbiddenException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>testService<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全局使用" tabindex="-1"><a class="header-anchor" href="#全局使用"><span>全局使用</span></a></h3><p>使用 <code>ExceptionFilter</code> 装饰器将异常过滤器应用于整个应用程序：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// src/main.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> NestFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.module&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HttpExceptionFilter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./http-exception.filter&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">useGlobalFilters</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpExceptionFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","07-异常过滤器.html.vue"]]),d=JSON.parse('{"path":"/NestJSLearningRecord/07-%E5%BC%82%E5%B8%B8%E8%BF%87%E6%BB%A4%E5%99%A8.html","title":"异常过滤器","lang":"zh-CN","frontmatter":{"title":"异常过滤器","order":7,"date":"2024-03-05T00:00:00.000Z","category":"软件开发","tag":"Nest","excerpt":"Nest 中的异常过滤器","description":"什么是异常过滤器 异常过滤器（Exception Filters）在 Nest 中用于捕获和处理应用程序中的异常情况。当异常发生时，过滤器会捕获并处理该异常，以提供更好的用户体验或记录错误日志。 创建异常过滤器 我们使用命令来创建一个异常过滤器： 过滤器内容如下： 使用异常过滤器 我们可以使用多种方式在 Nest 中使用异常过滤器。 局部使用 使用 @...","head":[["meta",{"property":"og:url","content":"https://blog.azhf8.top/NestJSLearningRecord/07-%E5%BC%82%E5%B8%B8%E8%BF%87%E6%BB%A4%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"茕茕の博客"}],["meta",{"property":"og:title","content":"异常过滤器"}],["meta",{"property":"og:description","content":"什么是异常过滤器 异常过滤器（Exception Filters）在 Nest 中用于捕获和处理应用程序中的异常情况。当异常发生时，过滤器会捕获并处理该异常，以提供更好的用户体验或记录错误日志。 创建异常过滤器 我们使用命令来创建一个异常过滤器： 过滤器内容如下： 使用异常过滤器 我们可以使用多种方式在 Nest 中使用异常过滤器。 局部使用 使用 @..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-20T01:54:03.000Z"}],["meta",{"property":"article:author","content":"茕茕"}],["meta",{"property":"article:tag","content":"Nest"}],["meta",{"property":"article:published_time","content":"2024-03-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-20T01:54:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异常过滤器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-20T01:54:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"茕茕\\",\\"url\\":\\"/AboutMe/\\"}]}"]]},"headers":[{"level":2,"title":"什么是异常过滤器","slug":"什么是异常过滤器","link":"#什么是异常过滤器","children":[]},{"level":2,"title":"创建异常过滤器","slug":"创建异常过滤器","link":"#创建异常过滤器","children":[]},{"level":2,"title":"使用异常过滤器","slug":"使用异常过滤器","link":"#使用异常过滤器","children":[{"level":3,"title":"局部使用","slug":"局部使用","link":"#局部使用","children":[]},{"level":3,"title":"全局使用","slug":"全局使用","link":"#全局使用","children":[]}]}],"git":{"createdTime":1715560636000,"updatedTime":1718848443000,"contributors":[{"name":"zhf521","email":"3407085928@qq.com","commits":3},{"name":"茕茕","email":"61277974+zhf521@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.4,"words":419},"filePathRelative":"NestJSLearningRecord/07-异常过滤器.md","localizedDate":"2024年3月5日","autoDesc":true}');export{k as comp,d as data};
