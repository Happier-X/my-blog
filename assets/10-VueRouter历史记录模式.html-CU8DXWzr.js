import{_ as s,e as i,h as t,o as a}from"./app-9eN6Z4X9.js";const n={};function r(h,e){return a(),i("div",null,e[0]||(e[0]=[t(`<p>在创建路由器实例时，<code>history</code> 配置允许我们在不同的历史模式中进行选择。</p><h2 id="hash-模式" tabindex="-1"><a class="header-anchor" href="#hash-模式"><span>Hash 模式</span></a></h2><p>Hash 模式使用 <code>createWebHashHistory()</code> 创建。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">createRouter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">createWebHashHistory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> router</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> createRouter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  history</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> createWebHashHistory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它在内部传递的 URL 会带有 <code>#</code> 符号，如 <code>http://example.com/#/some/path</code>。</p><p>这部分 URL 不会发送到服务器，因此它对服务器没有影响。</p><h2 id="html5-模式" tabindex="-1"><a class="header-anchor" href="#html5-模式"><span>HTML5 模式</span></a></h2><p>HTML5 模式使用 <code>createWebHistory()</code> 创建。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">createRouter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">createWebHistory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> router</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> createRouter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  history</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> createWebHistory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它的地址栏看起来像这样：<code>http://example.com/some/path</code>。</p><p>URL 会直接发送到服务器。因此，服务器需要正确配置，以便在请求 URL 时返回应用程序的索引 HTML 文件。如果服务器没有正确配置，用户可能会在访问 (刷新) 子 URL 时遇到 404 错误。</p>`,11)]))}const l=s(n,[["render",r],["__file","10-VueRouter历史记录模式.html.vue"]]),o=JSON.parse(`{"path":"/VueRouterStudyNotes/10-VueRouter%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E6%A8%A1%E5%BC%8F.html","title":"Vue Router 历史记录模式","lang":"zh-CN","frontmatter":{"title":"Vue Router 历史记录模式","cover":"https://t.alcy.cc/fj?t=1730088000000","order":10,"date":"2024-10-28T12:00:00.000Z","category":"开发","tag":["Vue","Vue Router"],"excerpt":false,"description":"在创建路由器实例时，history 配置允许我们在不同的历史模式中进行选择。 Hash 模式 Hash 模式使用 createWebHashHistory() 创建。 它在内部传递的 URL 会带有 # 符号，如 http://example.com/#/some/path。 这部分 URL 不会发送到服务器，因此它对服务器没有影响。 HTML5 模式...","head":[["meta",{"property":"og:url","content":"https://blog.happierx.top/VueRouterStudyNotes/10-VueRouter%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Happier's Blog"}],["meta",{"property":"og:title","content":"Vue Router 历史记录模式"}],["meta",{"property":"og:description","content":"在创建路由器实例时，history 配置允许我们在不同的历史模式中进行选择。 Hash 模式 Hash 模式使用 createWebHashHistory() 创建。 它在内部传递的 URL 会带有 # 符号，如 http://example.com/#/some/path。 这部分 URL 不会发送到服务器，因此它对服务器没有影响。 HTML5 模式..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://t.alcy.cc/fj?t=1730088000000"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-16T07:41:07.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://t.alcy.cc/fj?t=1730088000000"}],["meta",{"name":"twitter:image:alt","content":"Vue Router 历史记录模式"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:tag","content":"Vue Router"}],["meta",{"property":"article:published_time","content":"2024-10-28T12:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-16T07:41:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue Router 历史记录模式\\",\\"image\\":[\\"https://t.alcy.cc/fj?t=1730088000000\\"],\\"datePublished\\":\\"2024-10-28T12:00:00.000Z\\",\\"dateModified\\":\\"2025-01-16T07:41:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Happier\\",\\"url\\":\\"/AboutMe/\\"}]}"]]},"git":{"createdTime":1730091984000,"updatedTime":1737013267000,"contributors":[{"name":"赵鸿飞","username":"赵鸿飞","email":"zhaohongfei@vasoyn.com","commits":4,"url":"https://github.com/赵鸿飞"}]},"readingTime":{"minutes":0.76,"words":229},"filePathRelative":"VueRouterStudyNotes/10-VueRouter历史记录模式.md","localizedDate":"2024年10月28日","excerpt":"","autoDesc":true}`);export{l as comp,o as data};
