import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-iWDwcZJO.js";const p={},e=t(`<h2 id="安装需要的库" tabindex="-1"><a class="header-anchor" href="#安装需要的库"><span>安装需要的库</span></a></h2><p>我们使用 multer 库来实现，为了获取更好的类型提示，我们需要安装 multer 的类型支持库</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @types/multer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们创建一个 upload 模块来演示：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nest g res upload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="在模块中引入-multer" tabindex="-1"><a class="header-anchor" href="#在模块中引入-multer"><span>在模块中引入 multer</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// src/upload/upload.module.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./upload.service&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./upload.controller&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> MulterModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/platform-express&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> diskStorage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;multer&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> extname<span class="token punctuation">,</span> join <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 有 register 和 registerAsync 两个方法，前者是同步的，后者是异步的</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span>
        MulterModule<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token comment">// 文件上传完要存放的位置</span>
            storage<span class="token operator">:</span> <span class="token function">diskStorage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                destination<span class="token operator">:</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../uploads&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 存放文件的路径</span>
                <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> callback<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 重新定义文件名，file.originalname 文件的原始名称</span>
                    <span class="token comment">// extname 获取文件后缀</span>
                    <span class="token keyword">const</span> fileName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
                        <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span>
                    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
                    <span class="token comment">// 返回新的名称，第一个参数表示错误，用 null 即可</span>
                    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    controllers<span class="token operator">:</span> <span class="token punctuation">[</span>UploadController<span class="token punctuation">]</span><span class="token punctuation">,</span>
    providers<span class="token operator">:</span> <span class="token punctuation">[</span>UploadService<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UploadModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在控制器中使用-multer" tabindex="-1"><a class="header-anchor" href="#在控制器中使用-multer"><span>在控制器中使用 multer</span></a></h2><p>在控制器中使用 multer 即可实现文件的上传与下载。</p><h3 id="单文件上传" tabindex="-1"><a class="header-anchor" href="#单文件上传"><span>单文件上传</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// src/upload/upload.controller.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
    Controller<span class="token punctuation">,</span>
    Post<span class="token punctuation">,</span>
    UseInterceptors<span class="token punctuation">,</span>
    UploadedFile<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// FileInterceptor 用于单文件上传</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FileInterceptor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/platform-express&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&#39;upload&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UploadController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Post</span></span><span class="token punctuation">(</span><span class="token string">&#39;upload&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// 使用 @UseInterceptors 装饰器，拦截器为 FileInterceptor，参数为 &#39;file&#39;</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">UseInterceptors</span></span><span class="token punctuation">(</span><span class="token function">FileInterceptor</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// UploadedFile 装饰器用于上传单文件</span>
    <span class="token function">upload</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">UploadedFile</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;file:&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多文件上传" tabindex="-1"><a class="header-anchor" href="#多文件上传"><span>多文件上传</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// src/upload/upload.controller.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
    Controller<span class="token punctuation">,</span>
    Post<span class="token punctuation">,</span>
    UseInterceptors<span class="token punctuation">,</span>
    UploadedFiles<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// FilesInterceptor 用于多文件上传</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FilesInterceptor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/platform-express&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&#39;upload&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UploadController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Post</span></span><span class="token punctuation">(</span><span class="token string">&#39;upload&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// 使用 @UseInterceptors 装饰器，拦截器为 FilesInterceptor，参数为：&#39;files&#39;</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">UseInterceptors</span></span><span class="token punctuation">(</span><span class="token function">FilesInterceptor</span><span class="token punctuation">(</span><span class="token string">&#39;files&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// UploadedFiles 装饰器用于上传多文件</span>
    <span class="token function">upload</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">UploadedFiles</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> files<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Express<span class="token punctuation">.</span>Multer<span class="token punctuation">.</span>File<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;files:&#39;</span><span class="token punctuation">,</span> files<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件直接下载" tabindex="-1"><a class="header-anchor" href="#文件直接下载"><span>文件直接下载</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// src/upload/upload.controller.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Controller<span class="token punctuation">,</span> Get<span class="token punctuation">,</span> Query<span class="token punctuation">,</span> Res <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> join <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Response <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&#39;upload&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UploadController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">)</span>
    <span class="token function">download</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Res</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> res<span class="token operator">:</span> Response<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Query</span></span><span class="token punctuation">(</span><span class="token string">&#39;filename&#39;</span><span class="token punctuation">)</span> filename<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../uploads/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用文件流下载" tabindex="-1"><a class="header-anchor" href="#使用文件流下载"><span>使用文件流下载</span></a></h3><p>需要安装 <code>compressing</code> 包：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> compressing
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// src/upload/upload.controller.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Controller<span class="token punctuation">,</span> Get<span class="token punctuation">,</span> Query<span class="token punctuation">,</span> Res <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> join <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Response <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> zip <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;compressing&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&#39;upload&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UploadController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;streamDownload&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">async</span> <span class="token function">streamDownload</span><span class="token punctuation">(</span>
        <span class="token decorator"><span class="token at operator">@</span><span class="token function">Res</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> res<span class="token operator">:</span> Response<span class="token punctuation">,</span>
        <span class="token decorator"><span class="token at operator">@</span><span class="token function">Query</span></span><span class="token punctuation">(</span><span class="token string">&#39;filename&#39;</span><span class="token punctuation">)</span> filename<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../uploads/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> tarStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">zip</span><span class="token punctuation">.</span><span class="token function">Stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> tarStream<span class="token punctuation">.</span><span class="token function">addEntry</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/octet-stream&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span>
            <span class="token string">&#39;Content-Disposition&#39;</span><span class="token punctuation">,</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">attachment; filename=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        tarStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","12-文件上传与下载.html.vue"]]),d=JSON.parse('{"path":"/NestJSLearningRecord/12-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8E%E4%B8%8B%E8%BD%BD.html","title":"文件上传与下载","lang":"zh-CN","frontmatter":{"title":"文件上传与下载","order":12,"date":"2024-03-05T00:00:00.000Z","category":"软件开发","tag":"Nest","description":"安装需要的库 我们使用 multer 库来实现，为了获取更好的类型提示，我们需要安装 multer 的类型支持库 我们创建一个 upload 模块来演示： 在模块中引入 multer 在控制器中使用 multer 在控制器中使用 multer 即可实现文件的上传与下载。 单文件上传 多文件上传 文件直接下载 使用文件流下载 需要安装 compressi...","head":[["meta",{"property":"og:url","content":"https://blog.azhf8.top/NestJSLearningRecord/12-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8E%E4%B8%8B%E8%BD%BD.html"}],["meta",{"property":"og:site_name","content":"茕茕の博客"}],["meta",{"property":"og:title","content":"文件上传与下载"}],["meta",{"property":"og:description","content":"安装需要的库 我们使用 multer 库来实现，为了获取更好的类型提示，我们需要安装 multer 的类型支持库 我们创建一个 upload 模块来演示： 在模块中引入 multer 在控制器中使用 multer 在控制器中使用 multer 即可实现文件的上传与下载。 单文件上传 多文件上传 文件直接下载 使用文件流下载 需要安装 compressi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-22T14:22:47.000Z"}],["meta",{"property":"article:author","content":"茕茕"}],["meta",{"property":"article:tag","content":"Nest"}],["meta",{"property":"article:published_time","content":"2024-03-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-22T14:22:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件上传与下载\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-22T14:22:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"茕茕\\",\\"url\\":\\"/AboutMe/\\"}]}"]]},"headers":[{"level":2,"title":"安装需要的库","slug":"安装需要的库","link":"#安装需要的库","children":[]},{"level":2,"title":"在模块中引入 multer","slug":"在模块中引入-multer","link":"#在模块中引入-multer","children":[]},{"level":2,"title":"在控制器中使用 multer","slug":"在控制器中使用-multer","link":"#在控制器中使用-multer","children":[{"level":3,"title":"单文件上传","slug":"单文件上传","link":"#单文件上传","children":[]},{"level":3,"title":"多文件上传","slug":"多文件上传","link":"#多文件上传","children":[]},{"level":3,"title":"文件直接下载","slug":"文件直接下载","link":"#文件直接下载","children":[]},{"level":3,"title":"使用文件流下载","slug":"使用文件流下载","link":"#使用文件流下载","children":[]}]}],"git":{"createdTime":1715560636000,"updatedTime":1716387767000,"contributors":[{"name":"zhf521","email":"3407085928@qq.com","commits":3}]},"readingTime":{"minutes":1.8,"words":541},"filePathRelative":"NestJSLearningRecord/12-文件上传与下载.md","localizedDate":"2024年3月5日","excerpt":"<h2>安装需要的库</h2>\\n<p>我们使用 multer 库来实现，为了获取更好的类型提示，我们需要安装 multer 的类型支持库</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">npm</span> <span class=\\"token function\\">install</span> @types/multer\\n</code></pre></div><p>我们创建一个 upload 模块来演示：</p>","autoDesc":true}');export{k as comp,d as data};
