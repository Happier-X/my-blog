import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as t,c as p,d as e,e as o}from"./app-CctLzue_.js";const c={},l=o(`<h2 id="vue-实现文字跑马灯效果" tabindex="-1"><a class="header-anchor" href="#vue-实现文字跑马灯效果"><span>Vue 实现文字跑马灯效果</span></a></h2><p>封装了一个组件，用于实现文字跑马灯效果。</p><h3 id="组件源码" tabindex="-1"><a class="header-anchor" href="#组件源码"><span>组件源码</span></a></h3><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- Carousel.vue --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 跑马灯容器 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>containerRef<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 跑马灯 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textOverflow &amp;&amp; &#39;content&#39;<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ animationDuration: \`\${duration}s\`, animationDelay: \`\${props.scrollDelay}s\` }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- 文本内容 --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[{ paddingRight: \`\${props.textGap}px\`, whiteSpace: &#39;nowrap&#39; }, props.textStyle]<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textContentRef<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{
            props.textContent }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- 文本溢出时追加的文本内容 --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[{ paddingRight: \`\${props.textGap}px\`, whiteSpace: &#39;nowrap&#39; }, props.textStyle]<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textOverflow<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{
            props.textContent }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> watch<span class="token punctuation">,</span> nextTick<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 获取跑马灯容器元素</span>
<span class="token keyword">const</span> containerRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取文本内容元素</span>
<span class="token keyword">const</span> textContentRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 判断文本内容是否溢出</span>
<span class="token keyword">const</span> textOverflow <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 动画持续时间</span>
<span class="token keyword">const</span> duration <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 接收参数</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 文本内容</span>
    <span class="token literal-property property">textContent</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 文本间隔</span>
    <span class="token literal-property property">textGap</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 文本滚动速度</span>
    <span class="token literal-property property">scrollSpeed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 文本开始滚动的延迟时间</span>
    <span class="token literal-property property">scrollDelay</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 文本内容样式</span>
    <span class="token literal-property property">textStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 监听文本内容变化</span>
<span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>textContent<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">renderText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 挂载时执行</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">renderText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 渲染文本内容</span>
<span class="token keyword">const</span> <span class="token function-variable function">renderText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取容器宽度和文本内容宽度</span>
    <span class="token keyword">const</span> containerWidth <span class="token operator">=</span> containerRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>
    <span class="token keyword">const</span> textWidth <span class="token operator">=</span> textContentRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>
    <span class="token comment">// 计算动画持续时间</span>
    duration<span class="token punctuation">.</span>value <span class="token operator">=</span> textWidth <span class="token operator">/</span> props<span class="token punctuation">.</span>scrollSpeed<span class="token punctuation">;</span>
    <span class="token comment">// 判断文本内容是否溢出</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>textWidth <span class="token operator">-</span> props<span class="token punctuation">.</span>textGap<span class="token punctuation">)</span> <span class="token operator">&gt;</span> containerWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        textOverflow<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        textOverflow<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.content</span> <span class="token punctuation">{</span>
    <span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token property">animation</span><span class="token punctuation">:</span> move linear infinite<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token atrule"><span class="token rule">@keyframes</span> move</span> <span class="token punctuation">{</span>
    <span class="token selector">0%</span> <span class="token punctuation">{</span>
        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">to</span> <span class="token punctuation">{</span>
        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="组件的使用" tabindex="-1"><a class="header-anchor" href="#组件的使用"><span>组件的使用</span></a></h3><p>注意：组件外的容器必须设置宽度。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- App.vue --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ width: &#39;100px&#39;, backgroundColor: &#39;pink&#39; }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Carousel</span> <span class="token attr-name">:textContent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textContent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:textGap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textGap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:scrollDelay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textStartScrollDelay<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">:scrollSpeed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textScrollSpeed<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:textStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textStyle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Carousel</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Carousel <span class="token keyword">from</span> <span class="token string">&#39;@/components/Carousel.vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> textContent <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;我是一段很长的文字&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> textGap <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> textStartScrollDelay <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> textScrollSpeed <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> textStyle <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token string">&#39;bold&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="效果展示" tabindex="-1"><a class="header-anchor" href="#效果展示"><span>效果展示</span></a></h3>`,8);function u(i,k){const n=a("VuePlayground");return t(),p("div",null,[l,e(n,{title:"%E8%B7%91%E9%A9%AC%E7%81%AF%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA",key:"2040e54f",settings:"%7B%7D",files:"eyJBcHAudnVlIjoiPCEtLSBDYXJvdXNlbC52dWUgLS0%2BXG5cbjx0ZW1wbGF0ZT5cbiAgICA8IS0tIOi3kemprOeBr%2BWuueWZqCAtLT5cbiAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCIgcmVmPVwiY29udGFpbmVyUmVmXCI%2BXG4gICAgICAgIDwhLS0g6LeR6ams54GvIC0tPlxuICAgICAgICA8ZGl2IDpjbGFzcz1cInRleHRPdmVyZmxvdyAmJiAnY29udGVudCdcIlxuICAgICAgICAgICAgOnN0eWxlPVwieyBhbmltYXRpb25EdXJhdGlvbjogYCR7ZHVyYXRpb259c2AsIGFuaW1hdGlvbkRlbGF5OiBgJHtwcm9wcy5zY3JvbGxEZWxheX1zYCB9XCI%2BXG4gICAgICAgICAgICA8IS0tIOaWh%2BacrOWGheWuuSAtLT5cbiAgICAgICAgICAgIDxkaXYgOnN0eWxlPVwiW3sgcGFkZGluZ1JpZ2h0OiBgJHtwcm9wcy50ZXh0R2FwfXB4YCwgd2hpdGVTcGFjZTogJ25vd3JhcCcgfSwgcHJvcHMudGV4dFN0eWxlXVwiXG4gICAgICAgICAgICAgICAgcmVmPVwidGV4dENvbnRlbnRSZWZcIj57e1xuICAgICAgICAgICAgcHJvcHMudGV4dENvbnRlbnQgfX08L2Rpdj5cbiAgICAgICAgICAgIDwhLS0g5paH5pys5rqi5Ye65pe26L%2B95Yqg55qE5paH5pys5YaF5a65IC0tPlxuICAgICAgICAgICAgPGRpdiA6c3R5bGU9XCJbeyBwYWRkaW5nUmlnaHQ6IGAke3Byb3BzLnRleHRHYXB9cHhgLCB3aGl0ZVNwYWNlOiAnbm93cmFwJyB9LCBwcm9wcy50ZXh0U3R5bGVdXCJcbiAgICAgICAgICAgICAgICB2LXNob3c9XCJ0ZXh0T3ZlcmZsb3dcIj57e1xuICAgICAgICAgICAgcHJvcHMudGV4dENvbnRlbnQgfX08L2Rpdj5cbiAgICAgICAgPC9kaXY%2BXG4gICAgPC9kaXY%2BXG48L3RlbXBsYXRlPlxuXG48c2NyaXB0IHNldHVwPlxuaW1wb3J0IHsgcmVmLCB3YXRjaCwgbmV4dFRpY2ssIG9uTW91bnRlZCB9IGZyb20gJ3Z1ZSc7XG4vLyDojrflj5bot5Hpqaznga%2FlrrnlmajlhYPntKBcbmNvbnN0IGNvbnRhaW5lclJlZiA9IHJlZihudWxsKTtcbi8vIOiOt%2BWPluaWh%2BacrOWGheWuueWFg%2Be0oFxuY29uc3QgdGV4dENvbnRlbnRSZWYgPSByZWYobnVsbCk7XG4vLyDliKTmlq3mlofmnKzlhoXlrrnmmK%2FlkKbmuqLlh7pcbmNvbnN0IHRleHRPdmVyZmxvdyA9IHJlZih0cnVlKTtcbi8vIOWKqOeUu%2BaMgee7reaXtumXtFxuY29uc3QgZHVyYXRpb24gPSByZWYoMCk7XG4vLyDmjqXmlLblj4LmlbBcbmNvbnN0IHByb3BzID0gZGVmaW5lUHJvcHMoe1xuICAgIC8vIOaWh%2BacrOWGheWuuVxuICAgIHRleHRDb250ZW50OiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICAvLyDmlofmnKzpl7TpmpRcbiAgICB0ZXh0R2FwOiB7XG4gICAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgICAgZGVmYXVsdDogNTAsXG4gICAgfSxcbiAgICAvLyDmlofmnKzmu5rliqjpgJ%2FluqZcbiAgICBzY3JvbGxTcGVlZDoge1xuICAgICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICAgIGRlZmF1bHQ6IDEwLFxuICAgIH0sXG4gICAgLy8g5paH5pys5byA5aeL5rua5Yqo55qE5bu26L%2Bf5pe26Ze0XG4gICAgc2Nyb2xsRGVsYXk6IHtcbiAgICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgICBkZWZhdWx0OiAwLjUsXG4gICAgfSxcbiAgICAvLyDmlofmnKzlhoXlrrnmoLflvI9cbiAgICB0ZXh0U3R5bGU6IHtcbiAgICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgIH1cbn0pO1xuLy8g55uR5ZCs5paH5pys5YaF5a655Y%2BY5YyWXG53YXRjaCgoKSA9PiBwcm9wcy50ZXh0Q29udGVudCwgKCkgPT4ge1xuICAgIG5leHRUaWNrKCgpID0%2BIHtcbiAgICAgICAgcmVuZGVyVGV4dCgpO1xuICAgIH0pO1xufSk7XG4vLyDmjILovb3ml7bmiafooYxcbm9uTW91bnRlZCgoKSA9PiB7XG4gICAgbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICByZW5kZXJUZXh0KCk7XG4gICAgfSk7XG59KTtcbi8vIOa4suafk%2BaWh%2BacrOWGheWuuVxuY29uc3QgcmVuZGVyVGV4dCA9ICgpID0%2BIHtcbiAgICAvLyDojrflj5blrrnlmajlrr3luqblkozmlofmnKzlhoXlrrnlrr3luqZcbiAgICBjb25zdCBjb250YWluZXJXaWR0aCA9IGNvbnRhaW5lclJlZi52YWx1ZS5vZmZzZXRXaWR0aDtcbiAgICBjb25zdCB0ZXh0V2lkdGggPSB0ZXh0Q29udGVudFJlZi52YWx1ZS5vZmZzZXRXaWR0aDtcbiAgICAvLyDorqHnrpfliqjnlLvmjIHnu63ml7bpl7RcbiAgICBkdXJhdGlvbi52YWx1ZSA9IHRleHRXaWR0aCAvIHByb3BzLnNjcm9sbFNwZWVkO1xuICAgIC8vIOWIpOaWreaWh%2BacrOWGheWuueaYr%2BWQpua6ouWHulxuICAgIGlmICgodGV4dFdpZHRoIC0gcHJvcHMudGV4dEdhcCkgPiBjb250YWluZXJXaWR0aCkge1xuICAgICAgICB0ZXh0T3ZlcmZsb3cudmFsdWUgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHRleHRPdmVyZmxvdy52YWx1ZSA9IGZhbHNlO1xuICAgIH1cbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIHNjb3BlZD5cbi5jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG4uY29udGVudCB7XG4gICAgZmxleDogbm9uZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYW5pbWF0aW9uOiBtb3ZlIGxpbmVhciBpbmZpbml0ZTtcbn1cbkBrZXlmcmFtZXMgbW92ZSB7XG4gICAgMCUge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgfVxuICAgIHRvIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIH1cbn1cbjwvc3R5bGU%2BXG4ifQ%3D%3D"})])}const m=s(c,[["render",u],["__file","04-文字跑马灯效果的实现.html.vue"]]),v=JSON.parse('{"path":"/DevelopmentSkills/04-%E6%96%87%E5%AD%97%E8%B7%91%E9%A9%AC%E7%81%AF%E6%95%88%E6%9E%9C%E7%9A%84%E5%AE%9E%E7%8E%B0.html","title":"文字跑马灯效果的实现","lang":"zh-CN","frontmatter":{"title":"文字跑马灯效果的实现","order":4,"date":"2024-03-18T00:00:00.000Z","category":"软件开发","tag":"Vue","description":"Vue 实现文字跑马灯效果 封装了一个组件，用于实现文字跑马灯效果。 组件源码 组件的使用 注意：组件外的容器必须设置宽度。 效果展示","head":[["meta",{"property":"og:url","content":"https://blog.azhf8.top/DevelopmentSkills/04-%E6%96%87%E5%AD%97%E8%B7%91%E9%A9%AC%E7%81%AF%E6%95%88%E6%9E%9C%E7%9A%84%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"茕茕の博客"}],["meta",{"property":"og:title","content":"文字跑马灯效果的实现"}],["meta",{"property":"og:description","content":"Vue 实现文字跑马灯效果 封装了一个组件，用于实现文字跑马灯效果。 组件源码 组件的使用 注意：组件外的容器必须设置宽度。 效果展示"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-09T07:27:09.000Z"}],["meta",{"property":"article:author","content":"茕茕"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2024-03-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-09T07:27:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文字跑马灯效果的实现\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-09T07:27:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"茕茕\\",\\"url\\":\\"/AboutMe/\\"}]}"]]},"headers":[{"level":2,"title":"Vue 实现文字跑马灯效果","slug":"vue-实现文字跑马灯效果","link":"#vue-实现文字跑马灯效果","children":[{"level":3,"title":"组件源码","slug":"组件源码","link":"#组件源码","children":[]},{"level":3,"title":"组件的使用","slug":"组件的使用","link":"#组件的使用","children":[]},{"level":3,"title":"效果展示","slug":"效果展示","link":"#效果展示","children":[]}]}],"git":{"createdTime":1715560289000,"updatedTime":1717918029000,"contributors":[{"name":"zhf521","email":"3407085928@qq.com","commits":6}]},"readingTime":{"minutes":2.66,"words":797},"filePathRelative":"DevelopmentSkills/04-文字跑马灯效果的实现.md","localizedDate":"2024年3月18日","excerpt":"<h2>Vue 实现文字跑马灯效果</h2>\\n<p>封装了一个组件，用于实现文字跑马灯效果。</p>\\n<h3>组件源码</h3>\\n<div class=\\"language-vue\\" data-ext=\\"vue\\" data-title=\\"vue\\"><pre class=\\"language-vue\\"><code><span class=\\"token comment\\">&lt;!-- Carousel.vue --&gt;</span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token comment\\">&lt;!-- 跑马灯容器 --&gt;</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>container<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">ref</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>containerRef<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token comment\\">&lt;!-- 跑马灯 --&gt;</span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">:class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>textOverflow &amp;&amp; \'content\'<span class=\\"token punctuation\\">\\"</span></span>\\n            <span class=\\"token attr-name\\">:style</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>{ animationDuration: `${duration}s`, animationDelay: `${props.scrollDelay}s` }<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n            <span class=\\"token comment\\">&lt;!-- 文本内容 --&gt;</span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">:style</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>[{ paddingRight: `${props.textGap}px`, whiteSpace: \'nowrap\' }, props.textStyle]<span class=\\"token punctuation\\">\\"</span></span>\\n                <span class=\\"token attr-name\\">ref</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>textContentRef<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>{{\\n            props.textContent }}<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n            <span class=\\"token comment\\">&lt;!-- 文本溢出时追加的文本内容 --&gt;</span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">:style</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>[{ paddingRight: `${props.textGap}px`, whiteSpace: \'nowrap\' }, props.textStyle]<span class=\\"token punctuation\\">\\"</span></span>\\n                <span class=\\"token attr-name\\">v-show</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>textOverflow<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>{{\\n            props.textContent }}<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span> <span class=\\"token attr-name\\">setup</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> ref<span class=\\"token punctuation\\">,</span> watch<span class=\\"token punctuation\\">,</span> nextTick<span class=\\"token punctuation\\">,</span> onMounted <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\'vue\'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 获取跑马灯容器元素</span>\\n<span class=\\"token keyword\\">const</span> containerRef <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 获取文本内容元素</span>\\n<span class=\\"token keyword\\">const</span> textContentRef <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 判断文本内容是否溢出</span>\\n<span class=\\"token keyword\\">const</span> textOverflow <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 动画持续时间</span>\\n<span class=\\"token keyword\\">const</span> duration <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 接收参数</span>\\n<span class=\\"token keyword\\">const</span> props <span class=\\"token operator\\">=</span> <span class=\\"token function\\">defineProps</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 文本内容</span>\\n    <span class=\\"token literal-property property\\">textContent</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> String<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\'\'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// 文本间隔</span>\\n    <span class=\\"token literal-property property\\">textGap</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> Number<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">50</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// 文本滚动速度</span>\\n    <span class=\\"token literal-property property\\">scrollSpeed</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> Number<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// 文本开始滚动的延迟时间</span>\\n    <span class=\\"token literal-property property\\">scrollDelay</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> Number<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">0.5</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// 文本内容样式</span>\\n    <span class=\\"token literal-property property\\">textStyle</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> Object<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 监听文本内容变化</span>\\n<span class=\\"token function\\">watch</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> props<span class=\\"token punctuation\\">.</span>textContent<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">nextTick</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">renderText</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 挂载时执行</span>\\n<span class=\\"token function\\">onMounted</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">nextTick</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">renderText</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 渲染文本内容</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">renderText</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 获取容器宽度和文本内容宽度</span>\\n    <span class=\\"token keyword\\">const</span> containerWidth <span class=\\"token operator\\">=</span> containerRef<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>offsetWidth<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">const</span> textWidth <span class=\\"token operator\\">=</span> textContentRef<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>offsetWidth<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 计算动画持续时间</span>\\n    duration<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> textWidth <span class=\\"token operator\\">/</span> props<span class=\\"token punctuation\\">.</span>scrollSpeed<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 判断文本内容是否溢出</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>textWidth <span class=\\"token operator\\">-</span> props<span class=\\"token punctuation\\">.</span>textGap<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> containerWidth<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        textOverflow<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n        textOverflow<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>style</span> <span class=\\"token attr-name\\">scoped</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token style\\"><span class=\\"token language-css\\">\\n<span class=\\"token selector\\">.container</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token property\\">width</span><span class=\\"token punctuation\\">:</span> 100%<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token property\\">display</span><span class=\\"token punctuation\\">:</span> flex<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token property\\">flex-grow</span><span class=\\"token punctuation\\">:</span> 1<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token property\\">overflow</span><span class=\\"token punctuation\\">:</span> hidden<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token selector\\">.content</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token property\\">flex</span><span class=\\"token punctuation\\">:</span> none<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token property\\">display</span><span class=\\"token punctuation\\">:</span> flex<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token property\\">align-items</span><span class=\\"token punctuation\\">:</span> center<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token property\\">animation</span><span class=\\"token punctuation\\">:</span> move linear infinite<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token atrule\\"><span class=\\"token rule\\">@keyframes</span> move</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token selector\\">0%</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token property\\">transform</span><span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">translateX</span><span class=\\"token punctuation\\">(</span>0<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token selector\\">to</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token property\\">transform</span><span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">translateX</span><span class=\\"token punctuation\\">(</span>-50%<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>style</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div>","autoDesc":true}');export{m as comp,v as data};
