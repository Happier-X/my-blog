import{_ as o,e as r,f as e,k as n,o as a}from"./app-Bk0b1PcK.js";const c={};function l(i,t){return a(),r("div",null,[t[0]||(t[0]=e("h1",{id:"electron-进程沙盒化",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#electron-进程沙盒化"},[e("span",null,"Electron 进程沙盒化")])],-1)),n(" 当 Electron 中的渲染进程被沙盒化时，它们的行为与常规 Chrome 渲染器一样。一个沙盒化的渲染器不会有 Node.js 环境。在沙盒中，渲染进程只能通过进程间通讯 (inter-process communication，IPC) 委派任务给主进程的方式来执行需权限的任务 (例如：文件系统交互，对系统进行更改或生成子进程)。如果我们想在 preload.js 中使用 Node.js 与 Electron 高级应用，如 `shell`、`fs` 等，可以通过关闭沙盒完成。当然通过开启 `nodeIntegration` 也可以实现该功能，但这会让 renderer.js 也可以使用 Node.js 高级 api，这是不安全的。所以，开启沙盒，可以赋予 preload.js 高级权限，但不影响 renderer.js。\n\n+ Electron 默认是开启沙盒模式的。\n+ `nodeIntegration:true` 时会自动开启沙盒。\n+ `sandbox: false` 时 preload.js 可以使用 Node.js、Electron 的高级 API，如 `fs` 模块。 ")])}const s=o(c,[["render",l],["__file","04-Electron进程沙盒化.html.vue"]]),m=JSON.parse(`{"path":"/ElectronStudyNotes/04-Electron%E8%BF%9B%E7%A8%8B%E6%B2%99%E7%9B%92%E5%8C%96.html","title":"Electron 进程沙盒化","lang":"zh-CN","frontmatter":{"cover":"https://t.alcy.cc/fj?t=20250407090000","order":4,"date":"2025-04-07T09:00:00.000Z","category":"开发","tag":"Electron","excerpt":false,"description":"Electron 进程沙盒化","head":[["meta",{"property":"og:url","content":"https://blog.happierx.top/ElectronStudyNotes/04-Electron%E8%BF%9B%E7%A8%8B%E6%B2%99%E7%9B%92%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"Happier's Blog"}],["meta",{"property":"og:title","content":"Electron 进程沙盒化"}],["meta",{"property":"og:description","content":"Electron 进程沙盒化"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://t.alcy.cc/fj?t=20250407090000"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-07T00:58:33.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://t.alcy.cc/fj?t=20250407090000"}],["meta",{"name":"twitter:image:alt","content":"Electron 进程沙盒化"}],["meta",{"property":"article:tag","content":"Electron"}],["meta",{"property":"article:published_time","content":"2025-04-07T09:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-07T00:58:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Electron 进程沙盒化\\",\\"image\\":[\\"https://t.alcy.cc/fj?t=20250407090000\\"],\\"datePublished\\":\\"2025-04-07T09:00:00.000Z\\",\\"dateModified\\":\\"2025-04-07T00:58:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Happier\\",\\"url\\":\\"/AboutMe/\\"}]}"]]},"git":{"createdTime":1743987513000,"updatedTime":1743987513000,"contributors":[{"name":"赵鸿飞","username":"赵鸿飞","email":"zhaohongfei@vasoyn.com","commits":1,"url":"https://github.com/赵鸿飞"}]},"readingTime":{"minutes":0.85,"words":256},"filePathRelative":"ElectronStudyNotes/04-Electron进程沙盒化.md","localizedDate":"2025年4月7日","excerpt":"","autoDesc":true}`);export{s as comp,m as data};
