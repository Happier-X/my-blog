import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as i,c as p,d as a,w as t,e as o,a as n,b as s}from"./app-BzpBGKhf.js";const r={},d=o(`<h2 id="单行文本溢出显示省略号" tabindex="-1"><a class="header-anchor" href="#单行文本溢出显示省略号"><span>单行文本溢出显示省略号</span></a></h2><ol><li>使用 <code>white-space</code> 属性来指定文本的处理方式，将其设置为 <code>nowrap</code>，表示不允许换行。</li><li>使用 <code>text-overflow</code> 属性来指定溢出文本的处理方式，将其设置为 <code>ellipsis</code>，表示使用省略号来代替溢出的文本。</li><li>为了让 <code>text-overflow</code> 属性生效，还需要将 <code>overflow</code> 属性设置为 <code>hidden</code> 或 <code>clip</code>。</li></ol><p>综上，可以这样写：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),u=n("div",{class:"language-html line-numbers-mode","data-ext":"html","data-title":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("我是一段很长的文字很长很长很长"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),m=n("div",{class:"language-css line-numbers-mode","data-ext":"css","data-title":"css"},[n("pre",{class:"language-css"},[n("code",null,[n("span",{class:"token selector"},"div"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),s("200px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"white-space"),n("span",{class:"token punctuation"},":"),s(" nowrap"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"overflow"),n("span",{class:"token punctuation"},":"),s(" hidden"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"text-overflow"),n("span",{class:"token punctuation"},":"),s(" ellipsis"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),k=o(`<h2 id="多行文本溢出显示省略号" tabindex="-1"><a class="header-anchor" href="#多行文本溢出显示省略号"><span>多行文本溢出显示省略号</span></a></h2><ol><li><p>使用<code>-webkit-line-clamp</code>来限制在一个块元素显示的文本的行数。</p></li><li><p>使用<code>display: -webkit-box;</code>设置该盒子作为弹性伸缩盒子模型显示。</p></li><li><p>使用<code>-webkit-box-orient</code>属性设置伸缩盒对象的子元素的排列方式。</p></li><li><p>使用<code>text-overflow: ellipsis;</code>属性设置省略号来代替溢出的文本。</p></li></ol><p>适用于 WebKit 浏览器或移动端（绝大部分是 WebKit 内核的）浏览器</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.ellipsis</span> <span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>
  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>
  <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
  <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),v=n("div",{class:"language-html line-numbers-mode","data-ext":"html","data-title":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("ellipsis"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("我是一段很长的文字很长很长很长，我不知道写什么了，我要一直写，一直写，一直写，让它变得超级长，超级长，超级长，超级长。"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-css line-numbers-mode","data-ext":"css","data-title":"css"},[n("pre",{class:"language-css"},[n("code",null,[n("span",{class:"token selector"},".ellipsis"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),s("500px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"overflow"),n("span",{class:"token punctuation"},":"),s(" hidden"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"display"),n("span",{class:"token punctuation"},":"),s(" -webkit-box"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"text-overflow"),n("span",{class:"token punctuation"},":"),s(" ellipsis"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"-webkit-line-clamp"),n("span",{class:"token punctuation"},":"),s(" 2"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"-webkit-box-orient"),n("span",{class:"token punctuation"},":"),s(" vertical"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function b(y,g){const e=c("CodeDemo");return i(),p("div",null,[d,a(e,{id:"code-demo-24",type:"normal",title:"%E6%95%88%E6%9E%9C%E6%BC%94%E7%A4%BA",code:"eJyrVsooyc1RslKySckss3vWMfHZjPVPdjQ8W7f16b6Ol1P3P5/V8mxa+9O10yFcZNJGH6QlJk9JRym5uBhoBJCrUB2Tp6BQnplSkmFlZGBQUGEN5mdklqTqFhckJqdaKeTllxclFoDF88tSi9Jy8sutFDIyU1JS88CCJakVJboImdScnMyC4sxioFwt0K5aAAMQTf0="},{default:t(()=>[u,m]),_:1}),k,a(e,{id:"code-demo-57",type:"normal",title:"%E6%95%88%E6%9E%9C%E6%BC%94%E7%A4%BA",code:"eJyrVsooyc1RslKyScksU0jOSSwuto1RSs3JySwoziyOUbJ71jHx2Yz1T3Y0PFu39em+jpdT9z+f1fJsWvvTtdMhXGTy/Z4eoPonO3qfz1/6snHy07aZT3Y3PNnZ8WRXG0TqxbJGoFHPZ28BSgFFcLFfrFv5dF3z0/4ZT/dNf7Gt9fmu5RDDCbIfNzTZ6AN9YheTp6SjlFxcDPSZHsw3CtUxeQoK5ZkpJRlWpgYGBRXWIH5+WWpRWk5+uZVCRmZKSmoeWDAls7ggJ7HSSkG3PDUpO7NENykforoktaJEF6EFZjRYDqY2JzMvVRcYlLkFVgpGKDJAU3TzizJT80qsFIBmlGQmJ+YAFdQCXVsLAM0Iymk="},{default:t(()=>[v,h]),_:1})])}const x=l(r,[["render",b],["__file","08-文本溢出的处理.html.vue"]]),_=JSON.parse('{"path":"/DevelopmentSkills/08-%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9A%84%E5%A4%84%E7%90%86.html","title":"文本溢出的处理","lang":"zh-CN","frontmatter":{"title":"文本溢出的处理","order":8,"date":"2024-04-29T00:00:00.000Z","category":"软件开发","tag":"CSS","excerpt":"文本溢出时的处理方式","description":"单行文本溢出显示省略号 使用 white-space 属性来指定文本的处理方式，将其设置为 nowrap，表示不允许换行。 使用 text-overflow 属性来指定溢出文本的处理方式，将其设置为 ellipsis，表示使用省略号来代替溢出的文本。 为了让 text-overflow 属性生效，还需要将 overflow 属性设置为 hidden 或...","head":[["meta",{"property":"og:url","content":"https://blog.azhf8.top/DevelopmentSkills/08-%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9A%84%E5%A4%84%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"茕茕の博客"}],["meta",{"property":"og:title","content":"文本溢出的处理"}],["meta",{"property":"og:description","content":"单行文本溢出显示省略号 使用 white-space 属性来指定文本的处理方式，将其设置为 nowrap，表示不允许换行。 使用 text-overflow 属性来指定溢出文本的处理方式，将其设置为 ellipsis，表示使用省略号来代替溢出的文本。 为了让 text-overflow 属性生效，还需要将 overflow 属性设置为 hidden 或..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-20T01:40:59.000Z"}],["meta",{"property":"article:author","content":"茕茕"}],["meta",{"property":"article:tag","content":"CSS"}],["meta",{"property":"article:published_time","content":"2024-04-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-20T01:40:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文本溢出的处理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-20T01:40:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"茕茕\\",\\"url\\":\\"/AboutMe/\\"}]}"]]},"headers":[{"level":2,"title":"单行文本溢出显示省略号","slug":"单行文本溢出显示省略号","link":"#单行文本溢出显示省略号","children":[]},{"level":2,"title":"多行文本溢出显示省略号","slug":"多行文本溢出显示省略号","link":"#多行文本溢出显示省略号","children":[]}],"git":{"createdTime":1715560289000,"updatedTime":1718847659000,"contributors":[{"name":"zhf521","email":"3407085928@qq.com","commits":3},{"name":"茕茕","email":"61277974+zhf521@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.38,"words":413},"filePathRelative":"DevelopmentSkills/08-文本溢出的处理.md","localizedDate":"2024年4月29日","autoDesc":true}');export{x as comp,_ as data};
